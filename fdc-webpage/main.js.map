{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/config-download/config-download.component.ts","./src/app/components/config-download/config-download.component.html","./src/app/components/config-upload/config-upload.component.ts","./src/app/components/config-upload/config-upload.component.html","./src/app/components/configuration/configuration.component.ts","./src/app/components/configuration/configuration.component.html","./src/app/components/confirm-dialog/confirm-dialog.component.ts","./src/app/components/confirm-dialog/confirm-dialog.component.html","./src/app/components/create-user/create-user.component.ts","./src/app/components/create-user/create-user.component.html","./src/app/components/damper-groups/damper-groups.component.ts","./src/app/components/damper-groups/damper-groups.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/edit-damper-group/edit-damper-group.component.ts","./src/app/components/edit-damper-group/edit-damper-group.component.html","./src/app/components/edit-damper-mode/edit-damper-mode.component.ts","./src/app/components/edit-damper-mode/edit-damper-mode.component.html","./src/app/components/edit-fda/edit-fda.component.ts","./src/app/components/edit-fda/edit-fda.component.html","./src/app/components/edit-fdc-time/edit-fdc-time.component.ts","./src/app/components/edit-fdc-time/edit-fdc-time.component.html","./src/app/components/edit-input/edit-input.component.ts","./src/app/components/edit-input/edit-input.component.html","./src/app/components/edit-mail-template/edit-mail-template.component.ts","./src/app/components/edit-mail-template/edit-mail-template.component.html","./src/app/components/edit-output/edit-output.component.ts","./src/app/components/edit-output/edit-output.component.html","./src/app/components/fda-replacement/fda-replacement.component.ts","./src/app/components/fda-replacement/fda-replacement.component.html","./src/app/components/fdas/fdas.component.ts","./src/app/components/fdas/fdas.component.html","./src/app/components/forced-password-change/forced-password-change.component.ts","./src/app/components/forced-password-change/forced-password-change.component.html","./src/app/components/inputs/inputs.component.ts","./src/app/components/inputs/inputs.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/mail-templates/mail-templates.component.ts","./src/app/components/mail-templates/mail-templates.component.html","./src/app/components/maintenance-mode/maintenance-mode.component.ts","./src/app/components/maintenance-mode/maintenance-mode.component.html","./src/app/components/menu-bar/menu-bar.component.ts","./src/app/components/menu-bar/menu-bar.component.html","./src/app/components/messagebox/messagebox.component.ts","./src/app/components/messagebox/messagebox.component.html","./src/app/components/outputs/outputs.component.ts","./src/app/components/outputs/outputs.component.html","./src/app/components/password-change/password-change.component.ts","./src/app/components/password-change/password-change.component.html","./src/app/components/status-symbols/status-symbols.component.ts","./src/app/components/status-symbols/status-symbols.component.html","./src/app/components/subcomponent/password-repeat/password-repeat.component.ts","./src/app/components/subcomponent/password-repeat/password-repeat.component.html","./src/app/components/system-health/system-health.component.ts","./src/app/components/system-health/system-health.component.html","./src/app/components/toast/toast.component.ts","./src/app/components/toast/toast.component.html","./src/app/directives/autofocus.directive.ts","./src/app/services/authentication/auth-guard.service.ts","./src/app/services/authentication/auth-interceptor.provider.ts","./src/app/services/authentication/auth.service.ts","./src/app/services/authentication/role-guard.service.ts","./src/app/services/authentication/token-storage.service.ts","./src/app/services/authentication/user.service.ts","./src/app/services/cookie.service.ts","./src/app/services/dto-services/damper-group.service.ts","./src/app/services/dto-services/dampermode-change.service.ts","./src/app/services/dto-services/fda.service.ts","./src/app/services/dto-services/input.service.ts","./src/app/services/dto-services/mail-template.service.ts","./src/app/services/dto-services/maintenance-mode.service.ts","./src/app/services/dto-services/output.service.ts","./src/app/services/dto-services/validity-check.service.ts","./src/app/services/fdc.service.ts","./src/app/services/logout.service.ts","./src/app/services/mailer.service.ts","./src/app/services/socket-connection.service.ts","./src/app/services/sync.service.ts","./src/app/services/system-health.service.ts","./src/app/services/toast-service.service.ts","./src/app/utils/locationUtils.ts","./src/app/utils/objectUtils.ts","./src/app/validators/damperGroupNameValidator.ts","./src/app/validators/inputValidators.ts","./src/app/validators/mailTemplateValidators.ts","./src/app/validators/outputValidators.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AuthService} from \"./services/authentication/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend-app';\n\n  constructor(public authService: AuthService) { }\n}\n","<app-menu-bar></app-menu-bar>\n<div class=\"container mt-5 pt-5 mb-5\">\n  <div class=\"d-flex flex-column flex-lg-row mb-3\">\n    <div class=\"col-12 accordion-level-1\" [ngClass]=\"{\n      'col-lg-6': authService.isLoggedIn() && !authService.mustChangePassword(),\n       'pe-lg-2': authService.isLoggedIn() && !authService.mustChangePassword()\n    }\">\n      <app-system-health></app-system-health>\n    </div>\n    <div *ngIf=\"authService.isLoggedIn() && !authService.mustChangePassword()\" class=\"col-12 col-lg-6 mt-3 mt-lg-0 ps-lg-2 accordion-level-1\">\n      <app-maintenance-mode></app-maintenance-mode>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n  <div id=\"error-log\" class=\"mt-3 bg-warning\"></div>\n</div>\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\n\n","import {NgModule} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {authInterceptor} from './services/authentication/auth-interceptor.provider';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {NgbModalConfig, NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { MenuBarComponent } from './components/menu-bar/menu-bar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {AuthGuardService as AuthGuard} from \"./services/authentication/auth-guard.service\";\r\nimport {RoleGuardService as RoleGuard} from \"./services/authentication/role-guard.service\";\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ConfigurationComponent } from './components/configuration/configuration.component';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\nimport { InputsComponent } from './components/inputs/inputs.component';\r\nimport { OutputsComponent } from './components/outputs/outputs.component';\r\nimport { MailTemplatesComponent } from './components/mail-templates/mail-templates.component';\r\nimport { FdasComponent } from './components/fdas/fdas.component';\r\nimport { DamperGroupsComponent } from './components/damper-groups/damper-groups.component';\r\nimport { EditDamperGroupComponent } from './components/edit-damper-group/edit-damper-group.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { EditInputComponent } from './components/edit-input/edit-input.component';\r\nimport { EditOutputComponent } from './components/edit-output/edit-output.component';\r\nimport { EditMailTemplateComponent } from './components/edit-mail-template/edit-mail-template.component';\r\nimport { EditFdaComponent } from './components/edit-fda/edit-fda.component';\r\nimport {SocketIoConfig, SocketIoModule} from \"ngx-socket-io\";\r\nimport {TranslateLoader, TranslateModule, TranslateService} from \"@ngx-translate/core\";\r\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\r\nimport {CookieService} from \"./services/cookie.service\";\r\nimport {LogoutService} from \"./services/logout.service\";\r\nimport {DamperGroupService} from \"./services/dto-services/damper-group.service\";\r\nimport {FdcService} from \"./services/fdc.service\";\r\nimport {InputService} from \"./services/dto-services/input.service\";\r\nimport {OutputService} from \"./services/dto-services/output.service\";\r\nimport {FdaService} from \"./services/dto-services/fda.service\";\r\nimport {MailTemplateService} from \"./services/dto-services/mail-template.service\";\r\nimport {MailerService} from \"./services/mailer.service\";\r\nimport {SocketConnectionService} from \"./services/socket-connection.service\";\r\nimport { StatusSymbolsComponent } from './components/status-symbols/status-symbols.component';\r\nimport {AuthService} from \"./services/authentication/auth.service\";\r\nimport { EditDamperModeComponent } from './components/edit-damper-mode/edit-damper-mode.component';\r\nimport { FdaReplacementComponent } from './components/fda-replacement/fda-replacement.component';\r\nimport { EditFdcTimeComponent } from './components/edit-fdc-time/edit-fdc-time.component';\r\nimport { SystemHealthComponent } from './components/system-health/system-health.component';\r\nimport { MaintenanceModeComponent } from './components/maintenance-mode/maintenance-mode.component';\r\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\r\nimport { MessageboxComponent } from './components/messagebox/messagebox.component';\r\nimport { ConfigDownloadComponent } from './components/config-download/config-download.component';\r\nimport { ConfigUploadComponent } from './components/config-upload/config-upload.component';\r\nimport {FileSaverModule} from \"ngx-filesaver\";\r\nimport {NgxDropzoneModule} from \"ngx-dropzone\";\r\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\r\nimport { PasswordChangeComponent } from './components/password-change/password-change.component';\r\nimport { CreateUserComponent } from './components/create-user/create-user.component';\r\nimport { PasswordRepeatComponent } from './components/subcomponent/password-repeat/password-repeat.component';\r\nimport { ForcedPasswordChangeComponent } from './components/forced-password-change/forced-password-change.component';\r\nimport {MaintenanceModeService} from \"./services/dto-services/maintenance-mode.service\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'dashboard', component: DashboardComponent},\r\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n  {path: 'configuration', component: ConfigurationComponent, canActivate: [AuthGuard, RoleGuard], data: {expectedRole: ['ADMIN', 'SERVICE']}},\r\n  {path: 'fda-config', component: FdasComponent, canActivate: [AuthGuard, RoleGuard], data: {expectedRole: ['ADMIN']}},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'forced-password-change', component: ForcedPasswordChangeComponent}\r\n];\r\n\r\ndeclare var window: any;\r\nconst location = window.location;\r\nconst socketIoConfig: SocketIoConfig = { url: `${location.protocol}//${location.hostname}`, options: {path: '/websocket'}};\r\n\r\n// AoT requires an exported function for factories\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MenuBarComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    ConfigurationComponent,\r\n    ToastComponent,\r\n    InputsComponent,\r\n    OutputsComponent,\r\n    MailTemplatesComponent,\r\n    FdasComponent,\r\n    DamperGroupsComponent,\r\n    EditDamperGroupComponent,\r\n    AutofocusDirective,\r\n    EditInputComponent,\r\n    EditOutputComponent,\r\n    EditMailTemplateComponent,\r\n    EditFdaComponent,\r\n    StatusSymbolsComponent,\r\n    EditDamperModeComponent,\r\n    FdaReplacementComponent,\r\n    EditFdcTimeComponent,\r\n    SystemHealthComponent,\r\n    MaintenanceModeComponent,\r\n    MessageboxComponent,\r\n    ConfigDownloadComponent,\r\n    ConfigUploadComponent,\r\n    ConfirmDialogComponent,\r\n    PasswordChangeComponent,\r\n    CreateUserComponent,\r\n    PasswordRepeatComponent,\r\n    ForcedPasswordChangeComponent\r\n  ],\r\n  imports: [\r\n    FileSaverModule,\r\n    NgxDropzoneModule,\r\n    BrowserModule,\r\n    NgbModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      },\r\n      defaultLanguage: 'en'\r\n    }),\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(routes),\r\n    SocketIoModule.forRoot(socketIoConfig)\r\n  ],\r\n  providers: [\r\n    authInterceptor,\r\n    AuthGuard,\r\n    RoleGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  interval = 2000;\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  constructor(private translate: TranslateService, private cookieService: CookieService,\r\n              private logoutService: LogoutService, private damperGroupService: DamperGroupService,\r\n              private fdcService: FdcService, private inputService: InputService,\r\n              private outputService: OutputService, private fdaService: FdaService,\r\n              private mailTemplateService: MailTemplateService, private mailerService: MailerService,\r\n              private socketConnectionService: SocketConnectionService, private authService: AuthService,\r\n              private maintenanceModeService: MaintenanceModeService, private modalConfig: NgbModalConfig) {\r\n    translate.setDefaultLang('en');\r\n    translate.use(cookieService.getValue('language', 'en'));\r\n    this.requestStatus();\r\n    this.requestServicesStatus();\r\n    modalConfig.backdrop = 'static';\r\n  }\r\n\r\n  requestStatus() {\r\n    this.socketConnectionService.requestStatus();\r\n    setTimeout(() => this.requestStatus(), this.interval);\r\n  }\r\n\r\n  requestServicesStatus() {\r\n    this.socketConnectionService.requestServicesStatus();\r\n    setTimeout(() => this.requestServicesStatus(), 1000);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FdcService} from \"../../services/fdc.service\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {MailerService} from \"../../services/mailer.service\";\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\nimport {FileSaverService} from \"ngx-filesaver\";\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\n\n@Component({\n  selector: 'app-config-download',\n  templateUrl: './config-download.component.html',\n  styleUrls: ['./config-download.component.css']\n})\nexport class ConfigDownloadComponent implements OnInit {\n\n  constructor(private fdcService: FdcService, private fdaService: FdaService, private groupService: DamperGroupService,\n              private mailerService: MailerService, private mailTemplateService: MailTemplateService,\n              private fileSaverService: FileSaverService) { }\n\n  ngOnInit(): void {\n  }\n\n  isConfigLoaded(): boolean {\n    return this.fdcService.loaded && this.fdaService.loaded && this.groupService.loaded && this.mailerService.loaded\n      && this.mailTemplateService.loaded;\n  }\n\n  downloadConfig(): void {\n    if (this.fdcService.loaded && this.fdaService.loaded && this.groupService.loaded && this.mailerService.loaded\n      && this.mailTemplateService.loaded) {\n      let config: any = {\n        fdcConfig: this.fdcService.data,\n        fdaConfig: this.fdaService.data,\n        groupConfig: this.groupService.getData(),\n        mailerConfig: this.mailerService.data,\n        mailtemplateConfig: this.mailTemplateService.data\n      }\n      if (config.fdaConfig) {\n        config.fdaConfig.forEach((fdaConfig: FdaConfigDto) => {\n          delete fdaConfig.fdaConfigRef;\n        });\n      }\n      const now = new Date();\n      const fileName = 'configuration_' + now.getFullYear() + now.getMonth() + now.getDay() + '_' + now.getHours() + now.getMinutes() + '.json'\n      const configFormatted = JSON.stringify(config, null, 2);\n      this.fileSaverService.saveText(configFormatted, fileName);\n\n    }\n  }\n}\n","<button type=\"button\" (click)=\"downloadConfig()\" class=\"btn btn-primary\"\n        [disabled]=\"!isConfigLoaded()\"\n        translate>SYSCONF.CONFIGFILES.DOWNLOAD</button>\n\n","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FdcService} from \"../../services/fdc.service\";\nimport {ConfirmDialogComponent} from \"../confirm-dialog/confirm-dialog.component\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {MailerService} from \"../../services/mailer.service\";\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\nimport {MessageboxComponent} from \"../messagebox/messagebox.component\";\n\n@Component({\n  selector: 'app-config-upload',\n  templateUrl: './config-upload.component.html',\n  styleUrls: ['./config-upload.component.css']\n})\nexport class ConfigUploadComponent implements OnInit {\n\n  constructor(private fdcService: FdcService, private fdaService: FdaService, private groupService: DamperGroupService,\n              private mailerService: MailerService, private mailTemplateService: MailTemplateService,\n              private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  files: File[] = [];\n\n  onSelect(event: any) {\n    this.files.push(...event.addedFiles);\n    const read = new FileReader();\n    const okEvent = new EventEmitter<any>();\n    okEvent.subscribe({\n      next: (fileRead: any) => {\n        let fileData: any = {};\n        try {\n          fileData = JSON.parse(fileRead.result);\n        } catch(err) {\n          const msgBox = this.modalService.open(MessageboxComponent);\n          msgBox.componentInstance.title = 'Could not parse config file';\n          msgBox.componentInstance.message = 'File ' + fileRead.file.name + ' is not a valid json file!';\n          msgBox.componentInstance.isError = true;\n        }\n        const modalRef = this.modalService.open(ConfirmDialogComponent);\n        modalRef.componentInstance.okText = 'SAVE';\n        modalRef.componentInstance.title = 'SYSCONF.CONFIGFILES.CONFIRMUPLOADTITLE';\n        modalRef.componentInstance.message = 'SYSCONF.CONFIGFILES.CONFIRMUPLOADMESSAGE';\n        modalRef.result.then(() => {\n          this.files = [];\n          if (fileData.fdcConfig) {\n            this.fdcService.data = fileData.fdcConfig;\n            this.fdcService.update();\n          }\n          if (fileData.fdaConfig) {\n            this.fdaService.data = fileData.fdaConfig;\n            this.fdaService.update();\n          }\n          if (fileData.groupConfig) {\n            this.groupService.replace(fileData.groupConfig);\n            this.groupService.update();\n          }\n          if (fileData.mailerConfig) {\n            this.mailerService.data = fileData.mailerConfig;\n            this.mailerService.update();\n          }\n          if (fileData.mailtemplateConfig) {\n            this.mailTemplateService.data = fileData.mailtemplateConfig;\n            this.mailTemplateService.update();\n          }\n        }).catch(() => {\n          this.files = [];\n        });\n      }\n    })\n\n\n    const file = this.files[0];\n    read.readAsText(file, 'UTF-8');\n    read.onloadend = function(){\n      okEvent.emit({result: read.result, file: file});\n    }\n  }\n\n  onRemove(event: any) {\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n}\n","<ngx-dropzone (change)=\"onSelect($event)\" [multiple]=\"false\" >\n  <ngx-dropzone-label>Drop file here, or click to open file dialog!</ngx-dropzone-label>\n</ngx-dropzone>\n","import { Component, OnInit } from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\nimport {MailerService} from \"../../services/mailer.service\";\nimport {FdcService} from \"../../services/fdc.service\";\nimport {ObjectUtils} from \"../../utils/objectUtils\";\nimport {UUID} from \"angular2-uuid\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\nimport {EditFdcTimeComponent} from \"../edit-fdc-time/edit-fdc-time.component\";\nimport {AuthService} from \"../../services/authentication/auth.service\";\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\nimport {PasswordChangeComponent} from \"../password-change/password-change.component\";\nimport {UserService} from \"../../services/authentication/user.service\";\nimport {CreateUserComponent} from \"../create-user/create-user.component\";\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n  applicationForm: UntypedFormGroup;\n  mailerForm: UntypedFormGroup;\n  timeForm: UntypedFormGroup;\n\n  dataLoading = true;\n\n  constructor(public mailerService: MailerService, public applicationService: FdcService, public auth: AuthService,\n              public socketService: SocketConnectionService, public mailTemplateService: MailTemplateService,\n              public pwChangeService: UserService,\n              private fb: UntypedFormBuilder, private modalService: NgbModal) {\n    this.applicationForm = fb.group({\n      maintenanceEnd: [0],\n      databasePath: ['/etc/fdc'],\n      network: fb.group({\n        useDhcp: [0],\n        ipAddress: [''],\n        gatewayAddress: [''],\n        dns1: [''],\n        dns2: [''],\n        hostname: ['']\n      }),\n      ntp: fb.group({\n        server1: [''],\n        server2: [''],\n        timezone: ['']\n      }),\n      physicalAddress: [10000], /* Hardcoded value for FDC */\n      position: ['']\n    });\n    this.mailerForm = fb.group({\n      smtp: fb.group({\n        type: [''],\n        server: [''],\n        port: [''],\n        user: [''],\n        password: [''],\n        senderMail: [''],\n        senderName: ['']\n      }),\n      devNullMode: [1]\n    });\n    this.timeForm = fb.group({\n    });\n  }\n\n  ngOnInit(): void {\n    this.patchapplicationForm();\n    this.patchMailerForm();\n  }\n\n  private patchapplicationForm() {\n    if (this.applicationService.loaded) {\n      this.applicationForm.patchValue(this.applicationService.data);\n    } else {\n      setTimeout(() => this.patchapplicationForm(), 500);\n    }\n  }\n\n  private patchMailerForm() {\n    if (this.mailerService.loaded) {\n      this.mailerForm.patchValue(this.mailerService.data);\n    } else {\n      setTimeout(() => this.patchMailerForm(), 500);\n    }\n  }\n\n  onSubmitApplication(): void {\n    let convertedData = ObjectUtils.convertBooleansToNumbers(this.applicationForm.value);\n    Object.assign(this.applicationService.data, convertedData);\n    if (!this.applicationService.data.id) {\n      this.applicationService.data.id = UUID.UUID();\n    }\n    this.applicationService.update();\n  }\n\n  onSubmitMailer(): void {\n    Object.assign(this.mailerService.data, this.mailerForm.value);\n    this.mailerService.update();\n  }\n\n  setFdcTime(): void {\n    const modalRef = this.modalService.open(EditFdcTimeComponent);\n    modalRef.result.then((result) => {\n      let timeInfo = {seconds: (result / 1000), username: this.auth.getUser().username};\n      this.socketService.setFdcTime(timeInfo);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  changePassword(username: string) {\n    const modalRef = this.modalService.open(PasswordChangeComponent);\n    modalRef.componentInstance.username = username;\n    modalRef.result.then(() => {\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  createUser() {\n    const modalRef = this.modalService.open(CreateUserComponent);\n    modalRef.result.then(() => {\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  deleteUser(username: string) {\n    this.pwChangeService.deleteUser(username);\n  }\n}\n","<ngb-accordion activeIds=\"\">\n  <ngb-panel id=\"application\" title=\"{{'SYSCONF.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || (!applicationService.loaded && auth.isAdmin())\">\n    <ng-template ngbPanelContent>\n      <form [formGroup]=\"applicationForm\" (ngSubmit)=\"onSubmitApplication()\">\n        <div *ngIf=\"auth.isAdmin()\" class=\"d-flex flex-row flex-nowrap justify-content-between  my-3\">\n          <button class=\"btn btn-primary\" type=\"submit\" translate>SAVE</button>\n          <button class=\"btn btn-primary ms-3\" type=\"button\" (click)=\"setFdcTime()\" translate>SYSCONF.TIME.SETTIME</button>\n        </div>\n        <div class=\"row accordion-level-1\">\n          <div *ngIf=\"auth.isAdmin()\" class=\"col-lg-6 my-2\">\n            <ngb-accordion activeIds=\"0\">\n              <ngb-panel title=\"{{'SYSCONF.NETWORK.TITLE' | translate}}\">\n                <ng-template ngbPanelContent>\n                  <div class=\"row\" formGroupName=\"network\">\n                    <div class=\"form-check ps-4 col-12\">\n                      <input class=\"form-check-input\" id=\"useDhcp\" type=\"checkbox\" value=\"\" formControlName=\"useDhcp\">\n                      <label class=\"form-check-label\" for=\"useDhcp\" translate>SYSCONF.NETWORK.DHCP</label>\n                    </div>\n                    <div class=\"form-group col-md-6 my-1\">\n                      <label class=\"form-label my-0\" for=\"hostname\" translate>SYSCONF.NETWORK.HOSTNAME</label>\n                      <input class=\"form-control\" id=\"hostname\" type=\"text\" formControlName=\"hostname\">\n                    </div>\n                    <div class=\"form-group col-md-6 my-1\">\n                      <label class=\"form-label my-0\" for=\"ipAddress\" translate>SYSCONF.NETWORK.IP</label>\n                      <input class=\"form-control\" id=\"ipAddress\" type=\"text\" formControlName=\"ipAddress\">\n                    </div>\n                    <div class=\"form-group col-md-6 my-1\">\n                      <label class=\"form-label my-0\" for=\"gatewayAddress\" translate>SYSCONF.NETWORK.GATEWAY</label>\n                      <input class=\"form-control\" id=\"gatewayAddress\" type=\"text\" formControlName=\"gatewayAddress\">\n                    </div>\n                    <div class=\"form-group col-md-6 my-1\">\n                      <label class=\"form-label my-0\" for=\"dns1\" translate>SYSCONF.NETWORK.DNS1</label>\n                      <input class=\"form-control\" id=\"dns1\" type=\"text\" formControlName=\"dns1\">\n                    </div>\n                    <div class=\"form-group col-md-6 my-1\">\n                      <label class=\"form-label my-0\" for=\"dns2\" translate>SYSCONF.NETWORK.DNS2</label>\n                      <input class=\"form-control\" id=\"dns2\" type=\"text\" formControlName=\"dns2\">\n                    </div>\n                  </div>\n                </ng-template>\n              </ngb-panel>\n            </ngb-accordion>\n          </div>\n          <div *ngIf=\"auth.isAdmin()\" class=\"col-lg-6 my-2\">\n            <ngb-accordion activeIds=\"0\">\n              <ngb-panel title=\"{{'SYSCONF.NTP.TITLE' | translate}}\">\n                <ng-template ngbPanelContent>\n                  <div class=\"row\" formGroupName=\"ntp\">\n                    <div class=\"form-group col-md-6\">\n                      <label class=\"form-label my-0\" for=\"ntpServer1\" translate>SYSCONF.NTP.SERVER1</label>\n                      <input class=\"form-control\" id=\"ntpServer1\" type=\"text\" formControlName=\"server1\">\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                      <label class=\"form-label my-0\" for=\"ntpServer2\" translate>SYSCONF.NTP.SERVER2</label>\n                      <input class=\"form-control\" id=\"ntpServer2\" type=\"text\" formControlName=\"server2\">\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                      <label class=\"form-label my-0\" for=\"ntpTimezone\" translate>SYSCONF.NTP.TIMEZONE</label>\n                      <select class=\"form-select\" id=\"ntpTimezone\" formControlName=\"timezone\">\n                        <option value=\"Europe/Berlin\" translate>SYSCONF.NTP.TIMEZONES.BERLIN</option>\n                        <option value=\"Europe/Vienna\" translate>SYSCONF.NTP.TIMEZONES.VIENNA</option>\n                        <option value=\"Europe/Zurich\" translate>SYSCONF.NTP.TIMEZONES.ZURICH</option>\n                      </select>\n                    </div>\n                  </div>\n                </ng-template>\n              </ngb-panel>\n            </ngb-accordion>\n          </div>\n          <div class=\"col-lg-6 my-2\">\n            <ngb-accordion activeIds=\"0\">\n              <ngb-panel title=\"{{'SYSCONF.USER.TITLE' | translate}}\">\n                <ng-template ngbPanelContent>\n                  <button *ngIf=\"auth.isAdmin()\" class=\"btn btn-primary mb-3\" (click)=\"createUser()\" type=\"button\" translate>USER.CREATE</button>\n                  <div *ngFor=\"let user of pwChangeService.users\"\n                       [ngClass]=\"{'user-you': user.username === auth.getUser().username}\"\n                       class=\"px-2\">\n                    <div *ngIf=\"user.username === auth.getUser().username\" class=\"text-danger\" translate>USER.SIGNEDINUSER</div>\n                    <div class=\"d-flex flex-nowrap my-2\">\n                      <div>\n                        <div class=\"d-flex flex-nowrap\">\n                          <div class=\"fw-bold me-2\" translate>SYSCONF.USER.USERNAME</div>\n                          <div>{{user.username}}</div>\n                        </div>\n                        <div class=\"d-flex flex-nowrap\">\n                          <div class=\"fw-bold me-2\" translate>SYSCONF.USER.ROLE</div>\n                          <div>{{user.role}}</div>\n                        </div>\n                      </div>\n                      <div class=\"ms-auto\">\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"changePassword(user.username)\" translate>SYSCONF.USER.CHANGEPASSWORD</button>\n                      </div>\n                      <div>\n                        <button [disabled]=\"user.username === auth.getUser().username\" class=\"btn btn-primary ms-1\" type=\"button\" (click)=\"deleteUser(user.username)\" translate>SYSCONF.USER.DELETE</button>\n                      </div>\n                    </div>\n                  </div>\n                </ng-template>\n              </ngb-panel>\n            </ngb-accordion>\n          </div>\n        </div>\n      </form>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"mailer\" title=\"{{'MAILCONF.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !mailerService.loaded\">\n    <ng-template ngbPanelContent>\n      <form [formGroup]=\"mailerForm\" (ngSubmit)=\"onSubmitMailer()\">\n        <div class=\"col-md-3  my-3\">\n          <button class=\"btn btn-primary\" type=\"submit\" translate>SAVE</button>\n        </div>\n        <div class=\"col-lg-6 my-2 accordion-level-1\">\n          <ngb-accordion activeIds=\"0\">\n            <ngb-panel title=\"{{'MAILCONF.SMTP.TITLE' | translate}}\">\n              <ng-template ngbPanelContent>\n                <div class=\"row\" formGroupName=\"smtp\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label my-0\" for=\"type\" translate>MAILCONF.SMTP.SECURITY</label>\n                    <select class=\"form-select\" id=\"type\" formControlName=\"type\">\n                      <option value=\"Unsafe\" translate>MAILCONF.SMTP.UNSAFE</option>\n                      <option value=\"Secure\" translate>MAILCONF.SMTP.SECURE</option>\n                      <option value=\"ForcedSecure\" translate>MAILCONF.SMTP.FORCEDSECURE</option>\n                    </select>\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"server\" translate>MAILCONF.SMTP.SERVER</label>\n                    <input class=\"form-control\" id=\"server\" type=\"text\" formControlName=\"server\">\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"smtpPort\" translate>MAILCONF.SMTP.PORT</label>\n                    <input class=\"form-control\" id=\"smtpPort\" type=\"number\" formControlName=\"port\">\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"smtpUser\" translate>MAILCONF.SMTP.USER</label>\n                    <input class=\"form-control\" id=\"smtpUser\" type=\"text\" formControlName=\"user\">\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"smtpPassword\" translate>MAILCONF.SMTP.PASSWORD</label>\n                    <input class=\"form-control\" id=\"smtpPassword\" type=\"password\" formControlName=\"password\">\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"senderMail\" translate>MAILCONF.SMTP.SENDERMAIL</label>\n                    <input class=\"form-control\" id=\"senderMail\" type=\"text\" formControlName=\"senderMail\">\n                  </div>\n                  <div class=\"form-group col-md-6 my-1\">\n                    <label class=\"form-label my-0\" for=\"senderName\" translate>MAILCONF.SMTP.SENDERNAME</label>\n                    <input class=\"form-control\" id=\"senderName\" type=\"text\" formControlName=\"senderName\">\n                  </div>\n                </div>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </form>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"inputs\" title=\"{{'INPUTS.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !applicationService.loaded\">\n    <ng-template ngbPanelContent>\n      <app-inputs></app-inputs>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"outputs\" title=\"{{'OUTPUTS.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !applicationService.loaded\">\n    <ng-template ngbPanelContent>\n      <app-outputs></app-outputs>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"mailtemplates\" title=\"{{'MAILTEMPLATES.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !mailTemplateService.loaded\">\n    <ng-template ngbPanelContent>\n      <app-mail-templates></app-mail-templates>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"config-download-upload\" title=\"{{'SYSCONF.CONFIGFILES.TITLE'|translate}}\" [disabled]=\"!socketService.connectedToBackend\">\n    <ng-template ngbPanelContent>\n      <app-config-download></app-config-download>\n      <app-config-upload></app-config-upload>\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  @Input()\n  title = 'Missing title';\n  @Input()\n  message = 'Missing message';\n  @Input()\n  okText = 'OK';\n  @Input()\n  cancelText = 'CANCEL';\n\n  constructor(public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--suppress HtmlUnknownAttribute -->\n<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" id=\"modal-title\" translate>{{title|translate}}</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('cancel')\"></button>\n</div>\n<div class=\"modal-body modal-body-background\">\n  <p><strong translate>{{message|translate}}</strong></p>\n</div>\n<div class=\"modal-footer modal-footer-background\">\n  <button type=\"button\" ngbAutofocus class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('cancel')\">{{cancelText|translate}}</button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('ok')\">{{okText|translate}}</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UserService} from \"../../services/authentication/user.service\";\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  userForm: UntypedFormGroup = {} as UntypedFormGroup;\n  password: string | undefined;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userForm = this.fb.group({\n      username: ['', [Validators.required, Validators.min(6)], []],\n      role: [undefined, [Validators.required], []]\n    });\n  }\n\n  get username(): string | undefined {\n    return this.userForm.controls['username'].value;\n  }\n\n  get role(): string | undefined {\n    return this.userForm.controls['role'].value;\n  }\n\n  validateUserData(): boolean {\n    return this.userForm.valid && this.password !== undefined;\n  }\n\n  submitForm() {\n    if (this.validateUserData()) {\n      this.userService.createUser({\n        username: this.username,\n        role: this.role,\n        password: this.password\n      }).subscribe({\n        next: () => {\n          this.activeModal.close();\n        }\n      });\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title text-nowrap\">{{'USER.CHANGEPASSWORD.TITLE'|translate}}</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n  <div class=\"modal-body modal-body-background\">\n    <div class=\"container\">\n      <form [formGroup]=\"userForm\">\n        <div class=\"form-group\">\n          <label for=\"username\" translate>USER.USERNAME</label>\n          <div class=\"input-group\">\n            <input id=\"username\" class=\"form-control shadow-none\" formControlName=\"username\" type=\"text\" appAutofocus>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label my-0\" for=\"type\" translate>USER.ROLE</label>\n          <select class=\"form-select\" id=\"type\" formControlName=\"role\">\n            <option value=\"ADMIN\" translate>USER.ROLES.ADMIN</option>\n            <option value=\"SERVICE\" translate>USER.ROLES.SERVICE</option>\n            <option value=\"USER\" translate>USER.ROLES.USER</option>\n          </select>\n        </div>\n      </form>\n      <app-password-repeat [(password)]=\"password\"></app-password-repeat>\n    </div>\n  </div>\n  <div class=\"modal-footer modal-footer-background\">\n    <button class=\"btn btn-success\" type=\"button\" (click)=\"submitForm()\" [disabled]=\"!validateUserData()\" translate>SAVE</button>\n  </div>\n","import {Component, OnInit} from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {EditDamperGroupComponent} from \"../edit-damper-group/edit-damper-group.component\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {DamperConfigDto} from \"../../dto/damperConfig.class\";\nimport {InputService} from \"../../services/dto-services/input.service\";\nimport {OutputService} from \"../../services/dto-services/output.service\";\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\nimport {ValidityCheckService} from \"../../services/dto-services/validity-check.service\";\n\n@Component({\n  selector: 'app-damper-groups',\n  templateUrl: './damper-groups.component.html',\n  styleUrls: ['./damper-groups.component.css']\n})\nexport class DamperGroupsComponent implements OnInit {\n  id = UUID.UUID();\n\n  constructor(public damperGroupService: DamperGroupService, public validityCheckService: ValidityCheckService,\n              public inputService: InputService, public outputService: OutputService,\n              public mailTemplateService: MailTemplateService, private fdaService: FdaService,\n              private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const modalRef = this.modalService.open(EditDamperGroupComponent);\n    modalRef.result.then((result) => {\n      //result.id = UUID.UUID();\n      this.damperGroupService.add(result);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  edit(groupId: string) {\n    let damperGroups = this.damperGroupService.getData().filter((group) => group.id === groupId);\n    if (damperGroups && damperGroups.length == 1) {\n      let damperGroup = damperGroups[0];\n      const modalRef = this.modalService.open(EditDamperGroupComponent);\n      modalRef.componentInstance.damperGroup = damperGroup;\n      modalRef.result.then((result) => {\n        Object.assign(damperGroup, result);\n        this.damperGroupService.update();\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n\n  remove(groupId: string) {\n    this.damperGroupService.remove(groupId);\n  }\n\n  getFilteredDampersForGroup(groupId: string): DamperConfigDto[] {\n    let dampers = [] as DamperConfigDto[];\n    this.fdaService.data.filter(fda => {\n      if (fda.damper1.groups && fda.damper1.groups.includes(groupId)) {\n        dampers.push(fda.damper1);\n      }\n      if (fda.damper2.groups && fda.damper2.groups.includes(groupId)) {\n        dampers.push(fda.damper2);\n      }\n    });\n    return dampers;\n  }\n\n  canAddDamperGroup() {\n    return this.damperGroupService.getData() && this.damperGroupService.getData().length < 8;\n  }\n}\n","<div class=\"col-md-3  my-3\">\n  <button class=\"btn btn-primary w-100 shadow-none\" [disabled]=\"!canAddDamperGroup() || !damperGroupService.loaded\" (click)=\"create()\" translate>FDACONFIG.GROUPS.NEW</button>\n</div>\n\n\n<div class=\"row accordion-level-1\" [id]=\"id\">\n  <div class=\"col-lg-6 my-2\" *ngFor=\"let damperGroup of damperGroupService.getData()\">\n    <ngb-accordion activeIds=\"0\">\n      <ngb-panel title=\"{{damperGroup.name}}\">\n        <ng-template ngbPanelContent>\n          <div style=\"display: flex; flex-direction: column;\">\n            <table class=\"table table-borderless\">\n              <tr>\n                <td class=\"fw-bold\" translate>NAME</td>\n                <td class=\"text-end\">{{damperGroup.name}}</td>\n              </tr>\n              <tr>\n                <td class=\"fw-bold align-text-top py-1\" translate>FDACONFIG.GROUPS.ALARMINPUT</td>\n                <td class=\"text-end align-text-top py-1\">\n                  <div *ngFor=\"let inputId of damperGroup.bmaAlarm\" class=\"p-0\">{{inputService.getById(inputId).name}}</div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"fw-bold align-text-top py-1\" translate>FDACONFIG.GROUPS.VENTINPUT</td>\n                <td class=\"text-end align-text-top py-1\">\n                  <div *ngFor=\"let inputId of damperGroup.ventilationRequest\" class=\"p-0\">{{inputService.getById(inputId).name}}</div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"fw-bold align-text-top py-1\" translate>FDACONFIG.GROUPS.VENTOUTPUT</td>\n                <td class=\"text-end align-text-top py-1\">\n                  <div *ngFor=\"let inputId of damperGroup.ventilationAllowed\" class=\"p-0\">{{outputService.getById(inputId).name}}</div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"fw-bold align-text-top\" translate>FDACONFIG.GROUPS.MAIL.ALARM</td>\n                <td class=\"text-end align-text-top\">{{mailTemplateService.getById(damperGroup.alarmMailTemplate).name}}</td>\n              </tr>\n              <tr>\n                <td class=\"fw-bold align-text-top\" translate>FDACONFIG.GROUPS.MAIL.TIMEOUT</td>\n                <td class=\"text-end align-text-top\">{{mailTemplateService.getById(damperGroup.timeoutMailTemplate).name}}</td>\n              </tr>\n            </table>\n\n            <label class=\"form-label fw-bold mt-2\" translate>FDACONFIG.GROUPS.DAMPERS</label>\n            <div *ngFor=\"let damper of getFilteredDampersForGroup(damperGroup.id)\">{{damper.name + (damper.damperType == 'Main' ? ' (Maindamper)' : '')}}</div>\n            <div *ngIf=\"getFilteredDampersForGroup(damperGroup.id).length === 0\">No dampers found for group.</div>\n            <div class=\"mt-2\">\n              <button *ngIf=\"!validityCheckService.damperGroupUsedInFda(damperGroup.id)\"\n                      class=\"btn btn-outline-danger me-3 mt-3\" (click)=\"remove(damperGroup.id)\"\n                      [disabled]=\"!damperGroupService.loaded\" translate>DELETE</button>\n              <button class=\"btn btn-outline-primary mt-3\" [disabled]=\"!damperGroupService.loaded\" (click)=\"edit(damperGroup.id)\" translate>EDIT</button>\n            </div>\n          </div>\n        </ng-template>\n      </ngb-panel>\n    </ngb-accordion>\n  </div>\n</div>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {InputService} from \"../../services/dto-services/input.service\";\nimport {OutputService} from \"../../services/dto-services/output.service\";\nimport {EditFdaComponent} from \"../edit-fda/edit-fda.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UUID} from \"angular2-uuid\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {EditDamperModeComponent} from \"../edit-damper-mode/edit-damper-mode.component\";\nimport {FdaReplacementComponent} from \"../fda-replacement/fda-replacement.component\";\nimport {SystemHealthService} from \"../../services/system-health.service\";\nimport {AuthService} from \"../../services/authentication/auth.service\";\nimport {DamperConfigDto} from \"../../dto/damperConfig.class\";\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\nimport {FdcService} from \"../../services/fdc.service\";\nimport {MessageboxComponent} from \"../messagebox/messagebox.component\";\nimport {Router} from \"@angular/router\";\nimport {DampermodeChangeService} from \"../../services/dto-services/dampermode-change.service\";\nimport {MaintenanceModeService} from \"../../services/dto-services/maintenance-mode.service\";\nimport {GroupIOStatus} from \"../../dto/groupIOStatus\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DashboardComponent implements OnInit {\n  activeIds = [] as any[];\n\n  constructor(public fdaService: FdaService, public inputService: InputService, public outputService: OutputService,\n              public auth: AuthService, public socketService: SocketConnectionService,\n              public sysHealthService: SystemHealthService, public fdcService: FdcService,\n              private groupService: DamperGroupService, private modalService: NgbModal,\n              private router: Router, private damperModeChangeService: DampermodeChangeService,\n              public maintenanceModeService: MaintenanceModeService) {\n    if (this.auth.getUser().forcePasswordChange) {\n      this.router.navigateByUrl('forced-password-change').then(() => {\n        window.location.reload();\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  getIOStateTranslation(state: string): string {\n    if (state) {\n      return 'IO.' + state.toUpperCase();\n    }\n    return '';\n  }\n\n  getIsHighOr(values: GroupIOStatus[]) {\n    return values.filter(value => value.currentState === 'High').length > 0;\n  }\n\n  getIsHighAnd(values: GroupIOStatus[]) {\n    const otherStatuses = values.filter(value => value.currentState !== 'HIGH' && value.currentState !== 'LOW');\n    return otherStatuses.length === 0 && values.filter(value => value.currentState === 'LOW').length === 0;\n  }\n\n  configureFda(physicalAddress: number) {\n    const modalRef = this.modalService.open(EditFdaComponent, { size: 'lg' });\n    modalRef.componentInstance.fda = {id: UUID.UUID(), physicalAddress: physicalAddress};\n    modalRef.result.then((result) => {\n      console.log(result);\n      this.fdaService.add(result).subscribe({\n        next: () => {\n          setTimeout(() => {\n            this.sysHealthService.status.fdas = {\n              inStatusConfigured: [],\n              inStatusUnconfigured: [],\n              configuredNotInStatus: []\n            };\n            this.sysHealthService.status.damperGroups = [];\n            this.sysHealthService.processLastDeviceStatus();\n            this.sysHealthService.processLastGroupStatus();\n          });\n        }, error: () => {\n          // Error already handled in service\n        }\n      });\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  damperConfigByFda(fdaPhysicalAddress: number, numberOfDamper: number) {\n    let fda = this.fdaService.data.find(fda => fda.physicalAddress === fdaPhysicalAddress);\n    if (fda) {\n      return numberOfDamper === 1 ? fda.damper1 : fda.damper2;\n    }\n    return undefined;\n  }\n\n  changeDamperMode(damperId: string) {\n    const modalRef = this.modalService.open(EditDamperModeComponent);\n    let fda = this.fdaService.data.find(fda => fda.damper1.id === damperId || fda.damper2.id === damperId);\n    if (fda) {\n      modalRef.componentInstance.origDamperMode = fda.damper1.id === damperId ? fda.damper1.damperMode : fda.damper2.damperMode;\n      modalRef.componentInstance.damperConfig = fda.damper1.id === damperId ? fda.damper1 : fda.damper2;\n      modalRef.componentInstance.fdaConfig = fda;\n      modalRef.result.then((result) => {\n        let fda = this.fdaService.data.find(fda => fda.damper1.id === damperId || fda.damper2.id === damperId);\n        if (fda) {\n          this.damperModeChangeService.setDamperMode(fda.physicalAddress, damperId, result.damperMode);\n          let isItFirst = fda.damper1.id === damperId;\n          if (isItFirst) {\n            fda.damper1.damperMode = result.damperMode;\n          } else {\n            fda.damper2.damperMode = result.damperMode;\n          }\n          let damperInfo = {\n            physicalAddress: fda.physicalAddress,\n            number: isItFirst ? 1 : 2,\n            mode: result.damperMode,\n            username: this.auth.getUser().username\n          };\n          this.socketService.setDamperMode(damperInfo);\n        }\n      }).catch(() => {\n        // ignore cross-click\n      });\n    } else {\n      const modalRef = this.modalService.open(MessageboxComponent);\n      modalRef.componentInstance.title = \"Warning\";\n      modalRef.componentInstance.text = `No FDA found configured for this damper!`;\n      modalRef.componentInstance.isWarning = true;\n    }\n  }\n\n  changeUnconfiguredDamperMode(fda: FdaConfigDto, damper: DamperConfigDto, number: number) {\n    damper.name = '---';\n    const modalRef = this.modalService.open(EditDamperModeComponent);\n    modalRef.componentInstance.origDamperMode = damper.currentDamperMode;\n    modalRef.componentInstance.damperConfig = damper;\n    modalRef.componentInstance.fdaConfig = fda;\n    modalRef.result.then((result) => {\n      let damperInfo = {\n        physicalAddress: fda.physicalAddress,\n        number: number,\n        mode: result.damperMode,\n        username: this.auth.getUser().username\n      };\n      this.socketService.setDamperMode(damperInfo);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  replaceFda(id: string) {\n    let fda = this.fdaService.data.find((fda) => fda.id === id);\n    if (fda) {\n      const modalRef = this.modalService.open(FdaReplacementComponent);\n      modalRef.componentInstance.unconfiguredFdaPhyAddrasses = this.sysHealthService.status.fdas.inStatusUnconfigured.map(fda => fda.physicalAddress);\n      modalRef.result.then((result) => {\n        let fda = this.fdaService.data.find((fda) => fda.id === id);\n        if (fda) {\n          fda.physicalAddress = result.physicalAddress;\n          this.fdaService.update();\n        }\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n}\n","<!--suppress HtmlUnknownAttribute -->\n<ngb-accordion activeIds=\"groups\">\n  <ngb-panel id=\"groups\" style=\"background-color: ghostwhite !important;\" [disabled]=\"!socketService.connectedToBackend\">\n    <ng-template ngbPanelHeader>\n      <button ngbPanelToggle class=\"accordion-button\">\n        <app-status-symbols\n          [showOk]=\"sysHealthService.activeAlarms === 0 &&\n                    sysHealthService.activeTimeouts === 0 &&\n                    sysHealthService.status.damperGroups.length > 0 &&\n                    socketService.connectedToBackend\"\n          [showWarning]=\"sysHealthService.activeAlarms > 0 &&\n                         socketService.connectedToBackend\"\n          [showTimeglass]=\"sysHealthService.activeTimeouts > 0 &&\n                           socketService.connectedToBackend\"\n          [showQuestionmark]=\"!socketService.connectedToBackend ||\n                              sysHealthService.status.damperGroups.length === 0\"></app-status-symbols>\n        <div class=\"ms-2\">{{'DASHBOARD.TITLES.GROUPS'|translate}}</div>\n      </button>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <div class=\"row\">\n        <div class=\"col-12 my-2 inner-card accordion-level-1\" *ngFor=\"let group of sysHealthService.status.damperGroups\"\n             [ngClass]=\"{'has-alarm': group.currentAlarmState === 1, 'maintenance-active': maintenanceModeService.isMaintenanceActive()}\">\n          <ngb-accordion activeIds=\"{{group.id}}\" class=\"bg-warning\">\n            <ngb-panel id=\"{{group.id}}\" class=\"accordion-header\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <app-status-symbols\n                    [showOk]=\"group.currentAlarmState === 0 && group.currentTimeoutState === 0 && group.dampersAvailable.length > 0 && !getIsHighOr(group.bmaAlarm)\"\n                    [showWarning]=\"group.currentAlarmState === 1 || getIsHighOr(group.bmaAlarm)\"\n                    [showTimeglass]=\"group.currentAlarmState === 0 && group.currentTimeoutState === 1 && !getIsHighOr(group.bmaAlarm)\"\n                    [showQuestionmark]=\"group.dampersAvailable.length === 0\"></app-status-symbols>\n                  <div class=\"d-flex ms-2 me-2 w-100 justify-content-between\">\n                    <div>{{group.name}}</div>\n                    <div *ngIf=\"maintenanceModeService.isMaintenanceActive()\" translate>MAINTENANCEMODE.MAINTENANCE</div>\n                  </div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <div class=\"fw-bold\" translate>DASHBOARD.GROUPS.ALARMINPUTS</div>\n                <div class=\"d-flex flex-wrap mb-3\">\n                  <div *ngFor=\"let alarmInput of group.bmaAlarm\" class=\"d-flex justify-content-between me-2\" style=\"max-width: 300px;\">\n                    <div class=\"d-flex flex-nowrap\">\n                      <app-status-symbols\n                        [showInput]=\"alarmInput.currentState === 'High' || alarmInput.currentState === 'Low'\"\n                        [inputHigh]=\"alarmInput.currentState === 'High'\" [inputOk]=\"alarmInput.currentState === 'Low'\"\n                        [inputDanger]=\"alarmInput.currentState === 'High'\"\n                        [showQuestionmark]=\"alarmInput.currentState === 'Undefined'\"></app-status-symbols>\n                      <div class=\"ms-2\">{{alarmInput.name}}</div>\n                    </div>\n                    <div class=\"ms-2\">\n                      ({{('IO.' + alarmInput.currentState | uppercase) | translate}})\n                    </div>\n                  </div>\n                </div>\n                <div class=\"fw-bold\" translate>DASHBOARD.GROUPS.VENTINPUTS</div>\n                <div class=\"d-flex flex-wrap mb-3\">\n                  <div *ngFor=\"let ventInput of group.ventilationRequest\" class=\"d-flex justify-content-between me-2\" style=\"max-width: 300px;\">\n                    <div class=\"d-flex flex-nowrap\">\n                      <app-status-symbols\n                        [showInput]=\"ventInput.currentState === 'High' || ventInput.currentState === 'Low'\"\n                        [inputHigh]=\"ventInput.currentState === 'High'\" [inputOk]=\"ventInput.currentState === 'High'\"\n                        [inputDanger]=\"ventInput.currentState === 'Low'\" [disableIOAnimation]=\"ventInput.currentState === 'High'\"\n                        [showQuestionmark]=\"ventInput.currentState === 'Undefined'\"></app-status-symbols>\n                      <div class=\"ms-2\">{{ventInput.name}}</div>\n                    </div>\n                    <div class=\"ms-2\">\n                      ({{('IO.' + ventInput.currentState | uppercase) | translate}})\n                    </div>\n                  </div>\n                </div>\n                <div class=\"fw-bold\" translate>DASHBOARD.GROUPS.VENTOUTPUTS</div>\n                <div class=\"d-flex flex-wrap mb-2\">\n                  <div *ngFor=\"let output of group.ventilationAllowed\" class=\"d-flex justify-content-between mt-2\" style=\"max-width: 300px;\">\n                    <div class=\"d-flex flex-nowrap\">\n                      <app-status-symbols\n                        [showOutput]=\"output.currentState === 'High' || output.currentState === 'Low'\"\n                        [outputHigh]=\"output.currentState === 'High'\" [disableIOAnimation]=\"output.currentState === 'High'\"\n                        [showQuestionmark]=\"output.currentState === 'Undefined'\"></app-status-symbols>\n                      <div class=\"ms-2\">{{output.name}}</div>\n                    </div>\n                    <div class=\"ms-2\">\n                      ({{('IO.' + output.currentState | uppercase) | translate}})\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"group.dampersAvailable.length === 0\"\n                     class=\"header-font-size text-danger mt-3\" translate>\n                  DASHBOARD.NOACTIVEDAMPERSINGROUP\n                </div>\n                <div *ngIf=\"group.dampersAvailable.length > 0\" class=\"d-flex flex-row flex-wrap justify-content-start\">\n                  <div *ngFor=\"let damper of group.dampersAvailable\"\n                       class=\"d-flex flex-column mt-2 mb-2 p-2 radius damper-tile\"\n                       [ngClass]=\"{'damper-opened-bg': damper.currentStates.includes('Opened'),\n                                    'damper-closed-bg': damper.currentStates.includes('Closed'),\n                                    'damper-opening-bg': damper.currentStates.includes('Opening'),\n                                    'damper-closing-bg': damper.currentStates.includes('Closing'),\n                                    'damper-timeout': damper.currentStates.includes('Timeout'),\n                                    'damper-alarm': damper.currentStates.includes('Alarm'),\n                                    'damper-status-unknown': damper.currentStates.length === 0}\">\n                    <div class=\"border-light\">{{damper.name}}</div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>DEVICES.FDA</div>\n                      <div class=\"ms-3\">{{damper.physicalAddress + ' - ' + 'D' + damper.number}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>FDACONFIG.FDAS.DAMPERS.TYPE</div>\n                      <div class=\"ms-3\" [ngClass]=\"{'fw-bold': (damper.damperType === 'Main')}\">{{('FDACONFIG.FDAS.DAMPERS.TYPES.' + damper.damperType.toUpperCase()) | translate}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>FDACONFIG.FDAS.DAMPERS.MODE</div>\n                      <div *ngIf=\"!damper.currentDamperMode\" class=\"ms-3\">{{'FDACONFIG.FDAS.DAMPERS.MODES.UNKNOWN'|translate}}</div>\n                      <div *ngIf=\"damper.currentDamperMode\" class=\"ms-3\">{{('FDACONFIG.FDAS.DAMPERS.MODES.' + damper.currentDamperMode.toUpperCase()) | translate}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between mb-2\">\n                      <div translate>STATUS</div>\n                      <div class=\"ms-3\">\n                        <div *ngFor=\"let statusPart of damper.currentStates\"\n                             class=\"p-0\" [ngClass]=\"{'fw-bold': (damper.damperType === 'Main')}\">\n                          <div *ngIf=\"statusPart !== ''\">{{('FDACONFIG.FDAS.DAMPERS.STATES.' + statusPart.toUpperCase()) | translate}}</div>\n                        </div>\n                        <div *ngIf=\"damper.currentStates.length === 0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.UNDEFINED</div>\n                      </div>\n                    </div>\n                    <div *ngIf=\"damper.currentStates.length === 0\" class=\"text-danger bg-white p-2 mb-2 rounded\" translate>FDACONFIG.FDAS.DAMPERS.UNAVAILABLE</div>\n                    <div *ngIf=\"auth.isLoggedIn() && fdaService.loaded\" class=\"btn btn-outline-primary mt-auto\" (click)=\"changeDamperMode(damper.id)\" translate>FDACONFIG.FDAS.DAMPERS.CHANGEMODE</div>\n                  </div>\n                </div>\n                <div *ngIf=\"group.dampersDisabled.length > 0\">\n                  <div class=\"header-font-size mt-3 justify-content-start\">Disabled dampers</div>\n                  <div *ngFor=\"let damper of group.dampersDisabled\"\n                       class=\"d-flex flex-column mt-2 mb-2 p-2 radius damper-disabled damper-tile\">\n                    <div>{{damper.name}}</div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>DEVICES.FDA</div>\n                      <div class=\"ms-3\">{{damper.physicalAddress + ' - ' + 'D' + damper.number}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>FDACONFIG.FDAS.DAMPERS.TYPE</div>\n                      <div class=\"ms-3\" [ngClass]=\"{'fw-bold': (damper.damperType === 'Main')}\">{{('FDACONFIG.FDAS.DAMPERS.TYPES.' + damper.damperType.toUpperCase()) | translate}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                      <div translate>FDACONFIG.FDAS.DAMPERS.MODE</div>\n                      <div *ngIf=\"!damper.currentDamperMode\" class=\"ms-3\">{{'FDACONFIG.FDAS.DAMPERS.MODES.UNKNOWN'|translate}}</div>\n                      <div *ngIf=\"damper.currentDamperMode\" class=\"ms-3\">{{('FDACONFIG.FDAS.DAMPERS.MODES.' + damper.currentDamperMode.toUpperCase()) | translate}}</div>\n                    </div>\n                    <div class=\"d-flex flex-row flex-nowrap justify-content-between mb-2\">\n                      <div translate>STATUS</div>\n                      <div class=\"ms-3\">\n                        <div *ngFor=\"let statusPart of damper.currentStates\"\n                             class=\"p-0\" [ngClass]=\"{'fw-bold': (damper.damperType === 'Main')}\">\n                          <div *ngIf=\"statusPart !== ''\" translate>FDACONFIG.FDAS.DAMPERS.STATES.{{statusPart | uppercase}}</div>\n                        </div>\n                        <div *ngIf=\"damper.currentStates.length === 0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.UNDEFINED</div>\n                      </div>\n                    </div>\n                    <div *ngIf=\"auth.isLoggedIn() && fdaService.loaded\" class=\"btn btn-outline-primary mt-auto\" (click)=\"changeDamperMode(damper.id)\" translate>FDACONFIG.FDAS.DAMPERS.CHANGEMODE</div>\n                  </div>\n                </div>\n\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isLoggedIn()\" id=\"fdas\" [disabled]=\"!socketService.connectedToBackend\">\n    <ng-template ngbPanelHeader>\n      <button ngbPanelToggle class=\"accordion-button\">\n        <div class=\"me-3 d-flex flex-nowrap\">\n          <app-status-symbols\n            [showOk]=\"(sysHealthService.status.fdas.inStatusUnconfigured.length === 0\n              && sysHealthService.status.fdas.configuredNotInStatus.length === 0\n              && sysHealthService.status.fdas.inStatusConfigured.length > 0) && socketService.connectedToBackend\"\n            [showWarning]=\"(sysHealthService.status.fdas.inStatusUnconfigured.length !== 0\n              || sysHealthService.status.fdas.configuredNotInStatus.length !== 0) && socketService.connectedToBackend\"\n            [showQuestionmark]=\"(sysHealthService.status.fdas.inStatusUnconfigured.length === 0\n              && sysHealthService.status.fdas.configuredNotInStatus.length === 0\n              && sysHealthService.status.fdas.inStatusConfigured.length === 0) || !socketService.connectedToBackend\"></app-status-symbols>\n          <div class=\"ms-2\">{{ 'DASHBOARD.TITLES.FDAS' | translate }}</div>\n        </div>\n        <div class=\"me-2 d-flex flex-wrap\">\n          <div *ngIf=\"sysHealthService.status.fdas.inStatusUnconfigured.length > 0\" class=\"me-3\"\n          >{{sysHealthService.status.fdas.inStatusUnconfigured.length}}&nbsp;{{'DASHBOARD.FDAS.UNCONFIGURED'|translate}}</div>\n          <div *ngIf=\"sysHealthService.status.fdas.configuredNotInStatus.length > 0\" class=\"me-3\"\n          >{{sysHealthService.status.fdas.configuredNotInStatus.length}}&nbsp;{{'DASHBOARD.FDAS.NOTCONNECTED'|translate}}</div>\n          <div *ngIf=\"sysHealthService.status.fdas.inStatusConfigured.length > 0\" class=\"me-3\"\n          >{{sysHealthService.status.fdas.inStatusConfigured.length}}&nbsp;{{'DASHBOARD.FDAS.OPERATIONAL'|translate}}</div>\n        </div>\n      </button>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <div class=\"row accordion-level-1\">\n        <div class=\"my-2 fda-info\" *ngFor=\"let fda of sysHealthService.status.fdas.inStatusUnconfigured\">\n          <ngb-accordion activeIds=\"0\" class=\"bg-warning\">\n            <ngb-panel class=\"accordion-header-danger\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <div class=\"me-2\"><app-status-symbols [showWarning]=\"true\"></app-status-symbols></div>\n                  <div>{{(fda.dynamicalAddress < 32768 ? 'B1' : 'B2') + '/' + (fda.dynamicalAddress < 32768 ? fda.dynamicalAddress : (fda.dynamicalAddress - 32767))}}</div>\n                  <div class=\"border-left-inno text-danger\"><b>{{'DASHBOARD.FDAS.UNCONFIGURED'|translate}} {{fda.physicalAddress}}</b></div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.DYNAMICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.dynamicalAddress}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.ONBUSBRANCH</td>\n                    <td class=\"text-end\">{{(fda.dynamicalAddress < 32768 ? 'B1' : 'B2')|translate}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>PHYSICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.physicalAddress}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.OPERATIONAL</td>\n                    <td class=\"text-end\" translate>{{fda.operational ? 'YES' : 'NO'}}</td>\n                  </tr>\n                </table>\n                <div class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.FIRST</div>\n                <div class=\"d-flex flex-column mt-2 mb-2 p-2 justify-content-between radius\"\n                     [ngClass]=\"{'damper-opened-bg': fda.damper1.currentState.includes('Opened'),\n                                    'damper-closed-bg': fda.damper1.currentState.includes('Closed'),\n                                    'damper-opening-bg': fda.damper1.currentState.includes('Opening'),\n                                    'damper-closing-bg': fda.damper1.currentState.includes('Closing'),\n                                    'damper-timeout': fda.damper1.currentState.includes('Timeout'),\n                                    'damper-alarm': fda.damper1.currentState.includes('Alarm'),\n                                    'damper-status-unknown': fda.damper1.currentState === ''}\">\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>STATUS</div>\n                    <div class=\"ms-3\">\n                      <div *ngFor=\"let statusPart of fda.damper1.currentState.split('|')\"\n                           class=\"p-0\"\n                           translate>FDACONFIG.FDAS.DAMPERS.STATES.{{statusPart | uppercase}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.SECOND</div>\n                <div class=\"d-flex flex-column mt-2 mb-2 p-2 justify-content-between radius\"\n                     [ngClass]=\"{'damper-opened-bg': fda.damper2.currentState.includes('Opened'),\n                                    'damper-closed-bg': fda.damper2.currentState.includes('Closed'),\n                                    'damper-opening-bg': fda.damper2.currentState.includes('Opening'),\n                                    'damper-closing-bg': fda.damper2.currentState.includes('Closing'),\n                                    'damper-timeout': fda.damper2.currentState.includes('Timeout'),\n                                    'damper-alarm': fda.damper2.currentState.includes('Alarm'),\n                                    'damper-status-unknown': fda.damper2.currentState === ''}\">\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>STATUS</div>\n                    <div class=\"ms-3\">\n                      <div *ngFor=\"let statusPart of fda.damper2.currentState.split('|')\"\n                           class=\"p-0\"\n                           translate>FDACONFIG.FDAS.DAMPERS.STATES.{{statusPart | uppercase}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button *ngIf=\"auth.isAdmin() && fdaService.loaded\" class=\"col-12 btn btn-primary mt-3\" (click)=\"configureFda(fda.physicalAddress)\" translate>DASHBOARD.FDAS.CONFIGURE</button>\n                <div *ngIf=\"auth.isLoggedIn() && fdaService.loaded\" class=\"col-12 btn btn-outline-primary mt-2\" (click)=\"changeUnconfiguredDamperMode(fda, fda.damper1, 1)\" translate>FDACONFIG.FDAS.DAMPERS.CHANGEMODE1</div>\n                <div *ngIf=\"auth.isLoggedIn() && fdaService.loaded\" class=\"col-12 btn btn-outline-primary mt-2\" (click)=\"changeUnconfiguredDamperMode(fda, fda.damper2, 2)\" translate>FDACONFIG.FDAS.DAMPERS.CHANGEMODE2</div>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n      <div class=\"row accordion-level-1\">\n        <div class=\"my-2 fda-info\" *ngFor=\"let fda of sysHealthService.status.fdas.configuredNotInStatus\">\n          <ngb-accordion activeIds=\"0\">\n            <ngb-panel class=\"accordion-header-danger\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <div class=\"me-2\"><app-status-symbols [showWarning]=\"true\"></app-status-symbols></div>\n                  <div class=\"text-danger\">{{fda.position}} - <b>{{'DASHBOARD.FDAS.NOTCONNECTED'|translate}}</b></div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <label class=\"fw-bold\" translate>DEVICES.FDA</label>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold\" translate>PHYSICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.physicalAddress}}</td>\n                  </tr>\n                </table>\n                <label class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.FIRST</label>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold\" translate>NAME</td>\n                    <td class=\"text-end\">{{fda.damper1.name}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.POSITION</td>\n                    <td class=\"text-end\">{{fda.damper1.position}}</td>\n                  </tr>\n                </table>\n                <label class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.SECOND</label>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold\" translate>NAME</td>\n                    <td class=\"text-end\">{{fda.damper2.name}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.POSITION</td>\n                    <td class=\"text-end\">{{fda.damper2.position}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.MODE</td>\n                    <td class=\"text-end\">{{fda.damper2.currentDamperMode | translate}}</td>\n                  </tr>\n                </table>\n                <div *ngIf=\"auth.isAdmin() && fdaService.loaded && sysHealthService.status.fdas.inStatusUnconfigured.length > 0\"\n                     class=\"btn btn-primary\" (click)=\"replaceFda(fda.id)\" translate>FDACONFIG.FDAS.REPLACE</div>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n      <div class=\"row accordion-level-1\">\n        <div class=\"my-2 fda-info\" *ngFor=\"let fda of sysHealthService.status.fdas.inStatusConfigured\">\n          <ngb-accordion activeIds=\"0\">\n            <ngb-panel class=\"accordion-header-danger\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <div>{{(fda.dynamicalAddress < 32768 ? 'B1' : 'B2') + '/' + (fda.dynamicalAddress < 32768 ? fda.dynamicalAddress : (fda.dynamicalAddress - 32767))}}</div>\n                  <div class=\"border-left-inno\">{{fda.fdaConfigRef!.position}}</div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.DYNAMICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.dynamicalAddress}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.ONBUSBRANCH</td>\n                    <td class=\"text-end\">{{(fda.dynamicalAddress < 32768 ? 'B1' : 'B2')|translate}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>PHYSICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.physicalAddress}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>DASHBOARD.FDAS.OPERATIONAL</td>\n                    <td class=\"text-end\" translate>{{fda.operational ? 'YES' : 'NO'}}</td>\n                  </tr>\n                </table>\n                <div class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.FIRST</div>\n                <div class=\"d-flex flex-column mt-2 mb-2 p-2 justify-content-between radius\"\n                     [ngClass]=\"{'damper-opened-bg': fda.damper1.currentState.includes('Opened'),\n                                    'damper-closed-bg': fda.damper1.currentState.includes('Closed'),\n                                    'damper-opening-bg': fda.damper1.currentState.includes('Opening'),\n                                    'damper-closing-bg': fda.damper1.currentState.includes('Closing'),\n                                    'damper-timeout': fda.damper1.currentState.includes('Timeout'),\n                                    'damper-alarm': fda.damper1.currentState.includes('Alarm')}\">\n                  <div>{{damperConfigByFda(fda.physicalAddress, 1)?.name}}</div>\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>FDACONFIG.FDAS.DAMPERS.MODE</div>\n                    <div *ngIf=\"!fda.damper1.currentDamperMode\" class=\"ms-3\">{{'FDACONFIG.FDAS.DAMPERS.MODES.UNKNOWN'|translate}}</div>\n                    <div *ngIf=\"fda.damper1.currentDamperMode\" class=\"ms-3\">{{('FDACONFIG.FDAS.DAMPERS.MODES.' + fda.damper1.currentDamperMode.toUpperCase()) | translate}}</div>\n                  </div>\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>STATUS</div>\n                    <div class=\"ms-3\">\n                      <div *ngFor=\"let statusPart of fda.damper1.currentState.split('|')\"\n                           class=\"p-0\">{{('FDACONFIG.FDAS.DAMPERS.STATES.' + statusPart.toUpperCase()) | translate}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"fw-bold mt-2\" translate>FDACONFIG.FDAS.DAMPERS.SECOND</div>\n                <div class=\"d-flex flex-column mt-2 mb-2 p-2 justify-content-between radius\"\n                     [ngClass]=\"{'damper-opened-bg': fda.damper2.currentState.includes('Opened'),\n                                    'damper-closed-bg': fda.damper2.currentState .includes('Closed'),\n                                    'damper-opening-bg': fda.damper2.currentState.includes('Opening'),\n                                    'damper-closing-bg': fda.damper2.currentState.includes('Closing'),\n                                    'damper-timeout': fda.damper2.currentState.includes('Timeout'),\n                                    'damper-alarm': fda.damper2.currentState.includes('Alarm')}\">\n                  <div>{{damperConfigByFda(fda.physicalAddress, 2)?.name}}</div>\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>FDACONFIG.FDAS.DAMPERS.MODE</div>\n                    <div *ngIf=\"!fda.damper2.currentDamperMode\" class=\"ms-3\">{{'FDACONFIG.FDAS.DAMPERS.MODES.UNKNOWN'|translate}}</div>\n                    <div *ngIf=\"fda.damper2.currentDamperMode\" class=\"ms-3\">{{('FDACONFIG.FDAS.DAMPERS.MODES.' + fda.damper2.currentDamperMode.toUpperCase()) | translate}}</div>\n                  </div>\n                  <div class=\"d-flex flex-row flex-nowrap justify-content-between\">\n                    <div translate>STATUS</div>\n                    <div class=\"ms-3\">\n                      <div *ngFor=\"let statusPart of fda.damper2.currentState.split('|')\"\n                           class=\"p-0\">{{('FDACONFIG.FDAS.DAMPERS.STATES.' + statusPart.toUpperCase()) | translate}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"inputs\" title=\"{{ 'DASHBOARD.TITLES.INPUTS' | translate }}\" [disabled]=\"!socketService.connectedToBackend\">\n    <ng-template ngbPanelContent>\n      <div class=\"row accordion-level-1\">\n        <div class=\"col-md-4 my-2\" *ngFor=\"let input of sysHealthService.status.inputs\">\n          <ngb-accordion activeIds=\"0\" class=\"bg-warning\">\n            <ngb-panel class=\"accordion-header\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <app-status-symbols [showInput]=\"true\" [inputHigh]=\"input.status === 1\" [inputDisabled]=\"input.inputConfigRef.disabled\"></app-status-symbols>\n                  <div class=\"ms-3\">{{input.inputConfigRef.name}}</div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <table class=\"table table-borderless\">\n                  <tr *ngIf=\"input.inputConfigRef.disabled\">\n                    <td class=\"fw-bold\" translate>IO.DISABLED</td>\n                    <td class=\"text-end\" translate>YES</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.STATUS</td>\n                    <td class=\"text-end\">{{(input.status === 1 ? 'IO.HIGH' : 'IO.LOW') | translate}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.NUMBER</td>\n                    <td class=\"text-end\">{{input.number}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.INVERTED</td>\n                    <td class=\"text-end\">{{(input.inputConfigRef.inverted ? 'YES' : 'NO') | translate}}</td>\n                  </tr>\n                  <tr *ngIf=\"input.inputConfigRef.description\">\n                    <td class=\"align-top fw-bold\" colspan=\"2\" translate>DESCRIPTION</td>\n                  </tr>\n                  <tr *ngIf=\"input.inputConfigRef.description\">\n                    <td class=\"text-end text-justify\" colspan=\"2\"><pre>{{input.inputConfigRef.description}}</pre></td>\n                  </tr>\n                </table>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel *ngIf=\"auth.isAdmin()\" id=\"outputs\" title=\"{{ 'DASHBOARD.TITLES.OUTPUTS' | translate }}\" [disabled]=\"!socketService.connectedToBackend\">\n    <ng-template ngbPanelContent>\n\n      <div class=\"row accordion-level-1\">\n        <div class=\"col-md-4 my-2\" *ngFor=\"let output of sysHealthService.status.outputs\">\n          <ngb-accordion activeIds=\"0\" class=\"bg-warning\">\n            <ngb-panel class=\"accordion-header\">\n              <ng-template ngbPanelHeader>\n                <button ngbPanelToggle class=\"accordion-button\">\n                  <app-status-symbols [showOutput]=\"true\" [outputHigh]=\"output.status === 1\"></app-status-symbols>\n                  <div class=\"ms-3\">{{output.outputConfigRef.name}}</div>\n                </button>\n              </ng-template>\n              <ng-template ngbPanelContent>\n                <table class=\"table table-borderless\">\n                  <tr *ngIf=\"output.outputConfigRef.disabled\">\n                    <td class=\"fw-bold\" translate>IO.DISABLED</td>\n                    <td class=\"text-end\" translate>YES</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.STATUS</td>\n                    <td class=\"text-end\">{{(output.status === 1 ? 'IO.HIGH' : 'IO.LOW') | translate}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.NUMBER</td>\n                    <td class=\"text-end\">{{output.number}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>IO.INVERTED</td>\n                    <td class=\"text-end\">{{(output.outputConfigRef.inverted ? 'YES' : 'NO') | translate}}</td>\n                  </tr>\n                  <tr *ngIf=\"output.outputConfigRef.description\">\n                    <td class=\"align-top fw-bold\" colspan=\"2\" translate>DESCRIPTION</td>\n                  </tr>\n                  <tr *ngIf=\"output.outputConfigRef.description\">\n                    <td class=\"text-end text-justify\" colspan=\"2\"><pre>{{output.outputConfigRef.description}}</pre></td>\n                  </tr>\n                </table>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators} from \"@angular/forms\";\r\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\r\nimport * as _ from \"lodash\";\r\nimport {DamperGroupConfigDto} from \"../../dto/damperGroupConfig.class\";\r\nimport {DamperGroupNameValidator} from \"../../validators/damperGroupNameValidator\";\r\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\r\nimport {FdcService} from \"../../services/fdc.service\";\r\nimport {UUID} from \"angular2-uuid\";\r\nimport {InputConfigDto} from \"../../dto/inputConfig.class\";\r\nimport {OutputConfigDto} from \"../../dto/outputConfig.class\";\r\nimport {IDropdownSettings} from 'ng-multiselect-dropdown';\r\nimport {InputService} from \"../../services/dto-services/input.service\";\r\nimport {OutputService} from \"../../services/dto-services/output.service\";\r\n\r\n@Component({\r\n  selector: 'app-new-damper-group',\r\n  templateUrl: './edit-damper-group.component.html',\r\n  styleUrls: ['./edit-damper-group.component.css']\r\n})\r\nexport class EditDamperGroupComponent implements OnInit {\r\n  @Input()\r\n  damperGroup: DamperGroupConfigDto = {} as DamperGroupConfigDto;\r\n  shadow: DamperGroupConfigDto = {} as DamperGroupConfigDto;\r\n\r\n  inputsList: InputConfigDto[] = [];\r\n  outputsList: OutputConfigDto[] = [];\r\n  selectedItems: any[] = [];\r\n  dropdownSettings: IDropdownSettings  = {\r\n    singleSelection: false,\r\n    idField: 'id',\r\n    textField: 'name',\r\n    allowSearchFilter: false,\r\n    enableCheckAll: false\r\n  };\r\n\r\n  form: UntypedFormGroup = {} as UntypedFormGroup;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder,\r\n              public damperGroupService: DamperGroupService, public fdcService: FdcService,\r\n              public mailTemplateService: MailTemplateService, private inputService: InputService, private outputService: OutputService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.shadow = _.cloneDeep(this.damperGroup);\r\n    this.form = this.fb.group({\r\n      id: [undefined, [], []],\r\n      name: [undefined, [Validators.required], [DamperGroupNameValidator.createValidator(this.damperGroupService, this.shadow)]],\r\n      bmaAlarm: [undefined, [Validators.required], []],\r\n      ventilationRequest: [undefined, [], []],\r\n      ventilationAllowed: [undefined, [], []],\r\n      alarmMailTemplate: [undefined],\r\n      timeoutMailTemplate: [undefined],\r\n      type: ['DamperGroup']\r\n    })\r\n    if (this.damperGroup.name) {\r\n      const clone = _.cloneDeep(this.damperGroup) as any;\r\n      if (clone.bmaAlarm) {\r\n        clone.bmaAlarm = clone.bmaAlarm.map((val: string) => {\r\n          return this.inputService.getById(val);\r\n        });\r\n      }\r\n      if (clone.ventilationRequest) {\r\n        clone.ventilationRequest = clone.ventilationRequest.map((val: string) => {\r\n          return this.inputService.getById(val);\r\n        });\r\n      }\r\n      if (clone.ventilationAllowed) {\r\n        clone.ventilationAllowed = clone.ventilationAllowed.map((val: string) => {\r\n          return this.outputService.getById(val);\r\n        });\r\n      }\r\n      this.form.patchValue(clone);\r\n    }\r\n    this.inputsList = this.getAvailableInputs();\r\n    this.outputsList = this.getAvailableOutputs();\r\n  }\r\n\r\n  get id(): UntypedFormControl {\r\n    return this.form.controls['id'] as UntypedFormControl;\r\n  }\r\n\r\n  get bmaAlarm(): UntypedFormControl {\r\n    return this.form.controls['bmaAlarm'] as UntypedFormControl;\r\n  }\r\n\r\n  get ventilationRequest(): UntypedFormControl {\r\n    return this.form.controls['ventilationRequest'] as UntypedFormControl;\r\n  }\r\n\r\n  get ventilationAllowed(): UntypedFormControl {\r\n    return this.form.controls['ventilationAllowed'] as UntypedFormControl;\r\n  }\r\n\r\n  getAvailableInputs(): InputConfigDto[] {\r\n    return this.fdcService.data.inputs;\r\n  }\r\n\r\n  getAvailableOutputs(): OutputConfigDto[] {\r\n    let usedOutputIds: string[] = [];\r\n    this.damperGroupService.getData().forEach(dg => {\r\n      if (dg.id != this.id.value && dg.ventilationAllowed && dg.ventilationAllowed.length > 0) {\r\n        usedOutputIds.push(...dg.ventilationAllowed);\r\n      }\r\n    });\r\n    return this.fdcService.data.outputs.filter(output => !usedOutputIds.includes(output.id));\r\n  }\r\n\r\n  getOutputById(id: string) {\r\n    const output = this.fdcService.data.outputs.find(output => output.id === id);\r\n    return output ? output : {name: 'Error!'} as OutputConfigDto;\r\n  }\r\n\r\n  checkForReturn(event: any) {\r\n    if (event.keyCode == 13 && this.form.valid) {\r\n      this.submitForm();\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.form.valid) {\r\n      if ((this.form.controls['id'] as UntypedFormControl).value === null || (this.form.controls['id'] as UntypedFormControl).value === undefined) {\r\n        this.form.controls['id'].setValue(UUID.UUID());\r\n      }\r\n      if (this.ventilationAllowed.value) {\r\n        this.ventilationAllowed.setValue(this.ventilationAllowed.value.map((val: any) => val.id));\r\n      }\r\n      if (this.ventilationRequest.value) {\r\n        this.ventilationRequest.setValue(this.ventilationRequest.value.map((val: any) => val.id));\r\n      }\r\n      if (this.bmaAlarm.value) {\r\n        this.bmaAlarm.setValue(this.bmaAlarm.value.map((val: any) => val.id));\r\n      }\r\n      this.activeModal.close(this.form.value);\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 *ngIf=\"shadow.id === undefined\" class=\"modal-title\">{{'FDACONFIG.GROUPS.NEW'|translate}}</h4>\r\n  <h4 *ngIf=\"shadow.id !== undefined\" class=\"modal-title\">{{'FDACONFIG.GROUPS.EDIT'|translate}}</h4>\r\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" (keydown)=\"checkForReturn($event)\">\r\n  <div class=\"modal-body modal-body-background\">\r\n    <div class=\"container\">\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"name\" translate>NAME</label>\r\n        <div class=\"input-group\">\r\n          <input id=\"name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\" appAutofocus>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label my-0\" for=\"bmaAlarm\" translate>FDACONFIG.GROUPS.ALARMINPUT</label>\r\n        <ng-multiselect-dropdown\r\n          id=\"bmaAlarm\"\r\n          formControlName=\"bmaAlarm\"\r\n          [settings]=\"dropdownSettings\"\r\n          [data]=\"inputsList\">\r\n          <ng-template #optionSelectedTemplate optionSelectedTemplate let-option=\"option\"  let-id=\"id\">\r\n            <div class=\"text-nowrap pe-2\">{{option}}</div>\r\n          </ng-template>\r\n        </ng-multiselect-dropdown>\r\n\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label my-0\" for=\"ventilationRequest\" translate>FDACONFIG.GROUPS.VENTINPUT</label>\r\n        <ng-multiselect-dropdown\r\n          id=\"ventilationRequest\"\r\n          formControlName=\"ventilationRequest\"\r\n          [placeholder]=\"'custom placeholder'\"\r\n          [settings]=\"dropdownSettings\"\r\n          [data]=\"inputsList\">\r\n          <ng-template #optionSelectedTemplate optionSelectedTemplate let-option=\"option\"  let-id=\"id\">\r\n            <div class=\"text-nowrap pe-2\">{{option}}</div>\r\n          </ng-template>\r\n        </ng-multiselect-dropdown>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label my-0\" for=\"ventilationAllowed\" translate>FDACONFIG.GROUPS.VENTOUTPUT</label>\r\n        <ng-multiselect-dropdown\r\n          id=\"ventilationAllowed\"\r\n          formControlName=\"ventilationAllowed\"\r\n          [placeholder]=\"'custom placeholder'\"\r\n          [settings]=\"dropdownSettings\"\r\n          [data]=\"outputsList\">\r\n          <ng-template #optionSelectedTemplate optionSelectedTemplate let-option=\"option\"  let-id=\"id\">\r\n            <div class=\"text-nowrap pe-2\">{{option}}</div>\r\n          </ng-template>\r\n        </ng-multiselect-dropdown>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label my-0\" for=\"alarmMailTemplate\" translate>FDACONFIG.GROUPS.MAIL.ALARM</label>\r\n        <select class=\"form-select\" id=\"alarmMailTemplate\" formControlName=\"alarmMailTemplate\">\r\n          <option *ngFor=\"let mailTemplate of mailTemplateService.data\" [ngValue]=\"mailTemplate.id\">{{mailTemplate.name}}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label my-0\" for=\"timeoutMailTemplate\" translate>FDACONFIG.GROUPS.MAIL.TIMEOUT</label>\r\n        <select class=\"form-select\" id=\"timeoutMailTemplate\" formControlName=\"timeoutMailTemplate\">\r\n          <option *ngFor=\"let mailTemplate of mailTemplateService.data\" [ngValue]=\"mailTemplate.id\">{{mailTemplate.name}}</option>\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer modal-footer-background\">\r\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !damperGroupService.loaded\" translate>SAVE</button>\r\n  </div>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport * as _ from \"lodash\";\nimport {DamperConfigDto} from \"../../dto/damperConfig.class\";\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\n\n@Component({\n  selector: 'app-edit-damper-mode',\n  templateUrl: './edit-damper-mode.component.html',\n  styleUrls: ['./edit-damper-mode.component.css']\n})\nexport class EditDamperModeComponent implements OnInit {\n  @Input()\n  origDamperMode: any = {};\n  shadow: any = {};\n\n  @Input()\n  damperConfig: DamperConfigDto | undefined;\n  @Input()\n  fdaConfig: FdaConfigDto | undefined;\n\n  damperConfigClone: DamperConfigDto | undefined;\n  fdaConfigClone: FdaConfigDto | undefined;\n\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder,\n              public damperGroupService: DamperGroupService, public fdaService: FdaService) {\n  }\n\n  ngOnInit(): void {\n    this.damperConfigClone = this.damperConfig ? _.cloneDeep(this.damperConfig) : undefined;\n    this.fdaConfigClone = this.fdaConfig ? _.cloneDeep(this.fdaConfig) : undefined;\n    this.shadow = _.cloneDeep(this.origDamperMode);\n    this.form = this.fb.group({\n      damperMode: ['Automatic']\n    });\n    this.form.patchValue({damperMode: this.origDamperMode});\n  }\n\n  submitForm() {\n    this.activeModal.close(this.form.value);\n  }\n\n  getDamperFdaReference(): string {\n    if (this.fdaConfigClone) {\n      let dNum = this.fdaConfigClone.damper1.id === this.damperConfigClone?.id ? 'D1' : 'D2';\n      return this.fdaConfigClone?.physicalAddress + ' - ' + dNum;\n    } else {\n      return '---';\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\r\n  <h4 class=\"modal-title text-nowrap\">{{'FDACONFIG.FDAS.DAMPERS.CHANGEMODE'|translate}} - {{getDamperFdaReference()}}</h4>\r\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n  <div class=\"modal-body modal-body-background\">\r\n    <div class=\"container\">\r\n      <div class=\"fw-bold\" translate>NAME</div>\r\n      <div>{{damperConfigClone?.name}}</div>\r\n      <div class=\"form-group mb-1 mt-2\">\r\n        <label class=\"form-label my-0 fw-bold\" for=\"damperMode\" translate>FDACONFIG.FDAS.DAMPERS.MODE</label>\r\n        <select id=\"damperMode\" class=\"form-select\" formControlName=\"damperMode\">\r\n          <option value=\"Disabled\" translate>FDACONFIG.FDAS.DAMPERS.MODES.DISABLED</option>\r\n          <option value=\"Automatic\" translate>FDACONFIG.FDAS.DAMPERS.MODES.AUTOMATIC</option>\r\n          <option value=\"ManualOpen\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALOPEN</option>\r\n          <option value=\"ManualClose\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALCLOSE</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer modal-footer-background\">\r\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !fdaService.loaded\" translate>SAVE</button>\r\n  </div>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport * as _ from \"lodash\";\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {ToastService} from \"../../services/toast-service.service\";\nimport {UUID} from \"angular2-uuid\";\nimport {DamperGroupConfigDto} from \"../../dto/damperGroupConfig.class\";\nimport {IDropdownSettings} from \"ng-multiselect-dropdown\";\n\n@Component({\n  selector: 'app-edit-fda',\n  templateUrl: './edit-fda.component.html',\n  styleUrls: ['./edit-fda.component.css']\n})\nexport class EditFdaComponent implements OnInit {\n  @Input()\n  fda: FdaConfigDto = {} as FdaConfigDto;\n  shadow: FdaConfigDto = {} as FdaConfigDto;\n\n  canEditPhysicalAddress = false;\n\n  groupsList: DamperGroupConfigDto[] = [];\n  dropdownSettings: IDropdownSettings  = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'name',\n    allowSearchFilter: false,\n    enableCheckAll: false\n  };\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder, public damperGroupService: DamperGroupService,\n              public fdaService: FdaService, private toast: ToastService) {\n    this.groupsList = damperGroupService.getData();\n  }\n\n  ngOnInit(): void {\n    this.shadow = _.cloneDeep(this.fda);\n    const toApply = _.cloneDeep(this.fda) as any;\n    this.canEditPhysicalAddress = toApply.physicalAddress == undefined;\n    this.form = this.fb.group({\n      physicalAddress: ['', [], []],\n      vBusRelayBoot: [0],\n      vBusRelayNormal: [1],\n      vBusRelayAlarm: [1],\n      vBusRelayPowerLoss: [0],\n      vBusRelayBusError: [0],\n      position: [''],\n      damper1: this.fb.group({\n        name: ['', []],\n        number: [1],\n        damperMode: ['Automatic'],\n        damperType: ['Main'],\n        relayStateBoot: [0],\n        relayStateNormal: [1],\n        relayStateAlarm: [0],\n        relayStatePowerLoss: [0],\n        relayStateBusError: [0],\n        position: ['', [], []],\n        groups: [undefined],\n        type: ['Damper'],\n        id: [UUID.UUID()]\n      }),\n      damper2: this.fb.group({\n        name: ['', []],\n        number: [2],\n        damperMode: ['Automatic'],\n        damperType: ['Main'],\n        relayStateBoot: [0],\n        relayStateNormal: [1],\n        relayStateAlarm: [0],\n        relayStatePowerLoss: [0],\n        relayStateBusError: [0],\n        position: ['', [], []],\n        groups: [undefined],\n        type: ['Damper'],\n        id: [UUID.UUID()]\n      }),\n      id: ['']\n    });\n    if (this.fda.id) {\n      if (toApply.damper1 && toApply.damper1.groups && toApply.damper1.groups.length > 0) {\n        toApply.damper1.groups = this.damperGroupService.groupsByIds(toApply.damper1.groups);\n      }\n      if (toApply.damper2 && toApply.damper2.groups && toApply.damper2.groups.length > 0) {\n        toApply.damper2.groups = this.damperGroupService.groupsByIds(toApply.damper2.groups);\n      }\n      this.form.patchValue(toApply);\n    }\n  }\n\n  get groups1(): UntypedFormControl {\n    return (this.form.controls['damper1'] as UntypedFormGroup).controls['groups'] as UntypedFormControl;\n  }\n\n  get groups2(): UntypedFormControl {\n    return (this.form.controls['damper2'] as UntypedFormGroup).controls['groups'] as UntypedFormControl;\n  }\n\n  checkForReturn(event: any) {\n    if (event.target.tagName.toUpperCase() !== 'TEXTAREA' && event.keyCode == 13 && this.form.valid) {\n      this.submitForm();\n    }\n  }\n\n  submitForm() {\n    if (this.form.valid && this.fdaService.checkIfPhysicalAddressUnique(this.form.value)) {\n      if (this.groups1.value && this.groups1.value.length > 0) {\n        this.groups1.setValue(this.groups1.value.map((val: any) => val.id));\n      }\n      if (this.groups2.value && this.groups2.value.length > 0) {\n        this.groups2.setValue(this.groups2.value.map((val: any) => val.id));\n      }\n      this.activeModal.close(this.form.value);\n    } else {\n      this.toast.show(\"Physical ID must be unique!\", { classname: 'bg-danger text-white text-bold toast-font-size'});\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\r\n  <h4 class=\"modal-title\" translate>FDACONFIG.FDAS.NEW</h4>\r\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" (keydown)=\"checkForReturn($event)\">\r\n  <div class=\"modal-body modal-header-background\">\r\n    <div class=\"container\">\r\n      <label class=\"fw-bold\" translate>FDACONFIG.FDAS.EDIT.FDA</label>\r\n\r\n      <div class=\"form-group my-1\">\r\n        <label class=\"form-label my-0\" for=\"physicalAddress\" translate>PHYSICALADDRESS</label>\r\n        <input id=\"physicalAddress\" class=\"form-control shadow-none\" formControlName=\"physicalAddress\" type=\"number\"\r\n               [ngClass]=\"{'text-black': !canEditPhysicalAddress}\" [readonly]=\"!canEditPhysicalAddress\">\r\n      </div>\r\n\r\n      <div class=\"form-group my-1\">\r\n        <label class=\"form-label my-0\" for=\"physicalAddress\" translate>FDACONFIG.POSITION</label>\r\n        <input id=\"position\" class=\"form-control shadow-none\" formControlName=\"position\" type=\"text\">\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div formGroupName=\"damper1\" class=\"mt-4 col-lg-6\">\r\n          <label class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.FIRST</label>\r\n\r\n          <div class=\"form-group mb-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-name\" translate>NAME</label>\r\n            <input id=\"damper-1-name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\">\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-damperMode\" translate>FDACONFIG.FDAS.DAMPERS.MODE</label>\r\n            <select id=\"damper-1-damperMode\" class=\"form-select\" formControlName=\"damperMode\">\r\n              <option value=\"Disabled\" translate>FDACONFIG.FDAS.DAMPERS.MODES.DISABLED</option>\r\n              <option value=\"Automatic\" translate>FDACONFIG.FDAS.DAMPERS.MODES.AUTOMATIC</option>\r\n              <option value=\"ManualOpen\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALOPEN</option>\r\n              <option value=\"ManualClose\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALCLOSE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-damperType\" translate>FDACONFIG.FDAS.DAMPERS.TYPE</label>\r\n            <select id=\"damper-1-damperType\" class=\"form-select\" formControlName=\"damperType\">\r\n              <option value=\"Main\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.MAIN</option>\r\n              <option value=\"Auxiliary\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.AUXILIARY</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-relayStateBoot\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BOOT</label>\r\n            <select id=\"damper-1-relayStateBoot\" class=\"form-select\" formControlName=\"relayStateBoot\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-relayStateNormal\" translate>FDACONFIG.FDAS.DAMPERS.STATE.NORMAL</label>\r\n            <select id=\"damper-1-relayStateNormal\" class=\"form-select\" formControlName=\"relayStateNormal\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-relayStateAlarm\" translate>FDACONFIG.FDAS.DAMPERS.STATE.ALARM</label>\r\n            <select id=\"damper-1-relayStateAlarm\" class=\"form-select\" formControlName=\"relayStateAlarm\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-relayStatePowerLoss\" translate>FDACONFIG.FDAS.DAMPERS.STATE.POWERLOSS</label>\r\n            <select id=\"damper-1-relayStatePowerLoss\" class=\"form-select\" formControlName=\"relayStatePowerLoss\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-relayStateBusError\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BUSERROR</label>\r\n            <select id=\"damper-1-relayStateBusError\" class=\"form-select\" formControlName=\"relayStateBusError\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-position\" translate>FDACONFIG.POSITION</label>\r\n            <input id=\"damper-1-position\" class=\"form-control shadow-none\" formControlName=\"position\" type=\"text\">\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-1-group\" translate>FDACONFIG.FDAS.DAMPERS.GROUP</label>\r\n            <ng-multiselect-dropdown\r\n              id=\"damper-1-group\"\r\n              formControlName=\"groups\"\r\n              [settings]=\"dropdownSettings\"\r\n              [data]=\"groupsList\"\r\n            ></ng-multiselect-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div formGroupName=\"damper2\" class=\"mt-4 col-lg-6\">\r\n          <label class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.SECOND</label>\r\n\r\n          <div class=\"form-group mb-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-name\" translate>NAME</label>\r\n            <input id=\"damper-2-name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\">\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-damperMode\" translate>FDACONFIG.FDAS.DAMPERS.MODE</label>\r\n            <select id=\"damper-2-damperMode\" class=\"form-select\" formControlName=\"damperMode\">\r\n              <option value=\"Disabled\" translate>FDACONFIG.FDAS.DAMPERS.MODES.DISABLED</option>\r\n              <option value=\"Automatic\" translate>FDACONFIG.FDAS.DAMPERS.MODES.AUTOMATIC</option>\r\n              <option value=\"ManualOpen\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALOPEN</option>\r\n              <option value=\"ManualClose\" translate>FDACONFIG.FDAS.DAMPERS.MODES.MANUALCLOSE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-damperType\" translate>FDACONFIG.FDAS.DAMPERS.TYPE</label>\r\n            <select id=\"damper-2-damperType\" class=\"form-select\" formControlName=\"damperType\">\r\n              <option value=\"Main\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.MAIN</option>\r\n              <option value=\"Auxiliary\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.AUXILIARY</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-relayStateBoot\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BOOT</label>\r\n            <select id=\"damper-2-relayStateBoot\" class=\"form-select\" formControlName=\"relayStateBoot\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-relayStateNormal\" translate>FDACONFIG.FDAS.DAMPERS.STATE.NORMAL</label>\r\n            <select id=\"damper-2-relayStateNormal\" class=\"form-select\" formControlName=\"relayStateNormal\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-relayStateAlarm\" translate>FDACONFIG.FDAS.DAMPERS.STATE.ALARM</label>\r\n            <select id=\"damper-2-relayStateAlarm\" class=\"form-select\" formControlName=\"relayStateAlarm\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-relayStatePowerLoss\" translate>FDACONFIG.FDAS.DAMPERS.STATE.POWERLOSS</label>\r\n            <select id=\"damper-2-relayStatePowerLoss\" class=\"form-select\" formControlName=\"relayStatePowerLoss\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-relayStateBusError\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BUSERROR</label>\r\n            <select id=\"damper-2-relayStateBusError\" class=\"form-select\" formControlName=\"relayStateBusError\">\r\n              <option [ngValue]=\"0\" translate>FDACONFIG.FDAS.DAMPERS.STATES.CLOSED</option>\r\n              <option [ngValue]=\"1\" translate>FDACONFIG.FDAS.DAMPERS.STATES.OPEN</option>\r\n              <option [ngValue]=\"2\" translate>FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-position\" translate>FDACONFIG.POSITION</label>\r\n            <input id=\"damper-2-position\" class=\"form-control shadow-none\" formControlName=\"position\" type=\"text\">\r\n          </div>\r\n\r\n          <div class=\"form-group my-1\">\r\n            <label class=\"form-label my-0\" for=\"damper-2-group\" translate>FDACONFIG.FDAS.DAMPERS.GROUP</label>\r\n            <ng-multiselect-dropdown\r\n              id=\"damper-2-group\"\r\n              formControlName=\"groups\"\r\n              [settings]=\"dropdownSettings\"\r\n              [data]=\"groupsList\"\r\n            ></ng-multiselect-dropdown>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer modal-footer-background\">\r\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !fdaService.loaded\" translate>SAVE</button>\r\n  </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal, NgbDateStruct, NgbTimeStruct} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UntypedFormBuilder} from \"@angular/forms\";\nimport {FdcService} from \"../../services/fdc.service\";\n\n@Component({\n  selector: 'app-edit-fdc-time',\n  templateUrl: './edit-fdc-time.component.html',\n  styleUrls: ['./edit-fdc-time.component.css']\n})\nexport class EditFdcTimeComponent implements OnInit {\n  fdcTimeLoaded = false;\n  updateTime = true;\n\n  fdcDateModel: NgbDateStruct = {year: 0, month: 0, day: 0};\n  fdcTimeModel: NgbTimeStruct = {hour: 0, minute: 0, second: 0}\n  localDate: string | undefined;\n  fdcDate: string | undefined;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder, private fdcService: FdcService) {\n    this.setLocalDate();\n    this.loadFdcDate();\n  }\n\n  loadFdcDate(): void {\n    this.fdcService.getFdcTime().subscribe({\n      next: (data) => {\n        let fdcDateNow = new Date(data.milliseconds);\n        if (!this.fdcTimeLoaded) {\n          this.fdcDateModel = {\n            year: fdcDateNow.getFullYear(),\n            month: fdcDateNow.getMonth() + 1,\n            day: fdcDateNow.getDate()\n          };\n          this.fdcTimeModel = {\n            hour: fdcDateNow.getHours(),\n            minute: fdcDateNow.getMinutes(),\n            second: 0\n          };\n        }\n        this.fdcDate = this.toDateTimeStr(fdcDateNow);\n        this.fdcTimeLoaded = true;\n        if (this.updateTime) {\n          setTimeout(() => this.loadFdcDate(), 1000);\n        }\n      },\n      error: (err) => console.log(err)\n    });\n  }\n\n  setLocalDate(): void {\n    let dt = new Date();\n    this.localDate = this.toDateTimeStr(dt);\n\n    if (this.updateTime) {\n      setTimeout(() => this.setLocalDate(), 1000);\n    }\n  }\n\n  toDateTimeStr(dt: Date): string {\n    return `${\n      dt.getDate().toString().padStart(2, '0')}.${\n      (dt.getMonth() + 1).toString().padStart(2, '0')}.${\n      dt.getFullYear().toString().padStart(4, '0')} ${\n      dt.getHours().toString().padStart(2, '0')}:${\n      dt.getMinutes().toString().padStart(2, '0')}:${\n      dt.getSeconds().toString().padStart(2, '0')}`;\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitFdcTime() {\n    this.updateTime = false;\n    this.activeModal.close(new Date(\n      this.fdcDateModel.year,\n      this.fdcDateModel.month - 1,\n      this.fdcDateModel.day,\n      this.fdcTimeModel.hour,\n      this.fdcTimeModel.minute,\n      this.fdcTimeModel.second));\n  }\n\n  syncToLocalTime() {\n    this.updateTime = false;\n    this.activeModal.close(new Date().getTime());\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" translate>SYSCONF.TIME.SETTIME</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body modal-body-background\">\n  <div class=\"container\">\n    <div *ngIf=\"!fdcTimeLoaded\" translate>SYSCONF.TIME.LOADINGSYSTEMTIME</div>\n    <div *ngIf=\"fdcTimeLoaded\">\n      <div class=\"fw-bold mb-1\" translate>SYSCONF.TIME.LOCALTIME</div>\n      <div>{{localDate}}</div>\n      <button class=\"btn btn-success mt-2\" (click)=\"syncToLocalTime()\" translate>SYSCONF.TIME.SYNCLOCALANDSAVE</button>\n      <div class=\"fw-bold mt-3 mb-1\" translate>SYSCONF.TIME.FDCTIME</div>\n      <div class=\"mb-2\">{{fdcDate}}</div>\n      <div class=\"d-flex flex-wrap\">\n        <ngb-datepicker [(ngModel)]=\"fdcDateModel\"></ngb-datepicker>\n        <ngb-timepicker class=\"timepicker\" [(ngModel)]=\"fdcTimeModel\"></ngb-timepicker>\n      </div>\n      <button class=\"btn btn-success mt-2\" (click)=\"submitFdcTime()\" translate>SYSCONF.TIME.SAVEMANUAL</button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from \"@angular/forms\";\nimport {InputService} from \"../../services/dto-services/input.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport * as _ from \"lodash\";\nimport {InputNameValidator, InputNumberValidator} from \"../../validators/inputValidators\";\nimport {InputConfigDto} from \"../../dto/inputConfig.class\";\n\n@Component({\n  selector: 'app-edit-input',\n  templateUrl: './edit-input.component.html',\n  styleUrls: ['./edit-input.component.css']\n})\nexport class EditInputComponent implements OnInit {\n  @Input()\n  input: InputConfigDto = {} as InputConfigDto;\n  shadowInput: InputConfigDto = {} as InputConfigDto;\n\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder, public inputService: InputService) {\n  }\n\n  ngOnInit(): void {\n    this.shadowInput = _.cloneDeep(this.input);\n    this.form = this.fb.group({\n      disabled: [0],\n      name: ['', [Validators.required], [InputNameValidator.createValidator(this.inputService, this.shadowInput)]],\n      number: ['', [Validators.required], [InputNumberValidator.createValidator(this.inputService, this.shadowInput)]],\n      description: [''],\n      inverted: [0],\n      groups: [''],\n      type: ['Input']\n    });\n    if (this.input.number) {\n      this.form.patchValue(this.input);\n    }\n  }\n\n  checkForReturn(event: any) {\n    if (event.target.tagName.toUpperCase() !== 'TEXTAREA' && event.keyCode == 13 && this.form.valid) {\n      this.submitForm();\n    }\n  }\n\n  submitForm() {\n    if (this.form.valid) {\n      this.activeModal.close(this.form.value);\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" translate>INPUTS.NEW</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" (keydown)=\"checkForReturn($event)\">\n  <div class=\"modal-body modal-body-background\">\n    <div class=\"container\">\n\n      <div class=\"form-check ps-4 col-12\">\n        <input class=\"form-check-input\" id=\"disabled\" type=\"checkbox\" value=\"\" formControlName=\"disabled\">\n        <label class=\"form-check-label\" for=\"disabled\" translate>IO.DISABLED</label>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"name\" translate>NAME</label>\n        <input id=\"name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\" appAutofocus>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"number\" translate>IO.NUMBER-TERMINAL</label>\n        <select id=\"number\" class=\"form-select\" [ngModel]=\"form.value.number\" formControlName=\"number\">\n          <option class=\"bg-info\" *ngIf=\"shadowInput.number\" [ngValue]=\"shadowInput.number\">{{shadowInput.number}}</option>\n          <option *ngFor=\"let number of inputService.availableInputNumbers\" [ngValue]=\"number\">{{number}}</option>\n        </select>\n      </div>\n\n      <div class=\"form-check col\">\n        <input class=\"form-check-input\" id=\"inverted\" type=\"checkbox\" value=\"\" formControlName=\"inverted\">\n        <label class=\"form-check-label\" for=\"inverted\" translate>IO.INVERT</label>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label for=\"description\" class=\"form-label my-0\" translate=\"\">DESCRIPTION</label>\n        <textarea class=\"form-control\" id=\"description\" rows=\"3\" formControlName=\"description\"></textarea>\n      </div>\n\n    </div>\n  </div>\n  <div class=\"modal-footer modal-footer-background\">\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !inputService.service.loaded\" translate>SAVE</button>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators} from \"@angular/forms\";\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport * as _ from 'lodash';\nimport {MailTemplateConfigDto} from '../../dto/mailTemplateConfig.class';\nimport {MailTemplateNameValidator} from '../../validators/mailTemplateValidators';\nimport {MailTemplateService} from '../../services/dto-services/mail-template.service';\nimport {forEach} from 'lodash';\n\n@Component({\n  selector: 'app-edit-mail-template',\n  templateUrl: './edit-mail-template.component.html',\n  styleUrls: ['./edit-mail-template.component.css']\n})\nexport class EditMailTemplateComponent implements OnInit {\n  @Input()\n  mailTemplate: MailTemplateConfigDto = {} as MailTemplateConfigDto;\n  shadow: MailTemplateConfigDto = {} as MailTemplateConfigDto;\n\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n  mailRecipientsValid = true;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder, public mailTemplateService: MailTemplateService) {\n  }\n\n  ngOnInit(): void {\n    this.shadow = _.cloneDeep(this.mailTemplate);\n    this.form = this.fb.group({\n      name: ['', [Validators.required], [MailTemplateNameValidator.createValidator(this.mailTemplateService, this.shadow)]],\n      subject: ['', [Validators.required], []],\n      body: ['', [], []],\n      recipients: ['', [], []]\n    });\n    if (this.mailTemplate.id) {\n      this.form.patchValue(this.mailTemplate);\n    }\n    setTimeout(() => {\n      let recInputs = document.getElementsByName('recipients');\n      forEach(recInputs, (ri) => {\n        ['keyup','paste'].forEach( evt =>\n          ri.addEventListener(evt, (event) => {\n            this.prepareRecipentsInputs();\n            this.mailInputChange(event);\n          })\n        )\n      })\n    });\n  }\n\n  get recipients(): UntypedFormControl | undefined {\n    return this.form.controls['recipients'] as UntypedFormControl;\n  }\n\n  mailInputChange(event: any) {\n    if (!(event.target as HTMLInputElement).checkValidity()) {\n      event.target.style.outline = 'solid 1px red';\n    } else {\n      event.target.style.outline = '';\n    }\n  }\n\n  prepareRecipentsInputs() {\n    let recInputs = document.getElementsByName('recipients');\n    for (let i = recInputs.length - 2; i >= 0; --i) {\n      if ((recInputs[i] as HTMLInputElement).value.trim() === '') {\n        recInputs[i].remove();\n      }\n    }\n    recInputs = document.getElementsByName('recipients');\n    if (recInputs && (recInputs[recInputs.length - 1] as HTMLInputElement).value.trim() !== '') {\n      let parent = recInputs[recInputs.length - 1].parentNode;\n      if (parent) {\n        let newInput = document.createElement(\"input\") as HTMLInputElement;\n        newInput.name = 'recipients';\n        newInput.type = 'email';\n        newInput.classList.add('form-control', 'shadow-none', 'mt-1');\n        ['keyup','paste'].forEach( evt =>\n          newInput.addEventListener(evt, (event) => {\n            this.prepareRecipentsInputs();\n            this.mailInputChange(event);\n          })\n        )\n        parent.insertBefore(newInput, recInputs[recInputs.length - 1].nextSibling);\n      }\n    }\n    let emailsOk = true;\n    document.getElementsByName('recipients').forEach(rec => {\n      if ((rec as HTMLInputElement).value && !(rec as HTMLInputElement).checkValidity()) {\n        emailsOk = false;\n      }\n    });\n    this.mailRecipientsValid = emailsOk;\n  }\n\n  checkForReturn(event: any) {\n    if (event.target.tagName.toUpperCase() !== 'TEXTAREA' && event.keyCode == 13 && this.form.valid) {\n      this.submitForm(event);\n    }\n  }\n\n  submitForm(event: any) {\n    if (this.form.valid) {\n      let emailsOk = true;\n      document.getElementsByName('recipients').forEach(rec => {\n        if ((rec as HTMLInputElement).value && !(rec as HTMLInputElement).checkValidity()) {\n          emailsOk = false;\n        }\n      });\n      if (!emailsOk) {\n        event.preventDefault();\n        return;\n      }\n      this.form.value.recipients = [];\n      document.getElementsByName('recipients').forEach(rec => {\n        if ((rec as HTMLInputElement).value) {\n          this.form.value.recipients.push((rec as HTMLInputElement).value);\n        }\n      });\n      this.activeModal.close(this.form.value);\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" translate>MAILTEMPLATES.NEW</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm($event)\" (keydown)=\"checkForReturn($event)\">\n  <div class=\"modal-body modal-body-background\">\n    <div class=\"container\">\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"name\" translate>NAME</label>\n        <input id=\"name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\" appAutofocus>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"subject\" translate>MAILTEMPLATES.SUBJECT</label>\n        <input id=\"subject\" class=\"form-control shadow-none\" formControlName=\"subject\" type=\"text\">\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label for=\"body\" class=\"form-label my-0\" translate>MAILTEMPLATES.BODY</label>\n        <textarea class=\"form-control\" id=\"body\" rows=\"3\" formControlName=\"body\"></textarea>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" translate>MAILTEMPLATES.RECIPIENTS</label>\n        <input *ngFor=\"let rec of recipients?.value; let i = index\" class=\"form-control shadow-none mt-1\"\n               [value]=\"rec\" name=\"recipients\" type=\"email\">\n        <input class=\"form-control shadow-none mt-1\" name=\"recipients\" type=\"email\">\n      </div>\n\n    </div>\n  </div>\n  <div class=\"modal-footer modal-footer-background\">\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !mailRecipientsValid || !mailTemplateService.loaded\" translate>SAVE</button>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport * as _ from \"lodash\";\nimport {OutputConfigDto} from \"../../dto/outputConfig.class\";\nimport {OutputService} from \"../../services/dto-services/output.service\";\nimport {OutputNameValidator, OutputNumberValidator} from \"../../validators/outputValidators\";\n\n@Component({\n  selector: 'app-edit-output',\n  templateUrl: './edit-output.component.html',\n  styleUrls: ['./edit-output.component.css']\n})\nexport class EditOutputComponent implements OnInit {\n  @Input()\n  output: OutputConfigDto = {} as OutputConfigDto;\n  shadow: OutputConfigDto = {} as OutputConfigDto;\n\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder, public outputService: OutputService) {\n  }\n\n  ngOnInit(): void {\n    this.shadow = _.cloneDeep(this.output);\n    this.form = this.fb.group({\n      disabled: [0],\n      name: ['', [Validators.required], [OutputNameValidator.createValidator(this.outputService, this.shadow)]],\n      number: ['', [Validators.required], [OutputNumberValidator.createValidator(this.outputService, this.shadow)]],\n      description: [''],\n      inverted: [0],\n      groups: [''],\n      type: ['Output']\n    });\n    if (this.output.number) {\n      this.form.patchValue(this.output);\n    }\n  }\n\n  checkForReturn(event: any) {\n    if (event.target.tagName.toUpperCase() !== 'TEXTAREA' && event.keyCode == 13 && this.form.valid) {\n      this.submitForm();\n    }\n  }\n\n  submitForm() {\n    if (this.form.valid) {\n      this.activeModal.close(this.form.value);\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" translate>OUTPUTS.NEW</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\" (keydown)=\"checkForReturn($event)\">\n  <div class=\"modal-body modal-body-background\">\n    <div class=\"container\">\n\n      <div class=\"form-check ps-4 col-12\">\n        <input class=\"form-check-input\" id=\"disabled\" type=\"checkbox\" value=\"\" formControlName=\"disabled\">\n        <label class=\"form-check-label\" for=\"disabled\" translate>IO.DISABLED</label>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"name\" translate>NAME</label>\n        <input id=\"name\" class=\"form-control shadow-none\" formControlName=\"name\" type=\"text\" appAutofocus>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label class=\"form-label my-0\" for=\"number\" translate>IO.NUMBER-TERMINAL</label>\n        <select id=\"number\" class=\"form-select\" [ngModel]=\"form.value.number\" formControlName=\"number\">\n          <option class=\"bg-info\" *ngIf=\"shadow.number\" [ngValue]=\"shadow.number\">{{shadow.number}}</option>\n          <option *ngFor=\"let number of outputService.availableOutputNumbers\" [ngValue]=\"number\">{{number}}</option>\n        </select>\n      </div>\n\n      <div class=\"form-check col\">\n        <input class=\"form-check-input\" id=\"inverted\" type=\"checkbox\" value=\"\" formControlName=\"inverted\">\n        <label class=\"form-check-label\" for=\"inverted\" translate>IO.INVERT</label>\n      </div>\n\n      <div class=\"form-group my-1\">\n        <label for=\"description\" class=\"form-label my-0\" translate>DESCRIPTION</label>\n        <textarea class=\"form-control\" id=\"description\" rows=\"3\" formControlName=\"description\"></textarea>\n      </div>\n\n    </div>\n  </div>\n  <div class=\"modal-footer modal-footer-background\">\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !outputService.service.loaded\" translate>SAVE</button>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UntypedFormBuilder, UntypedFormControl, UntypedFormGroup} from \"@angular/forms\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\n\n@Component({\n  selector: 'app-fda-replacement',\n  templateUrl: './fda-replacement.component.html',\n  styleUrls: ['./fda-replacement.component.css']\n})\nexport class FdaReplacementComponent implements OnInit {\n  @Input()\n  unconfiguredFdaPhyAddrasses: number[] = [];\n\n  form: UntypedFormGroup = {} as UntypedFormGroup;\n\n  constructor(public activeModal: NgbActiveModal, public damperGroupService: DamperGroupService,\n              public fdaService: FdaService, private fb: UntypedFormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      physicalAddress: ['']\n    });\n    this.form.patchValue(this.unconfiguredFdaPhyAddrasses);\n  }\n\n  get physicalAddress(): UntypedFormControl {\n    return this.form.controls['physicalAddress'] as UntypedFormControl;\n  }\n\n  submitForm() {\n    this.activeModal.close(this.form.value);\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title\" translate>FDACONFIG.FDAS.REPLACE</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n  <div class=\"modal-body modal-body-background\">\n    <div class=\"container\">\n\n      <div class=\"form-group\">\n        <label class=\"form-label my-0\" for=\"physicalAddress\">Choose physical address</label>\n        <select class=\"form-select\" id=\"physicalAddress\" formControlName=\"physicalAddress\">\n          <option *ngFor=\"let physAddress of unconfiguredFdaPhyAddrasses\" [ngValue]=\"physAddress\">{{physAddress}}</option>\n        </select>\n      </div>\n\n    </div>\n  </div>\n  <div class=\"modal-footer modal-footer-background\">\n    <button class=\"btn btn-success\" [disabled]=\"!this.form.valid || !fdaService.loaded\" translate>SAVE</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FdaService} from \"../../services/dto-services/fda.service\";\nimport {EditFdaComponent} from \"../edit-fda/edit-fda.component\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'app-fdas',\n  templateUrl: './fdas.component.html',\n  styleUrls: ['./fdas.component.css']\n})\nexport class FdasComponent implements OnInit {\n  id = UUID.UUID();\n\n  constructor(public fdaService: FdaService, public groupService: DamperGroupService, public socketService: SocketConnectionService,\n              private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const modalRef = this.modalService.open(EditFdaComponent, { size: 'lg' });\n    modalRef.result.then((result) => {\n      this.fdaService.add(result);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  edit(id: string) {\n    let fdas = this.fdaService.data.filter((fda) => fda.id === id);\n    if (fdas && fdas.length == 1) {\n      let fda = fdas[0];\n      const clone = _.cloneDeep(fda);\n      const modalRef = this.modalService.open(EditFdaComponent, { size: 'lg' });\n      modalRef.componentInstance.fda = clone;\n      modalRef.result.then((result) => {\n        let fdas = this.fdaService.data.filter((fda) => fda.id === id);\n        if (fdas && fdas.length == 1) {\n          let fda = fdas[0];\n          console.log(result);\n          Object.assign(fda, result);\n          this.fdaService.update();\n        }\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n\n  remove(id: string): void {\n    this.fdaService.remove(id);\n  }\n\n  relayValue(value: number): string {\n    switch(value) {\n      case 0: return 'FDACONFIG.FDAS.VBUSSTATES.OFF';\n      case 1: return 'FDACONFIG.FDAS.VBUSSTATES.ON';\n      default: return 'FDACONFIG.FDAS.VBUSSTATES.NOCHANGE';\n    }\n  }\n  damperValue(value: number): string {\n    switch(value) {\n      case 0: return 'FDACONFIG.FDAS.DAMPERS.STATES.CLOSED';\n      case 1: return 'FDACONFIG.FDAS.DAMPERS.STATES.OPEN';\n      default: return 'FDACONFIG.FDAS.DAMPERS.STATES.NOCHANGE';\n    }\n  }\n}\n","<ngb-accordion activeIds=\"\">\n  <ngb-panel id=\"groups\" title=\"{{'FDACONFIG.GROUPS.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !groupService.loaded\">\n    <ng-template ngbPanelContent>\n      <app-damper-groups></app-damper-groups>\n    </ng-template>\n  </ngb-panel>\n  <ngb-panel id=\"fdas\" title=\"{{'FDACONFIG.FDAS.TITLE' | translate}}\" [disabled]=\"!socketService.connectedToBackend || !fdaService.loaded\">\n    <ng-template ngbPanelContent>\n      <div class=\"col-md-3  my-3\">\n        <button class=\"btn btn-primary w-100 shadow-none\" [disabled]=\"!fdaService.loaded\" (click)=\"create()\" translate>FDACONFIG.FDAS.NEW</button>\n      </div>\n\n      <div class=\"row accordion-level-1\" [id]=\"id\">\n        <div class=\"col-lg-6 my-2\" *ngFor=\"let fda of fdaService.data\">\n          <ngb-accordion activeIds=\"0\">\n            <ngb-panel title=\"{{fda.physicalAddress}}{{fda.position ? (' / ' + fda.position) : ''}}\">\n              <ng-template ngbPanelContent>\n                <table class=\"table table-borderless\">\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>PHYSICALADDRESS</td>\n                    <td class=\"text-end\">{{fda.physicalAddress}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold pb-2\" translate>FDACONFIG.POSITION</td>\n                    <td class=\"text-end pb-2\">{{fda.position}}</td>\n                  </tr>\n                  <tr class=\"border-top mt-2 color-gray\">\n                    <td class=\"fw-bold\" colspan=\"2\" translate>FDACONFIG.FDAS.DAMPERS.FIRST</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>NAME</td>\n                    <td class=\"text-end\">{{fda.damper1.name}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.MODE</td>\n                    <td class=\"text-end\" translate>FDACONFIG.FDAS.DAMPERS.MODES.{{fda.damper1.damperMode | uppercase}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.TYPE</td>\n                    <td class=\"text-end\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.{{fda.damper1.damperType | uppercase}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BOOT</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper1.relayStateBoot)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.NORMAL</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper1.relayStateNormal)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.ALARM</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper1.relayStateAlarm)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.POWERLOSS</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper1.relayStatePowerLoss)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BUSERROR</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper1.relayStateBusError)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.POSITION</td>\n                    <td class=\"text-end\">{{fda.damper1.position}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold pb-2 align-text-top\" translate>FDACONFIG.FDAS.DAMPERS.GROUPS</td>\n                    <td class=\"text-end pb-2\">\n                      <div *ngIf=\"groupService.groupsByIds(fda.damper1.groups).length === 0\" class=\"p-0\" translate>{{'FDACONFIG.FDAS.DAMPERS.NOGROUP'}}</div>\n                      <div *ngFor=\"let group of groupService.groupsByIds(fda.damper1.groups)\" class=\"p-0\">{{group.name}}</div>\n                    </td>\n                  </tr>\n\n                  <tr class=\"border-top color-gray\">\n                    <td class=\"fw-bold\" colspan=\"2\" translate>FDACONFIG.FDAS.DAMPERS.SECOND</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>NAME</td>\n                    <td class=\"text-end\">{{fda.damper2.name}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.MODE</td>\n                    <td class=\"text-end\" translate>FDACONFIG.FDAS.DAMPERS.MODES.{{fda.damper2.damperMode | uppercase}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.FDAS.DAMPERS.TYPE</td>\n                    <td class=\"text-end\" translate>FDACONFIG.FDAS.DAMPERS.TYPES.{{fda.damper2.damperType | uppercase}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BOOT</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper2.relayStateBoot)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.NORMAL</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper2.relayStateNormal)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.ALARM</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper2.relayStateAlarm)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.POWERLOSS</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper2.relayStatePowerLoss)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold text-nowrap\" translate>FDACONFIG.FDAS.DAMPERS.STATE.BUSERROR</td>\n                    <td class=\"text-end\" translate>{{damperValue(fda.damper2.relayStateBusError)}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold\" translate>FDACONFIG.POSITION</td>\n                    <td class=\"text-end\">{{fda.damper2.position}}</td>\n                  </tr>\n                  <tr>\n                    <td class=\"fw-bold align-text-top\" translate>FDACONFIG.FDAS.DAMPERS.GROUPS</td>\n                    <td class=\"text-end\">\n                      <div *ngIf=\"groupService.groupsByIds(fda.damper2.groups).length === 0\" class=\"p-0\" translate>{{'FDACONFIG.FDAS.DAMPERS.NOGROUP'}}</div>\n                      <div *ngFor=\"let group of groupService.groupsByIds(fda.damper2.groups)\" class=\"p-0\">{{group.name}}</div>\n                    </td>\n                  </tr>\n                </table>\n                <div class=\"mt-2\">\n                  <button class=\"btn btn-outline-danger me-3\" [disabled]=\"!fdaService.loaded\" (click)=\"remove(fda.id)\" translate>DELETE</button>\n                  <button class=\"btn btn-outline-primary\" [disabled]=\"!fdaService.loaded\" (click)=\"edit(fda.id)\" translate>EDIT</button>\n                </div>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/authentication/auth.service\";\nimport {UserService} from \"../../services/authentication/user.service\";\n\n@Component({\n  selector: 'app-forced-password-change',\n  templateUrl: './forced-password-change.component.html',\n  styleUrls: ['./forced-password-change.component.css']\n})\nexport class ForcedPasswordChangeComponent implements OnInit {\n  password: string | undefined;\n\n  constructor(private userService: UserService, private auth: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  validatePassword() {\n    return this.password !== undefined;\n  }\n\n  changePassword() {\n    if (this.password !== undefined) {\n      this.userService.changePassword(this.auth.getUser().username, this.password);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-5 mx-auto\">\n    <div class=\"card modal-body-background\">\n      <div class=\"card-header modal-header-background\" translate>USER.FORCEDPASSWORDCHANGE</div>\n      <div class=\"card-body modal-body-background\">\n        <app-password-repeat [(password)]=\"password\"></app-password-repeat>\n      </div>\n      <div class=\"my-3 text-center modal-footer-background\">\n        <button class=\"btn btn-primary px-5\" type=\"button\" (click)=\"changePassword()\" [disabled]=\"!validatePassword()\" translate>SAVE</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\nimport {InputService} from \"../../services/dto-services/input.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {EditInputComponent} from \"../edit-input/edit-input.component\";\nimport {ValidityCheckService} from \"../../services/dto-services/validity-check.service\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\n\n@Component({\n  selector: 'app-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.css']\n})\nexport class InputsComponent implements OnInit {\n  id = UUID.UUID();\n\n  constructor(public inputService: InputService, public damperGroupService: DamperGroupService,\n              private modalService: NgbModal, public validityCheckService: ValidityCheckService) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const modalRef = this.modalService.open(EditInputComponent);\n    modalRef.result.then((result) => {\n      this.inputService.add(result);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  edit(id: string) {\n    let inputs = this.inputService.service.data.inputs.filter((input) => input.id === id);\n    if (inputs && inputs.length == 1) {\n      let input = inputs[0];\n      const modalRef = this.modalService.open(EditInputComponent);\n      modalRef.componentInstance.input = input;\n      modalRef.result.then((result) => {\n        Object.assign(input, result);\n        // TODO: If number has changed, also other configurations MUST be changed - fdc e.g.\n        this.inputService.service.update();\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n\n  remove(id: string) {\n    this.inputService.remove(id);\n  }\n}\n","<div *ngIf=\"inputService.availableInputNumbers.length > 0\" class=\"col-md-3  my-3\">\n  <button class=\"btn btn-primary w-100 shadow-none\" [disabled]=\"!inputService.service.loaded\" (click)=\"create()\" translate>INPUTS.NEW</button>\n</div>\n\n<div class=\"row accordion-level-1\" [id]=\"id\">\n  <div class=\"col-md-4 my-2\" *ngFor=\"let input of inputService.service.data.inputs\">\n    <ngb-accordion activeIds=\"0\">\n      <ngb-panel title=\"{{input.name}}\">\n        <ng-template ngbPanelContent>\n          <table class=\"table table-borderless\">\n            <tr>\n              <td class=\"fw-bold\" translate>IO.DISABLED</td>\n              <td class=\"text-end\">{{(input.disabled ? 'YES' : 'NO') | translate}}</td>\n            </tr>\n            <tr>\n              <td class=\"fw-bold\" translate>IO.NUMBER</td>\n              <td class=\"text-end\">{{input.number}}</td>\n            </tr>\n            <tr>\n              <td class=\"fw-bold\" translate>IO.INVERTED</td>\n              <td class=\"text-end\">{{(input.inverted ? 'YES' : 'NO') | translate}}</td>\n            </tr>\n            <tr *ngIf=\"input.description\">\n              <td class=\"align-top fw-bold\" colspan=\"2\" translate>DESCRIPTION</td>\n            </tr>\n            <tr *ngIf=\"input.description\">\n              <td class=\"text-end text-justify\" colspan=\"2\"><pre>{{input.description}}</pre></td>\n            </tr>\n          </table>\n          <button *ngIf=\"!validityCheckService.damperGroupUsesId(input.id)\"\n                  class=\"btn btn-outline-danger me-3\" (click)=\"remove(input.id)\"\n                  [disabled]=\"!damperGroupService.loaded || !inputService.service.loaded\" translate>DELETE</button>\n          <button class=\"btn btn-outline-primary\" [disabled]=\"!inputService.service.loaded\" (click)=\"edit(input.id)\" translate>EDIT</button>\n        </ng-template>\n      </ngb-panel>\n    </ngb-accordion>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../../services/authentication/auth.service\";\nimport {TokenStorageService} from \"../../services/authentication/token-storage.service\";\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: UntypedFormGroup;\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  role = '';\n  returnUrl = '';\n\n  constructor(public socketService: SocketConnectionService, private route: ActivatedRoute,\n              private fb: UntypedFormBuilder, private authService: AuthService,\n              private tokenStorage: TokenStorageService, private router: Router) {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.role = this.tokenStorage.getUser().role;\n    }\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  login(): void {\n    const val = this.loginForm.value;\n    this.authService.login(val.username, val.password).subscribe({\n      next: () => {\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.role = this.tokenStorage.getUser().role;\n        this.errorMessage = '';\n        if (this.authService.getUser().forcePasswordChange) {\n          this.router.navigateByUrl('forced-password-change');\n        } else {\n          this.router.navigateByUrl(this.returnUrl);\n        }\n      },\n      error: (err: any) => {\n        console.log(err);\n        this.errorMessage = 'LOGINFAILED';\n        this.isLoginFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"row accordion-level-1\">\n  <div class=\"col-md-5 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-header modal-header-background\" translate> USER.LOGIN</div>\n      <form class=\"card-body modal-body-background\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div class=\"form-group col my-1\">\n          <label class=\"form-label my-0\" for=\"username\">Username</label>\n          <input id=\"username\" formControlName=\"username\" class=\"form-control\" type=\"text\" placeholder=\"Username\" appAutofocus>\n        </div>\n        <div class=\"form-group col my-1\">\n          <label class=\"form-label my-0\" for=\"password\" translate>USER.PASSWORD</label>\n          <input id=\"password\" formControlName=\"password\" class=\"form-control\" type=\"password\" placeholder=\"{{'USER.PASSWORD'|translate}}\">\n        </div>\n        <div *ngIf=\"isLoginFailed\" class=\"text-center my-2 text-danger\">{{errorMessage|translate}}</div>\n        <div class=\"my-3 text-center modal-footer-background\">\n          <button class=\"btn btn-primary px-5\" type=\"submit\" [disabled]=\"!socketService.connectedToBackend\" translate>USER.LOGIN</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MailTemplateService} from \"../../services/dto-services/mail-template.service\";\nimport {EditMailTemplateComponent} from \"../edit-mail-template/edit-mail-template.component\";\nimport {ValidityCheckService} from \"../../services/dto-services/validity-check.service\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\nimport {AuthService} from \"../../services/authentication/auth.service\";\n\n@Component({\n  selector: 'app-mail-templates',\n  templateUrl: './mail-templates.component.html',\n  styleUrls: ['./mail-templates.component.css']\n})\nexport class MailTemplatesComponent implements OnInit {\n  id = UUID.UUID();\n\n  constructor(public mailTemplateService: MailTemplateService, public validityCheckService: ValidityCheckService,\n              public damperGroupService: DamperGroupService, public auth: AuthService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const modalRef = this.modalService.open(EditMailTemplateComponent);\n    modalRef.result.then((result) => {\n      this.mailTemplateService.add(result);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  edit(id: string) {\n    let mailTemplates = this.mailTemplateService.data.filter((templ) => templ.id === id);\n    if (mailTemplates && mailTemplates.length == 1) {\n      let templ = mailTemplates[0];\n      const modalRef = this.modalService.open(EditMailTemplateComponent);\n      modalRef.componentInstance.mailTemplate = templ;\n      modalRef.result.then((result) => {\n        Object.assign(templ, result);\n        this.mailTemplateService.update();\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n\n  remove(id: string) {\n    this.mailTemplateService.remove(id);\n  }\n}\n\n","<div *ngIf=\"auth.isAdmin()\" class=\"col-md-3  my-3\">\n  <button class=\"btn btn-primary w-100 shadow-none\" [disabled]=\"!mailTemplateService.loaded\" (click)=\"create()\" translate>MAILTEMPLATES.NEW</button>\n</div>\n\n<div class=\"row accordion-level-1\" [id]=\"id\">\n  <div class=\"col-lg-6 my-2\" *ngFor=\"let data of mailTemplateService.data\">\n    <ngb-accordion activeIds=\"0\">\n      <ngb-panel title=\"{{data.name}}\">\n        <ng-template ngbPanelContent>\n              <div class=\"fw-bold\" translate>MAILTEMPLATES.SUBJECT</div>\n              <div class=\"\">{{data.subject}}</div>\n              <div class=\"fw-bold mt-1\" translate>MAILTEMPLATES.BODY</div>\n              <div class=\"text-justify\"><pre>{{data.body}}</pre></div>\n              <div class=\"fw-bold\" translate>MAILTEMPLATES.RECIPIENTS</div>\n              <div class=\"recipients\"><div *ngFor=\"let rec of data.recipients\">{{rec}}</div></div>\n          <button *ngIf=\"auth.isAdmin() && !validityCheckService.damperGroupUsesId(data.id)\" class=\"btn btn-outline-danger me-3\"\n                  (click)=\"remove(data.id)\" [disabled]=\"!damperGroupService.loaded || !mailTemplateService.loaded\" translate>DELETE</button>\n          <button class=\"btn btn-outline-primary\" [disabled]=\"!mailTemplateService.loaded\" (click)=\"edit(data.id)\" translate>EDIT</button>\n        </ng-template>\n      </ngb-panel>\n    </ngb-accordion>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {FdcService} from \"../../services/fdc.service\";\r\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\r\nimport {ToastService} from \"../../services/toast-service.service\";\r\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\r\nimport {MaintenanceModeService} from \"../../services/dto-services/maintenance-mode.service\";\r\n\r\n@Component({\r\n  selector: 'app-maintenance-mode',\r\n  templateUrl: './maintenance-mode.component.html',\r\n  styleUrls: ['./maintenance-mode.component.css']\r\n})\r\nexport class MaintenanceModeComponent implements OnInit {\r\n  maintenanceRestTime = 0;\r\n  maintenanceTill: Date | undefined;\r\n\r\n  form: UntypedFormGroup = {} as UntypedFormGroup;\r\n\r\n  constructor(public fdcService: FdcService, public socketService: SocketConnectionService, public modeService: MaintenanceModeService,\r\n              private fb: UntypedFormBuilder, private toast: ToastService) {\r\n    this.updateValues();\r\n    this.form = this.fb.group({\r\n      maintenanceTimeSpan: ['1800']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateValues() {\r\n    this.setMaintenanceValues();\r\n    setTimeout(() => this.updateValues(), 1000);\r\n  }\r\n\r\n  setMaintenanceValues() {\r\n    if (this.isMaintenanceActive()) {\r\n      let now = Math.trunc(new Date().getTime() / 1000 + this.fdcService.fdcTimeDiff / 1000);\r\n      this.maintenanceRestTime = this.modeService.data.maintenanceEnd - now;\r\n      let millis = (this.modeService.data.maintenanceEnd * 1000) - this.fdcService.fdcTimeDiff;\r\n      this.maintenanceTill = new Date(millis);\r\n    }\r\n  }\r\n\r\n  setMaintenanceTime(): void {\r\n    this.modeService.data.maintenanceEnd = Math.trunc((new Date().getTime() / 1000) + this.maintenanceTimeSpan + (this.fdcService.fdcTimeDiff / 1000));\r\n    this.saveMaintenanceModeAndNotifyApplication();\r\n  }\r\n\r\n  endMaintenanceMode(): void {\r\n    this.modeService.data.maintenanceEnd = 0;\r\n    this.saveMaintenanceModeAndNotifyApplication();\r\n  }\r\n\r\n  isMaintenanceActive(): boolean {\r\n    return this.modeService.isMaintenanceActive();\r\n  }\r\n\r\n  saveMaintenanceModeAndNotifyApplication() {\r\n    let obs = this.modeService.setMaintenance(this.modeService.data.maintenanceEnd);\r\n    if (obs) {\r\n      obs.subscribe({\r\n        next: () => {\r\n          this.updateValues();\r\n          this.socketService.emitMaintenanceMode(this.modeService.data.maintenanceEnd);\r\n          if (this.isMaintenanceActive()) {\r\n            this.toast.show(\"Maintenance started\", {classname: 'bg-success text-white toast-font-size'});\r\n          } else {\r\n            this.toast.show(\"Maintenance ended\", {classname: 'bg-success text-white toast-font-size'});\r\n          }\r\n        },\r\n        error: () => this.toast.show(\"ERROR! Could not set maintenance mode\", {classname: 'bg-danger text-white toast-font-size'})\r\n      });\r\n    }\r\n  }\r\n\r\n  get maintenanceTimeSpan(): number {\r\n    return parseInt(this.form.controls['maintenanceTimeSpan'].value);\r\n  }\r\n\r\n  restTimeFormatted(): string {\r\n    return `${\r\n      (Math.trunc(this.maintenanceRestTime / 3600)).toString().padStart(2, '0')}:${\r\n      (Math.trunc((this.maintenanceRestTime % 3600) / 60)).toString().padStart(2, '0')}:${\r\n      ((this.maintenanceRestTime % 3600) % 60).toString().padStart(2, '0')\r\n    }`;\r\n  }\r\n\r\n  repairDevices(): void {\r\n    this.socketService.repairDevices();\r\n  }\r\n}\r\n","<ngb-accordion activeIds=\"\">\r\n  <ngb-panel id=\"maintenance-mode\" [disabled]=\"!socketService.connectedToBackend\">\r\n    <ng-template ngbPanelHeader>\r\n      <button ngbPanelToggle class=\"accordion-button\" [ngClass]=\"\r\n          {\r\n            'maintenance-mode-off': !isMaintenanceActive(),\r\n            'maintenance-mode-on': isMaintenanceActive()\r\n          }\">\r\n        <div class=\"d-flex flex-wrap\">\r\n          <div class=\"me-3\" translate>MAINTENANCEMODE.TITLE</div>\r\n          <div *ngIf=\"isMaintenanceActive()\" class=\"me-3 fw-bold\">{{restTimeFormatted()}}</div>\r\n          <div *ngIf=\"isMaintenanceActive()\" class=\"\">{{'MAINTENANCEMODE.TILL'|translate}}: {{maintenanceTill | date: 'medium'}}</div>\r\n        </div>\r\n      </button>\r\n    </ng-template>\r\n    <ng-template ngbPanelContent>\r\n      <form class=\"mb-2\" [formGroup]=\"form\" (ngSubmit)=\"setMaintenanceTime()\">\r\n        <div class=\"d-flex flex-nowrap\">\r\n          <button class=\"btn btn-outline-primary me-2 col-6\" type=\"submit\" [disabled]=\"!socketService.connectedToBackend\">{{(isMaintenanceActive() ? 'MAINTENANCEMODE.UPDATE' : 'MAINTENANCEMODE.START')|translate}}</button>\r\n          <select class=\"form-select col-6 flex-shrink-1\" formControlName=\"maintenanceTimeSpan\">\r\n            <option value=\"1800\" translate>MAINTENANCEMODE.TIME.THIRTYMINUTES</option>\r\n            <option value=\"3600\" translate>MAINTENANCEMODE.TIME.ONEHOUR</option>\r\n            <option value=\"10800\" translate>MAINTENANCEMODE.TIME.THREEHOURS</option>\r\n            <option value=\"18000\" translate>MAINTENANCEMODE.TIME.FIVEHOURS</option>\r\n            <option value=\"28800\" translate>MAINTENANCEMODE.TIME.EIGHTHOURS</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n      <button *ngIf=\"isMaintenanceActive()\" [disabled]=\"!socketService.connectedToBackend\" class=\"btn btn-outline-primary col-12\" type=\"button\" (click)=\"endMaintenanceMode()\" translate>MAINTENANCEMODE.END</button>\r\n      <button *ngIf=\"isMaintenanceActive()\" [disabled]=\"!socketService.connectedToBackend\" class=\"btn btn-outline-warning col-12 mt-3 text-black\" type=\"button\" (click)=\"repairDevices()\" translate>MAINTENANCEMODE.REPAIR</button>\r\n    </ng-template>\r\n  </ngb-panel>\r\n</ngb-accordion>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../services/authentication/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {TranslateService} from \"@ngx-translate/core\";\r\nimport {CookieService} from \"../../services/cookie.service\";\r\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\r\nimport {SyncService} from \"../../services/sync.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\r\nimport {SystemHealthService} from \"../../services/system-health.service\";\r\n\r\n@Component({\r\n  selector: 'app-menu-bar',\r\n  templateUrl: './menu-bar.component.html',\r\n  styleUrls: ['./menu-bar.component.css']\r\n})\r\nexport class MenuBarComponent implements OnInit {\r\n  isNavbarCollapsed = true;\r\n  isNavbarDropdownCollapsed = true;\r\n  settingsForm: UntypedFormGroup = {} as UntypedFormGroup;\r\n  configurationNeedsReload = false;\r\n  topicsForReload : string[] = [];\r\n  configReloadNeededObserver : Subscription | undefined = undefined;\r\n\r\n  constructor(public auth: AuthService, public translate: TranslateService, public fb: UntypedFormBuilder,\r\n              public sysHealthService: SystemHealthService,\r\n              private cookieService: CookieService, private router: Router, private syncService: SyncService,\r\n              private socketIo: SocketConnectionService) {\r\n    this.settingsForm = fb.group({\r\n      language: [translate.currentLang],\r\n      theme: [this.cookieService.getValue('theme', 'dark')]\r\n    });\r\n    this.changeTheme(this.cookieService.getValue('theme', 'dark'));\r\n    if (!this.configReloadNeededObserver) {\r\n      this.configReloadNeededObserver = syncService.configNeedsReloadEvent.subscribe({\r\n        next: (subTopics: string[]) => {\r\n          this.configurationNeedsReload = true;\r\n          subTopics.forEach(st => {\r\n            if (!this.topicsForReload.includes(st)) {\r\n              this.topicsForReload.push(st);\r\n            }\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.closeNavbar();\r\n    this.auth.signOut();\r\n  }\r\n\r\n  closeNavbar() {\r\n    if (!this.isNavbarCollapsed) {\r\n      this.isNavbarCollapsed = true;\r\n    }\r\n  }\r\n\r\n  changeLang(lang: string) {\r\n    this.closeNavbar();\r\n    this.translate.use(lang);\r\n    this.cookieService.saveValue('language', lang);\r\n  }\r\n\r\n  changeTheme(theme: string) {\r\n    this.closeNavbar();\r\n    switch (theme) {\r\n      case 'dark':\r\n        if (document.body.parentElement) {\r\n          document.body.parentElement.classList.remove('light');\r\n          document.body.parentElement.classList.add('dark');\r\n          this.cookieService.saveValue('theme', 'dark');\r\n        }\r\n        break;\r\n      case 'light':\r\n        if (document.body.parentElement) {\r\n          document.body.parentElement.classList.add('light');\r\n          document.body.parentElement.classList.remove('dark');\r\n          this.cookieService.saveValue('theme', 'light');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  requestConfigReload() {\r\n    this.closeNavbar();\r\n    this.socketIo.requestConfigReload(this.topicsForReload);\r\n    this.configurationNeedsReload = false;\r\n    this.topicsForReload = [];\r\n  }\r\n}\r\n","<header>\r\n  <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark fixed-top navbar-background\">\r\n    <div class=\"container\">\r\n      <!--a class=\"navbar-brand d-lg-none\" routerLink=\"/\"><=MD Unicorn</a>\r\n      <a class=\"navbar-brand d-none d-lg-block\" routerLink=\"/\">>=LG Unicorn</a-->\r\n      <ul class=\"navbar-nav flex-row flex-nowrap\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link d-flex flex-nowrap dashboard-button dashboard-button-left\"\r\n             routerLink=\"/dashboard\"\r\n             routerLinkActive=\"active\"\r\n             [ngClass]=\"{\r\n                'dashboard-icon-ok': sysHealthService.systemHealthStatus() === 0,\r\n                'dashboard-icon-warning': sysHealthService.systemHealthStatus() === 1,\r\n                'dashboard-icon-timeglass': sysHealthService.systemHealthStatus() === 2\r\n             }\"\r\n             (click)=\"closeNavbar()\">\r\n\r\n            <app-status-symbols\r\n              [showOk]=\"sysHealthService.systemHealthStatus() === 0\"\r\n              [showWarning]=\"sysHealthService.systemHealthStatus() === 1\"\r\n              [showTimeglass]=\"sysHealthService.systemHealthStatus() === 2\"></app-status-symbols>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link d-flex flex-nowrap dashboard-button dashboard-button-right me-2\"\r\n             routerLink=\"/dashboard\"\r\n             routerLinkActive=\"active\"\r\n             (click)=\"closeNavbar()\">\r\n            <div class=\"ms-2\" translate>MENU.DASHBOARD</div>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <button *ngIf=\"configurationNeedsReload\" class=\"btn btn-primary reload-config-button me-2\" type=\"button\" (click)=\"requestConfigReload()\">{{'MENU.RELOADCONFIG'|translate}}</button>\r\n      <button class=\"navbar-toggler hidden-md-up\" type=\"button\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\" data-target=\"#navbarsDefault\" aria-controls=\"navbarsDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div [ngbCollapse]=\"isNavbarCollapsed\" class=\"collapse navbar-collapse\" id=\"navbarsDefault\">\r\n        <ul class=\"navbar-nav me-auto mt-2 mt-lg-0 align-items-start\">\r\n          <li *ngIf=\"auth.isAdmin()\" class=\"nav-item nav-item-collapsed\">\r\n            <a class=\"nav-link d-flex flex-nowrap dashboard-button me-2\"\r\n               routerLink=\"/fda-config\"\r\n               routerLinkActive=\"active\"\r\n               (click)=\"closeNavbar()\">\r\n              <div class=\"ms-2\" translate>MENU.GROUPS</div>\r\n            </a>\r\n          </li>\r\n          <li  *ngIf=\"auth.isService()\" class=\"nav-item nav-item-collapsed mt-2 mt-lg-0\">\r\n            <a class=\"nav-link d-flex flex-nowrap dashboard-button me-2\"\r\n               routerLink=\"/configuration\"\r\n               routerLinkActive=\"active\"\r\n               (click)=\"closeNavbar()\">\r\n              <div class=\"ms-2\" translate>MENU.SYSTEM</div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav ms-md-auto align-items-start align-items-lg-center\">\r\n          <li  *ngIf=\"!auth.isLoggedIn()\" class=\"nav-item nav-item-collapsed\">\r\n            <a class=\"nav-link d-flex flex-nowrap dashboard-button-outlined me-2\"\r\n               routerLink=\"/login\"\r\n               routerLinkActive=\"active\"\r\n               (click)=\"closeNavbar()\">\r\n              <div class=\"ms-2\" translate>MENU.LOGIN</div>\r\n            </a>\r\n          </li>\r\n          <li  *ngIf=\"auth.isLoggedIn()\" class=\"nav-item nav-item-collapsed mt-2 mt-lg-0\">\r\n            <a class=\"nav-link d-flex flex-nowrap dashboard-button-outlined me-2\"\r\n               routerLink=\"/login\"\r\n               routerLinkActive=\"active\"\r\n               (click)=\"logout()\">\r\n              <div class=\"ms-2 text-nowrap\">{{'MENU.LOGOUT'|translate: { username: (auth.getUser().username|uppercase)} }}</div>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item nav-item-collapsed dropdown ms-lg-2 mt-2 mt-lg-0\">\r\n            <form [formGroup]=\"settingsForm\">\r\n              <div class=\"btn-group\" role=\"group\" aria-label=\"Radio Buttons with Bootstrap 5\">\r\n                <input type=\"radio\" formControlName=\"language\" [value]=\"'en'\" class=\"btn-check radio-button\" id=\"btnradio1\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary radio-button\" for=\"btnradio1\" (click)=\"changeLang('en')\" style=\"padding: 3px 8px;\">EN</label>\r\n\r\n                <input type=\"radio\" formControlName=\"language\" [value]=\"'de'\" class=\"btn-check radio-button\" id=\"btnradio2\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary radio-button\" for=\"btnradio2\" (click)=\"changeLang('de')\" style=\"padding: 3px 8px;\">DE</label>\r\n              </div>\r\n              <div class=\"ms-2 btn-group\" role=\"group\" aria-label=\"Radio Buttons with Bootstrap 5\">\r\n                <input type=\"radio\" formControlName=\"theme\" [value]=\"'dark'\" class=\"btn-check radio-button\" id=\"btnradio3\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary radio-button\" for=\"btnradio3\" (click)=\"changeTheme('dark')\" style=\"padding: 3px 8px;\">dark</label>\r\n\r\n                <input type=\"radio\" formControlName=\"theme\" [value]=\"'light'\" class=\"btn-check radio-button\" id=\"btnradio4\" autocomplete=\"off\">\r\n                <label class=\"btn btn-outline-primary radio-button\" for=\"btnradio4\" (click)=\"changeTheme('light')\" style=\"padding: 3px 8px;\">light</label>\r\n              </div>\r\n            </form>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-messagebox',\n  templateUrl: './messagebox.component.html',\n  styleUrls: ['./messagebox.component.css']\n})\nexport class MessageboxComponent implements OnInit {\n  @Input()\n  title: string = '';\n  @Input()\n  text: string = '';\n  @Input()\n  isWarning = false;\n  @Input()\n  isError = false;\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n}\n","<div>\n  <div class=\"modal-header\" [ngClass]=\n    \"{\n    'warning-header': isWarning,\n    'error-header': isError\n  }\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\" [innerHTML]=\"title\"></h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\"></button>\n  </div>\n  <div class=\"modal-body\" [ngClass]=\n    \"{\n    'warning-body': isWarning,\n    'error-body': isError\n  }\">\n    <p [innerHTML]=\"text\"></p>\n  </div>\n  <div class=\"modal-footer\" [ngClass]=\n    \"{\n    'warning-footer': isWarning,\n    'error-footer': isError\n  }\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"close()\">Close</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\nimport {OutputService} from \"../../services/dto-services/output.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {EditOutputComponent} from \"../edit-output/edit-output.component\";\nimport {ValidityCheckService} from \"../../services/dto-services/validity-check.service\";\nimport {DamperGroupService} from \"../../services/dto-services/damper-group.service\";\n\n@Component({\n  selector: 'app-outputs',\n  templateUrl: './outputs.component.html',\n  styleUrls: ['./outputs.component.css']\n})\nexport class OutputsComponent implements OnInit {\n  id = UUID.UUID();\n\n  constructor(public outputService: OutputService, public validityCheckService: ValidityCheckService,\n              public damperGroupService: DamperGroupService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const modalRef = this.modalService.open(EditOutputComponent);\n    modalRef.result.then((result) => {\n      this.outputService.add(result);\n    }).catch(() => {\n      // ignore cross-click\n    });\n  }\n\n  edit(id: string) {\n    let outputs = this.outputService.service.data.outputs.filter((output) => output.id === id);\n    if (outputs && outputs.length == 1) {\n      let output = outputs[0];\n      const modalRef = this.modalService.open(EditOutputComponent);\n      modalRef.componentInstance.output = output;\n      modalRef.result.then((result) => {\n        Object.assign(output, result);\n        // TODO: If number has changed, also other configurations MUST be changed - fdc e.g.\n        this.outputService.service.update();\n      }).catch(() => {\n        // ignore cross-click\n      });\n    }\n  }\n\n  remove(id: string) {\n    this.outputService.remove(id);\n  }\n}\n","<div class=\"col-md-3  my-3\">\n  <button class=\"btn btn-primary w-100 shadow-none\" (click)=\"create()\" translate>OUTPUTS.NEW</button>\n</div>\n\n<div class=\"row accordion-level-1\" [id]=\"id\">\n  <div class=\"col-md-4 my-2\" *ngFor=\"let output of outputService.service.data.outputs\">\n    <ngb-accordion activeIds=\"0\">\n      <ngb-panel title=\"{{output.name}}\">\n        <ng-template ngbPanelContent>\n          <table class=\"table table-borderless\">\n            <tr>\n              <td class=\"fw-bold\" translate>IO.DISABLED</td>\n              <td class=\"text-end\">{{(output.disabled ? 'YES' : 'NO')|translate}}</td>\n            </tr>\n            <tr>\n              <td class=\"fw-bold\" translate>IO.NUMBER</td>\n              <td class=\"text-end\">{{output.number}}</td>\n            </tr>\n            <tr>\n              <td class=\"fw-bold\" translate>IO.INVERT</td>\n              <td class=\"text-end\">{{(output.inverted ? 'YES' : 'NO')|translate}}</td>\n            </tr>\n            <tr *ngIf=\"output.description\">\n              <td class=\"align-top fw-bold\" colspan=\"2\" translate>DESCRIPTION</td>\n            </tr>\n            <tr *ngIf=\"output.description\">\n              <td class=\"text-end text-justify\" colspan=\"2\"><pre>{{output.description}}</pre></td>\n            </tr>\n          </table>\n          <button *ngIf=\"!validityCheckService.damperGroupUsesId(output.id)\" class=\"btn btn-outline-danger me-3\" (click)=\"remove(output.id)\"\n                  [disabled]=\"!damperGroupService.loaded || !outputService.service.loaded\" translate>DELETE</button>\n          <button class=\"btn btn-outline-primary\" [disabled]=\"!outputService.service.loaded\" (click)=\"edit(output.id)\" translate>EDIT</button>\n        </ng-template>\n      </ngb-panel>\n    </ngb-accordion>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormBuilder} from \"@angular/forms\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {UserService} from \"../../services/authentication/user.service\";\n\n@Component({\n  selector: 'app-password-change',\n  templateUrl: './password-change.component.html',\n  styleUrls: ['./password-change.component.css']\n})\nexport class PasswordChangeComponent implements OnInit {\n  @Input()\n  username = '';\n\n  password: string | undefined;\n\n  constructor(public activeModal: NgbActiveModal, private fb: UntypedFormBuilder,\n              private userService: UserService) {\n  }\n\n  ngOnInit(): void {}\n\n  submitForm() {\n    if (this.password) {\n      this.userService.changePassword(this.username, this.password).subscribe({\n        next: () => {\n          this.activeModal.close();\n        }\n      });\n    }\n  }\n}\n","<div class=\"modal-header modal-header-background\">\n  <h4 class=\"modal-title text-nowrap\">{{'USER.CHANGEPASSWORD.TITLE'|translate}}</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body modal-body-background\">\n  <div class=\"container\">\n    <app-password-repeat [(password)]=\"password\"></app-password-repeat>\n  </div>\n</div>\n<div class=\"modal-footer modal-footer-background\">\n  <button class=\"btn btn-success\" [disabled]=\"password === undefined\" (click)=\"submitForm()\" translate>SAVE</button>\n</div>\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\nimport {UUID} from \"angular2-uuid\";\n\n@Component({\n  selector: 'app-status-symbols',\n  templateUrl: './status-symbols.component.html',\n  styleUrls: ['./status-symbols.component.css']\n})\nexport class StatusSymbolsComponent implements OnInit, AfterViewInit {\n  uuid = UUID.UUID();\n\n  @Input()\n  showOk = false;\n  @Input()\n  okDisabled = false;\n  @Input()\n  okPositive = true;\n\n  @Input()\n  showInput = false;\n  @Input()\n  inputHigh = false;\n  @Input()\n  inputDisabled = false;\n  @Input()\n  inputDanger = false;\n  @Input()\n  inputOk = false;\n\n  @Input()\n  showOutput = false;\n  @Input()\n  outputHigh = false;\n  @Input()\n  outputDisabled = false;\n\n  @Input()\n  showWarning = false;\n\n  @Input()\n  showQuestionmark = false;\n\n  @Input()\n  showTimeglass = false;\n\n  @Input()\n  showWatch = false;\n\n  @Input()\n  disableIOAnimation = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n\n    // var myPath = document.getElementById(\"aaaa\") as any;\n    // var length = myPath.getTotalLength();\n    // console.log(length);\n  }\n}\n","<!--suppress CssNoGenericFontName -->\n<div class=\"symbols-container d-flex\" style=\"height: 25px;\">\n  <svg *ngIf=\"showOk\" viewBox=\"0 0 55 55\">\n    <path [ngClass]=\"{'ok-arc-pos': okPositive, 'ok-arc-neg': !okPositive, 'ok-arc-disabled': okDisabled}\"\n          style=\"fill:none; stroke-width:7; stroke-linecap:round;\"\n          d=\"M 50,28 A 23,23 1 1 1 32,5\"/>\n    <path [ngClass]=\"{'ok-check-pos': okPositive, 'ok-check-neg': !okPositive, 'ok-check-disabled': okDisabled}\"\n          style=\"fill:none; stroke-width:7; stroke-linecap:round; stroke-linejoin:round;\"\n          d=\"m 48,10 L 26,34 19,27\"/>\n  </svg>\n\n  <svg *ngIf=\"showInput\" viewBox=\"0 0 48 48\">\n    <path [ngClass]=\"{'input-arc-high': inputHigh, 'input-arc-low': !inputHigh, 'input-arc-disabled': inputDisabled, 'disable-io-animation': disableIOAnimation}\"\n      style=\"fill:none;stroke-width:6;stroke-linecap:round;\"\n      d=\"M 43,30 A 20,20 0 0 1 22,44 20,20 0 0 1 4,26 20,20 0 0 1 18,5\" />\n    <path [ngClass]=\"{'input-arrow-high': inputHigh, 'input-arrow-low': !inputHigh, 'input-arrow-disabled': inputDisabled,\n    'input-arrow-danger': inputDanger, 'input-arrow-ok': inputOk, 'disable-io-animation': disableIOAnimation}\"\n      style=\"fill:none;stroke-width:6;stroke-linecap:round;stroke-linejoin:round;\"\n      d=\"m 44,4 -25,25 0,-11 0,11 11,0\"/>\n  </svg>\n\n  <svg *ngIf=\"showWarning\" viewBox=\"0 0 52 52\">\n    <style>\n      #line {\n        fill: black;\n        stroke: black;\n        animation-name: wobble_exclem;\n      }\n      #circle {\n        fill: black;\n        stroke: black;\n        animation-name: wobble_exclem;\n      }\n      #triangle {\n        fill: none;\n        stroke: red;\n        animation-name: wobble_triangle;\n      }\n\n      #triangle, #circle, #line {\n        animation-duration: 2s;\n        animation-timing-function: ease;\n        animation-iteration-count: infinite;\n        animation-direction: normal;\n        animation-play-state: running;\n      }\n\n      @keyframes wobble_triangle {\n        0% {stroke: red;}\n        10% {stroke: black;}\n        20% {stroke: red;}\n        30% {stroke: black;}\n        40% {stroke: red;}\n        100% {stroke: red;}\n      }\n\n      @keyframes wobble_exclem {\n        0% {fill: black; stroke: black;}\n        20% {fill: red; stroke: red;}\n        30% {fill: black; stroke: black;}\n        40% {stroke: red; fill: red;}\n        50% {fill: black; stroke: black;}\n        100% {fill: black; stroke: black;}\n      }\n    </style>\n    <g\n      id=\"layer1\"\n      transform=\"translate(-65.006721,-51.682065)\">\n      <path\n        style=\"fill:none;stroke:#000000;stroke-width:6;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n        d=\"m 91.331368,55.269697 c -6.120196,0 -24.163497,38.291854 -21.397523,42.773507 1.339548,2.170446 41.820555,1.886856 42.884205,0.04456 C 115.48064,93.47603 97.145515,55.269697 91.331368,55.269697 Z\"\n        id=\"triangle\"/>\n      <path\n        style=\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n        d=\"m 85.535156,52.710938 v 0.002 c -2.497296,4.27e-4 -4.974721,0.0083 -6.904297,0.207031 -2.023362,0.208365 -3.45302,0.624488 -4.49414,1.308594 -1.041116,0.684105 -1.696444,1.638189 -0.955078,13.396484 0.741365,11.758295 2.889907,34.431673 5.210937,45.771483 2.321027,11.33982 4.821243,11.39944 7.322266,11.45899 2.501024,-0.0596 5.001238,-0.11917 7.322265,-11.45899 C 95.358137,102.05666 97.504727,79.383294 98.246094,67.625 98.98746,55.866706 98.332134,54.912621 97.291016,54.228516 96.249898,53.54441 94.822191,53.128271 92.798828,52.919922 90.869252,52.72123 88.389875,52.713318 85.892578,52.712891 v -0.002 c -0.06039,0 -0.11735,0.002 -0.177734,0.002 -0.06105,-3e-6 -0.118631,-0.002 -0.179688,-0.002 z\"\n        transform=\"matrix(0.26458333,0,0,0.26458333,68.650128,53.931933)\"\n        id=\"line\" />\n      <ellipse\n        style=\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none\"\n        id=\"circle\"\n        cx=\"91.435387\"\n        cy=\"91.785553\"\n        rx=\"2.0209532\"\n        ry=\"1.9615135\" />\n    </g>\n  </svg>\n\n  <svg *ngIf=\"showOutput\" viewBox=\"0 0 49.5 49.5\">\n    <g\n      transform=\"translate(-65.650128,-50.931933)\">\n      <path [ngClass]=\"{'output-arc-high': outputHigh, 'output-arc-low': !outputHigh, 'output-arc-disabled': outputDisabled, 'disable-io-animation': disableIOAnimation}\"\n        style=\"fill:none;stroke-width:6;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\"\n        d=\"M 110.5292,82.496254 A 20.045216,20.045216 0 0 1 89.519407,96.66552 20.045216,20.045216 0 0 1 71.418291,78.930548 20.045216,20.045216 0 0 1 85.155321,57.635628\"/>\n      <path id=\"aaaa\" [ngClass]=\"{'output-arrow-high': outputHigh, 'output-arrow-low': !outputHigh, 'output-arrow-disabled': outputDisabled, 'disable-io-animation': disableIOAnimation}\"\n        style=\"fill:none;stroke-width:6;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n        d=\"M 85.940585,81.634283 111.26437,56.577765 v 11.96031 -11.96031 l -11.62622,0.06681\"/>\n    </g>\n  </svg>\n\n  <svg *ngIf=\"showQuestionmark\" viewBox=\"0 0 64 64\">\n    <g>\n      <ellipse\n        style=\"fill:#e7f1ff;stroke:#000000;stroke-width:7;stroke-dasharray:none;stroke-opacity:1\"\n        id=\"path61\"\n        cx=\"32\"\n        cy=\"32\"\n        rx=\"28\"\n        ry=\"28\" />\n      <text\n        xml:space=\"preserve\"\n        transform=\"matrix(4.4532315,0,0,4.2842598,-833.60991,-796.97094)\"\n        style=\"font-size:12px;font-family:Verdana;;fill:#000000;stroke:#000000;stroke-width:0.6;\"><tspan\n       x=\"191.3\"\n       y=\"198\">?</tspan></text>\n    </g>\n  </svg>\n\n  <svg *ngIf=\"showTimeglass\" viewBox=\"0 0 106 106\">\n    <ellipse\n      style=\"fill:#fff100;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none\"\n      id=\"path1799\"\n      cx=\"52.9221\"\n      cy=\"52.994404\"\n      rx=\"47.605225\"\n      ry=\"47.532925\" />\n    <g transform=\"translate(-5.4946446,-9.9771175)\" class=\"rotate\">\n      <path\n        style=\"fill:none;stroke:#000000;stroke-width:5.495;stroke-linecap:round;stroke-linejoin:round;\"\n        d=\"M 46.3,50.3 C 37.7,45.1 36.4,33.4 36.4,33.4 l -0.1,-9.4 h 33 l 0.2,8.7 c 0,0 -0.9,12.8 -10.4,17.7\" />\n      <path\n        style=\"fill:none;stroke:#000000;stroke-width:5.495;stroke-linecap:round;stroke-linejoin:round;\"\n        d=\"m 58.8,50.5 0.1,5.5 c 8.7,5.2 10.3,17.6 10.3,17.6 v 9.3 H 36.3 v -8.7 c 0,0 0.6,-12.7 10.1,-17.6 v -5.8\" />\n    </g>\n  </svg>\n\n  <svg *ngIf=\"showWatch\" viewBox=\"0 0 124 124\">\n    <g>\n      <ellipse\n        style=\"fill:#ffcc00;fill-opacity:1;stroke:#000000;stroke-width:11;\"\n        id=\"path850\"\n        cx=\"61\"\n        cy=\"61\"\n        rx=\"56\"\n        ry=\"56\" />\n      <path\n        style=\"fill:none;fill-opacity:1;stroke:black;stroke-width:10;stroke-linecap:round;\"\n        d=\"M 61,9.5 V 20\"\n        id=\"noon\" />\n      <path\n        style=\"fill:none;fill-opacity:1;stroke:black;stroke-width:10;stroke-linecap:round;\"\n        d=\"m 61,102 v 15\"\n        id=\"six\" />\n      <path\n        style=\"fill-opacity:1;stroke:black;stroke-width:10;stroke-linecap:round;\"\n        d=\"m 9.5,61 c 10,0 10,0 10,0\"\n        id=\"nine\" />\n      <path\n        style=\"fill:none;fill-opacity:1;stroke:black;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none\"\n        d=\"m 102.5,61 c 10,0 10,0 10,0\"\n        id=\"three\" />\n      <path\n        class=\"time-minutes\"\n        style=\"fill-opacity:1;stroke:black;stroke-width:9;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none\"\n        d=\"m 61,18.474502 c 0,0 0,0 0,43.636474\"\n        id=\"minutes\" />\n      <path\n        class=\"time-hours\"\n        style=\"fill-opacity:1;stroke:black;stroke-width:9;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none\"\n        d=\"m 61,40 c 0,0 0,0 0,22\"\n        id=\"minutes\" />\n    </g>\n  </svg>\n</div>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-password-repeat',\n  templateUrl: './password-repeat.component.html',\n  styleUrls: ['./password-repeat.component.css']\n})\nexport class PasswordRepeatComponent implements OnInit {\n  @Input() password: string | undefined;\n  @Output() passwordChange = new EventEmitter<string | undefined>();\n\n  passwordRepeatForm: UntypedFormGroup = {} as UntypedFormGroup;\n\n  containsUppercaseLetterRegex = /[A-Z]/;\n  containsLowercaseLetterRegex = /[a-z]/;\n  containsNumberRegex = /[0-9]/;\n  containsSpecialCharRegex = /[^A-Za-z0-9\\s]/;\n\n  checkPwRepeatOk = false;\n  checkUppercase = false;\n  checkLowercase = false;\n  checkNumber = false;\n  checkSpecial = false;\n  checkLength = false;\n\n  debouncing = false;\n\n  constructor(private fb: UntypedFormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.passwordRepeatForm = this.fb.group({\n      newpassword: [],\n      repeatpassword: []\n    });\n    this.passwordRepeatForm.controls['newpassword'].valueChanges.subscribe({\n      next: () => {\n        this.emitNewPassword();\n      }\n    });\n    this.passwordRepeatForm.controls['repeatpassword'].valueChanges.subscribe({\n      next: () => {\n        this.emitNewPassword();\n      }\n    });\n  }\n\n  emitNewPassword() {\n    this.passwordChange.emit(this.validatePassword() ? this.newPassword : undefined);\n  }\n\n  get newPassword(): string {\n    return this.passwordRepeatForm.controls['newpassword'].value;\n  }\n\n  get repeatPassword(): string {\n    return this.passwordRepeatForm.controls['repeatpassword'].value;\n  }\n\n  validatePassword(): boolean {\n    const newPw = this.newPassword;\n    const repPw = this.repeatPassword;\n    this.checkLength = this.validateMinLength(newPw);\n    this.checkLowercase = this.validateContainsLowercaseLetter(newPw);\n    this.checkUppercase = this.validateContainsUppercaseLetter(newPw);\n    this.checkSpecial = this.validateContainsSpecialChar(newPw);\n    this.checkNumber = this.validateContainsNumber(newPw);\n    this.checkPwRepeatOk = this.validatePasswordRepeatedOk(newPw, repPw);\n\n    return this.checkLength &&\n      this.checkLowercase &&\n      this.checkUppercase &&\n      this.checkSpecial &&\n      this.checkNumber &&\n      this.checkPwRepeatOk;\n  }\n\n  validateMinLength(pw: string): boolean {\n    return pw !== null && pw !== undefined && pw.length >= 8;\n  }\n\n  validatePasswordRepeatedOk(pw: string, repPw: string): boolean {\n    return this.validateMinLength(pw)\n      && pw === repPw;\n  }\n\n  validateContainsUppercaseLetter(pw: string): boolean {\n    return this.validateMinLength(pw)\n      && this.containsUppercaseLetterRegex.test(pw);\n  }\n\n  validateContainsLowercaseLetter(pw: string): boolean {\n    return this.validateMinLength(pw)\n      && this.containsLowercaseLetterRegex.test(pw);\n  }\n\n  validateContainsNumber(pw: string): boolean {\n    return this.validateMinLength(pw)\n      && this.containsNumberRegex.test(pw);\n  }\n\n  validateContainsSpecialChar(pw: string): boolean {\n    return this.validateMinLength(pw)\n      && this.containsSpecialCharRegex.test(pw);\n  }\n}\n","<form [formGroup]=\"passwordRepeatForm\">\n  <div class=\"form-group\">\n    <label for=\"newpassword\" translate>USER.CHANGEPASSWORD.NEWPASSWORD</label>\n    <div class=\"input-group\">\n      <input id=\"newpassword\" class=\"form-control shadow-none\" formControlName=\"newpassword\" type=\"password\">\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"repeatpassword\" translate>USER.CHANGEPASSWORD.REPEATPASSWORD</label>\n    <div class=\"input-group\">\n      <input id=\"repeatpassword\" class=\"form-control shadow-none\" formControlName=\"repeatpassword\" type=\"password\">\n    </div>\n  </div>\n\n  <div class=\"d-flex flex-wrap justify-content-between align-content-between\">\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkPwRepeatOk\" [showWarning]=\"!checkPwRepeatOk\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.REPEATPASSWORD</div>\n    </div>\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkUppercase\" [showWarning]=\"!checkUppercase\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.UPPERCASE</div>\n    </div>\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkLowercase\" [showWarning]=\"!checkLowercase\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.LOWERCASE</div>\n    </div>\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkNumber\" [showWarning]=\"!checkNumber\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.NUMBER</div>\n    </div>\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkSpecial\" [showWarning]=\"!checkSpecial\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.SPECIAL</div>\n    </div>\n    <div class=\"d-flex flex-nowrap m-1\">\n      <app-status-symbols [showOk]=\"checkLength\" [showWarning]=\"!checkLength\"></app-status-symbols>\n      <div class=\"ms-1\" translate>USER.CHANGEPASSWORD.MINLENGTH</div>\n    </div>\n  </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {SocketConnectionService} from \"../../services/socket-connection.service\";\nimport {FdcService} from \"../../services/fdc.service\";\nimport {SystemHealthService} from \"../../services/system-health.service\";\nimport {AuthService} from \"../../services/authentication/auth.service\";\n\n@Component({\n  selector: 'app-system-health',\n  templateUrl: './system-health.component.html',\n  styleUrls: ['./system-health.component.css']\n})\nexport class SystemHealthComponent implements OnInit {\n\n  constructor(public socketIo: SocketConnectionService, public fdcService: FdcService,\n              public systemHealthService: SystemHealthService, public authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<ngb-accordion activeIds=\"\">\n  <ngb-panel id=\"system-health\">\n    <ng-template ngbPanelHeader>\n      <button ngbPanelToggle class=\"accordion-button\" [ngClass]=\"\n        {\n          'syshealth-ok': systemHealthService.systemHealthStatus() === 0,\n          'syshealth-nok': systemHealthService.systemHealthStatus() === 1,\n          'syshealth-undefined': systemHealthService.systemHealthStatus() === 2\n        }\">\n        <div class=\"d-flex flex-nowrap\">\n          <app-status-symbols\n            [showOk]=\"systemHealthService.systemHealthStatus() === 0\"\n            [showWarning]=\"systemHealthService.systemHealthStatus() === 1\"\n            [showTimeglass]=\"systemHealthService.systemHealthStatus() === 2\"\n          ></app-status-symbols>\n        </div>\n        <div *ngIf=\"systemHealthService.systemHealthStatus() === 0\" class=\"ms-2\" translate>SYSHEALTH.OK</div>\n        <div *ngIf=\"systemHealthService.systemHealthStatus() === 1\" class=\"ms-2\" translate>SYSHEALTH.WARNING</div>\n        <div *ngIf=\"systemHealthService.systemHealthStatus() === 2\" class=\"ms-3\" translate>SYSHEALTH.LOADING</div>\n      </button>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <div class=\"row\">\n        <div *ngIf=\"systemHealthService.groupsInAlarmState() !== 0\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showWarning]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{'SYSHEALTH.GROUPS.ALARM'|translate:{\n            'plural': ((systemHealthService.groupsInAlarmState() > 1 ? ('SYSHEALTH.GROUPS.PLURAL'|translate) : ''))} }}</div>\n        </div>\n        <div *ngIf=\"systemHealthService.groupsConfigurationError()\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showWarning]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{'SYSHEALTH.GROUPS.MISSCONFIGURATION'|translate:{\n            'plural': ((systemHealthService.groupsConfigurationError() > 1 ? ('SYSHEALTH.GROUPS.PLURAL'|translate) : ''))} }}</div>\n        </div>\n        <div *ngIf=\"systemHealthService.groupsInTimeoutState()\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showTimeglass]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{systemHealthService.groupsInTimeoutState() > 1 ? systemHealthService.groupsInTimeoutState() : ''}}{{'SYSHEALTH.GROUPS.TIMEOUT'|translate:{\n            'plural': ((systemHealthService.groupsInTimeoutState() > 1 ? ('SYSHEALTH.GROUPS.PLURAL'|translate) : ''))} }}</div>\n        </div>\n        <div *ngIf=\"!systemHealthService.status.busMode\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showQuestionmark]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{'SYSHEALTH.BUSMODE.UNKNOWN'|translate}}</div>\n        </div>\n        <div *ngIf=\"systemHealthService.status.busMode\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols\n            [showOk]=\"systemHealthService.status.busMode === 'Ring'\"\n            [showWarning]=\"systemHealthService.status.busMode === 'Line'\"></app-status-symbols>\n          <div class=\"ms-2\">{{('SYSHEALTH.BUSMODE.' + systemHealthService.status.busMode.toUpperCase())|translate}}</div>\n        </div>\n\n        <div *ngIf=\"systemHealthService.status.fdas.inStatusConfigured.length > 0\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols\n            [showOk]=\"systemHealthService.status.fdas.configuredNotInStatus.length === 0\"\n            [showWarning]=\"systemHealthService.status.fdas.configuredNotInStatus.length > 0\"\n          ></app-status-symbols>\n          <div class=\"ms-2\">{{systemHealthService.status.fdas.inStatusConfigured.length}} {{'SYSHEALTH.FDAS.ONLINECONFIGURED'\n            |translate:{plural: (systemHealthService.status.fdas.inStatusConfigured.length === 1 ? '' : 's')} }}</div>\n        </div>\n        <div *ngIf=\"systemHealthService.status.fdas.configuredNotInStatus.length > 0\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showWarning]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{systemHealthService.status.fdas.configuredNotInStatus.length}} {{'SYSHEALTH.FDAS.OFFLINECONFIGURED'\n            |translate:{plural: (systemHealthService.status.fdas.configuredNotInStatus.length === 1 ? '' : 's')} }}</div>\n        </div>\n        <div *ngIf=\"authService.isLoggedIn() && systemHealthService.status.fdas.inStatusUnconfigured.length > 0\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showQuestionmark]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\">{{systemHealthService.status.fdas.inStatusUnconfigured.length}} {{'SYSHEALTH.FDAS.ONLINEUNCONFIGURED'\n            |translate:{plural: (systemHealthService.status.fdas.inStatusUnconfigured.length === 1 ? '' : 's')} }}</div>\n        </div>\n\n        <div class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols\n            [showOk]=\"systemHealthService.guibackendServiceStatus === true\"\n            [showWarning]=\"systemHealthService.guibackendServiceStatus === false\"\n            [showTimeglass]=\"systemHealthService.guibackendServiceStatus === undefined\"\n          ></app-status-symbols>\n          <div *ngIf=\"systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.CONNECTED</div>\n          <div *ngIf=\"!systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.DISCONNECTED</div>\n        </div>\n        <div class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols\n            [showOk]=\"systemHealthService.timeDiffOk() && systemHealthService.guibackendServiceStatus == true\"\n            [showWarning]=\"!systemHealthService.timeDiffOk() && systemHealthService.guibackendServiceStatus === true\"\n            [showQuestionmark]=\"systemHealthService.guibackendServiceStatus === false\"\n            [showTimeglass]=\"systemHealthService.guibackendServiceStatus === undefined\"\n          ></app-status-symbols>\n          <div *ngIf=\"systemHealthService.timeDiffOk() && systemHealthService.guibackendServiceStatus\" class=\"ms-2\">{{'SYSHEALTH.TIMEDIFFOK' | translate}}\n            ({{systemHealthService.getFdcTimeDiffMinutes()}} {{'SYSHEALTH.MINUTES' | translate}})\n          </div>\n          <div *ngIf=\"!systemHealthService.timeDiffOk() && systemHealthService.guibackendServiceStatus\"\n               class=\"ms-2\">{{ 'SYSHEALTH.TIMEDIFFTOOBIG' | translate }} {{systemHealthService.getFdcTimeDiffMinutes()}} {{'SYSHEALTH.MINUTES' | translate}}</div>\n          <div *ngIf=\"!systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.TIMESTATUSUNKNOWN</div>\n        </div>\n        <div *ngIf=\"!systemHealthService.allServicesRunning\">\n          <div class=\"d-flex flex-nowrap mt-2\">\n            <app-status-symbols\n              [showOk]=\"systemHealthService.guibackendServiceStatus === true\"\n              [showWarning]=\"systemHealthService.guibackendServiceStatus === false\"\n              [showTimeglass]=\"systemHealthService.guibackendServiceStatus === undefined\"\n            ></app-status-symbols>\n            <div *ngIf=\"systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.GUIBACKENDSERVICERUNNING</div>\n            <div *ngIf=\"systemHealthService.guibackendServiceStatus === false\" class=\"ms-2\" translate>SYSHEALTH.GUIBACKENDSERVICESTOPPED</div>\n            <div *ngIf=\"systemHealthService.guibackendServiceStatus === undefined\" class=\"ms-2\" translate>SYSHEALTH.GUIBACKENDSERVICESTATUSUNKNOWN</div>\n          </div>\n          <div class=\"d-flex flex-nowrap mt-2\">\n            <app-status-symbols\n              [showOk]=\"systemHealthService.applicationServiceStatus === true && systemHealthService.guibackendServiceStatus === true\"\n              [showWarning]=\"systemHealthService.applicationServiceStatus === false && systemHealthService.guibackendServiceStatus === true\"\n              [showQuestionmark]=\"systemHealthService.guibackendServiceStatus === false\"\n              [showTimeglass]=\"systemHealthService.guibackendServiceStatus === undefined || (systemHealthService.guibackendServiceStatus === true && systemHealthService.applicationServiceStatus === undefined)\"\n            ></app-status-symbols>\n            <div *ngIf=\"systemHealthService.applicationServiceStatus && systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.APPLICATIONSERVICERUNNING</div>\n            <div *ngIf=\"!systemHealthService.applicationServiceStatus && systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.APPLICATIONSERVICESTOPPED</div>\n            <div *ngIf=\"!systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.APPLICATIONSERVICESTATUSUNKNOWN</div>\n          </div>\n          <div class=\"d-flex flex-nowrap mt-2\">\n            <app-status-symbols\n              [showOk]=\"systemHealthService.mailerServiceStatus === true && systemHealthService.guibackendServiceStatus === true\"\n              [showWarning]=\"systemHealthService.mailerServiceStatus === false && systemHealthService.guibackendServiceStatus === true\"\n              [showQuestionmark]=\"systemHealthService.guibackendServiceStatus === false\"\n              [showTimeglass]=\"systemHealthService.guibackendServiceStatus === undefined || (systemHealthService.guibackendServiceStatus === true && systemHealthService.mailerServiceStatus === undefined)\"\n            ></app-status-symbols>\n            <div *ngIf=\"systemHealthService.mailerServiceStatus && systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.MAILERSERVICERUNNING</div>\n            <div *ngIf=\"!systemHealthService.mailerServiceStatus && systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.MAILERSERVICESTOPPED</div>\n            <div *ngIf=\"!systemHealthService.guibackendServiceStatus\" class=\"ms-2\" translate>SYSHEALTH.MAILERSERVICESTATUSUNKNOWN</div>\n          </div>\n        </div>\n        <div *ngIf=\"systemHealthService.allServicesRunning\" class=\"d-flex flex-nowrap mt-2\">\n          <app-status-symbols [showOk]=\"true\"></app-status-symbols>\n          <div class=\"ms-2\" translate>SYSHEALTH.ALLSERVICESRUNNING</div>\n        </div>\n      </div>\n\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {Component, TemplateRef} from '@angular/core';\nimport {ToastService} from \"../../services/toast-service.service\";\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.css'],\n  host: {'class': 'toast-container position-fixed end-0 p-3', 'style': 'z-index: 1200; top: 2.3rem;'}\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n\n  isTemplate(toast: any) {\n    return toast.textOrTpl instanceof TemplateRef;\n  }\n}\n","<!--suppress ALL -->\n<ngb-toast\n  *ngFor=\"let toast of toastService.toasts\"\n  [class]=\"toast.classname\"\n  [autohide]=\"true\"\n  [delay]=\"toast.delay || 2500\"\n  (hidden)=\"toastService.remove(toast)\"\n>\n  <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\n    <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\n  </ng-template>\n\n  <ng-template #text>{{ toast.textOrTpl }}</ng-template>\n</ngb-toast>\n","import {Directive, ElementRef} from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective {\n\n  constructor(private elementRef: ElementRef){\n  }\n\n  ngAfterViewInit(){\n    setTimeout(() => {\n      this.elementRef.nativeElement.focus();\n      console.log('focus');\n    }, 250);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigate(['login'], { queryParams: { returnUrl: state.url }}).then(\n        () => window.location.reload()\n      );\n    } else if (this.auth.getUser().forcePasswordChange) {\n      this.router.navigate(['forced-password-change']);\n    }\n    return true;\n  }\n}\n","import {HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {TokenStorageService} from './token-storage.service';\r\nimport {AuthService} from './auth.service';\r\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\r\nimport {catchError, filter, switchMap, take} from 'rxjs/operators';\r\n\r\nconst TOKEN_HEADER_KEY = 'x-access-token';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<Object>> {\r\n    let authReq = req;\r\n    const token = this.tokenService.getToken();\r\n    if (token != null) {\r\n      authReq = AuthInterceptor.addTokenHeader(req, token);\r\n    }\r\n\r\n    return next.handle(authReq).pipe(catchError((error: any): Observable<any> => {\r\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\r\n        return this.handle401Error(authReq, next);\r\n      } else if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 423) {\r\n        this.authService.signOutAndShowLogin();\r\n        return throwError(() => 'outdated sesseion id => sign out');\r\n      }\r\n\r\n      const err = new Error(error.message);\r\n\r\n      return throwError(() => err);\r\n    }));\r\n  }\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n\r\n      const token = this.tokenService.getRefreshToken();\r\n\r\n      if (token)\r\n        return this.authService.refreshToken().pipe(\r\n          switchMap((token: any) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.saveToken(token.token);\r\n            this.tokenService.saveRefreshToken(token.refreshToken);\r\n            this.refreshTokenSubject.next(token.token);\r\n            return next.handle(AuthInterceptor.addTokenHeader(request, token.token));\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false;\r\n            this.tokenService.signOut();\r\n            return throwError(err);\r\n          })\r\n        );\r\n    }\r\n\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token !== null),\r\n      take(1),\r\n      switchMap((token) => next.handle(AuthInterceptor.addTokenHeader(request, token)))\r\n    );\r\n  }\r\n\r\n  private static addTokenHeader(request: HttpRequest<any>, token: string) {\r\n    return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, token) });\r\n  }\r\n}\r\n\r\nexport const authInterceptor = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, shareReplay} from \"rxjs\";\nimport {TokenStorageService} from \"./token-storage.service\";\nimport {User} from \"../../dto/user.class\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {Router} from \"@angular/router\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public authenticationChange: EventEmitter<any> = new EventEmitter<any>();\n  fdcTimeDiff = 0;\n  loadedUsernames: string[] = [];\n\n  constructor(private http: HttpClient, private tokenStorage: TokenStorageService, private router: Router) {\n  }\n\n  login(username: string, password: string): Observable<any> {\n    let observable = this.http.post(AUTH_API + 'login', {username, password}, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    observable.subscribe((data: any) => {\n      this.tokenStorage.saveToken(data.token);\n      this.tokenStorage.saveRefreshToken(data.refreshToken);\n      this.tokenStorage.saveUser(JSON.parse(atob(data.token.split('.')[1])));\n      this.authenticationChange.emit({loggedIn: true});\n    });\n    return observable;\n  }\n\n  refreshToken() {\n    return this.http.post(AUTH_API + 'refreshtoken', {refreshToken: this.tokenStorage.getRefreshToken()}, httpOptions);\n  }\n\n  isLoggedIn(): boolean {\n    let token = this.tokenStorage.getRefreshToken();\n    if (!token) {\n      return false;\n    }\n    let tokenData = JSON.parse(atob(token.split('.')[1]));\n    let tokenExpirationTime =  tokenData.exp * 1000;\n    return tokenExpirationTime > (new Date().getTime() - this.fdcTimeDiff);\n  }\n\n  isLoggedOut(): boolean {\n    return this.tokenStorage.getRefreshToken() === null;\n  }\n\n  isTimedOut(): boolean {\n    let token = this.tokenStorage.getRefreshToken();\n    if (!token) {\n      return false;\n    }\n    let tokenData = JSON.parse(atob(token.split('.')[1]));\n    let tokenExpirationTime =  tokenData.exp * 1000;\n    return tokenExpirationTime <= (new Date().getTime() - this.fdcTimeDiff);\n  }\n\n  isAdmin(): boolean {\n    return this.isLoggedIn() && this.hasRole('ADMIN');\n  }\n\n  isService(): boolean {\n    return this.isLoggedIn() && (this.isAdmin() || this.hasRole('SERVICE'));\n  }\n\n  mustChangePassword(): boolean {\n    return this.getUser().forcePasswordChange;\n  }\n\n  signOut(): void {\n    this.loadedUsernames = [];\n    this.tokenStorage.signOut();\n    this.authenticationChange.emit({loggedIn: false});\n  }\n\n  signOutAndShowLogin(): void {\n    this.signOut();\n    this.router.navigateByUrl('login');\n  }\n\n  getUser(): User {\n    return this.tokenStorage.getUser();\n  }\n\n  hasRole(role: string): boolean {\n    return this.getUser().role === role;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate{\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const expectedRole = route.data['expectedRole'];\n    let containsOneRole = false;\n    if (this.auth.isLoggedIn()) {\n      for (const role of expectedRole) {\n        containsOneRole = containsOneRole || this.auth.hasRole(role);\n      }\n    }\n    if (!containsOneRole) {\n      this.auth.signOut();\n      return this.router.parseUrl('/login');\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../../dto/user.class';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nconst REFRESHTOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n  public saveRefreshToken(token: string): void {\n    window.sessionStorage.removeItem(REFRESHTOKEN_KEY);\n    window.sessionStorage.setItem(REFRESHTOKEN_KEY, token);\n  }\n  public getRefreshToken(): string | null {\n    return window.sessionStorage.getItem(REFRESHTOKEN_KEY);\n  }\n  public saveUser(data: any): void {\n    let user = {} as User;\n    user.username = data.username;\n    user.role = data.role;\n    user.forcePasswordChange = data.forcePasswordChange;\n\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  public getUser(): User {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n    return {} as User;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {shareReplay} from \"rxjs\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthService} from \"./auth.service\";\nimport {ToastService} from \"../toast-service.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  loadedUsers: string[] = [];\n\n  constructor(private http: HttpClient, private auth: AuthService, private toast: ToastService) {\n    this.loadAllUsers();\n    auth.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.loadAllUsers();\n        } else {\n          this.loadedUsers = [];\n        }\n      }\n    });\n  }\n\n\n  get users(): any[] {\n    return this.loadedUsers;\n  }\n\n  loadAllUsers(): void {\n    if (this.auth.isService()) {\n      let obs = this.http.get(AUTH_API + 'all-users') .pipe(shareReplay());\n      obs.subscribe({\n        next: (data: any) => {\n          this.loadedUsers = data;\n        },\n        error: (err) => {\n          this.loadedUsers = [];\n          console.error(err);\n        }\n      });\n    }\n  }\n\n  changePassword(username: string, password: string) {\n    let observable = this.http.put(AUTH_API + 'change-password', {username, password}, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    observable.subscribe(() => {\n      this.toast.show(\"Password changed!\", { classname: 'bg-success text-white text-bold toast-font-size'});\n      if (username === this.auth.getUser().username) {\n        setTimeout(() => this.auth.signOut(), 100);\n      }\n    });\n    return observable;\n  }\n\n  createUser(userData: any) {\n    console.log(userData);\n    let observable = this.http.post(AUTH_API + 'create-user', userData, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    observable.subscribe({\n      next: () => {\n        this.toast.show(\"User created!\", { classname: 'bg-success text-white text-bold toast-font-size'});\n        this.loadAllUsers();\n      }, error: (err) => {\n        console.error(err);\n        this.toast.show(\"Error creating user!\", { classname: 'bg-danger text-white text-bold toast-font-size'});\n      }\n    });\n    return observable;\n  }\n\n  deleteUser(username: string) {\n    if (this.auth.isAdmin()) {\n      let obs = this.http.delete(AUTH_API + 'delete-user?username=' + username, httpOptions)\n        .pipe(\n          shareReplay()\n        );\n      obs.subscribe(() => {\n        this.loadAllUsers();\n        this.toast.show(\"User deleted!\", { classname: 'bg-success text-white text-bold toast-font-size'});\n      });\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n\n  constructor() {\n  }\n\n  saveValue(key: string, value: string): void {\n    try {\n      let config = CookieService.getConfig();\n      config[key] = value;\n      localStorage.setItem('config', JSON.stringify(config));\n    } catch (e: any) {\n      CookieService.logError(e.message);\n    }\n  }\n\n  getValue(key: string, defaultValue: string) {\n    try {\n      let config = CookieService.getConfig();\n      return config[key] ? config[key] : defaultValue;\n    } catch (e: any) {\n      CookieService.logError(e.message);\n    }\n  }\n\n  private static getConfig(): any {\n    return JSON.parse(localStorage.getItem('config') || '{}');\n  }\n\n  private static logError(message: string) {\n    let errorDiv = document.createElement('DIV');\n    errorDiv.innerText = message;\n    document.getElementById('error-log')?.appendChild(errorDiv);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, of, shareReplay} from \"rxjs\";\nimport {DamperGroupConfigDto} from \"../../dto/damperGroupConfig.class\";\nimport * as _ from 'lodash';\nimport {UUID} from \"angular2-uuid\";\nimport {AuthService} from \"../authentication/auth.service\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {ToastService} from \"../toast-service.service\";\nimport {SyncService} from \"../sync.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/groups/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DamperGroupService {\n  private _data: DamperGroupConfigDto[] = [];\n  private _loaded = false;\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private syncService: SyncService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        } else {\n          this.unload();\n        }\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n    syncService.backendIsAvailableEvent.subscribe({\n      next: (backendServiceStatus: any) => {\n        if (!backendServiceStatus.running) {\n          this.unload();\n        } else {\n          this.load();\n        }\n      }\n    });\n  }\n\n  getData(): DamperGroupConfigDto[] {\n    if (!this._loaded) {\n      this.load();\n    }\n    return this._data;\n  }\n\n  get loaded(): boolean {\n    return this._loaded;\n  }\n\n  unload(): void {\n    this._data = [] as DamperGroupConfigDto[];\n    this._loaded = false;\n  }\n\n  load(): void {\n    if (this.authService.isAdmin()) {\n      this._loaded = true;\n      let obs = this.http.get(AUTH_API);\n      obs.subscribe({\n        next: (data: any) => {\n          this._data = data;\n          this._loaded = true;\n        },\n        error: () => this.unload()\n      });\n    }\n  }\n\n  add(damperGroup: DamperGroupConfigDto): Observable<any> {\n    damperGroup.id = UUID.UUID();\n    this._data.push(damperGroup);\n    return this.save(this._data);\n  }\n\n  update(): Observable<any> {\n    return this.save(this._data);\n  }\n\n  remove(groupId: string): Observable<any> {\n    let clone = _.cloneDeep(this._data);\n    clone = clone.filter((group) => group.id !== groupId);\n    return this.save(clone);\n  }\n\n  replace(newData: DamperGroupConfigDto[]): void {\n    this._data = newData;\n  }\n\n  checkIfNameUnique(value: DamperGroupConfigDto) {\n    return of(this._data.some((a) => a.name === value.name));\n  }\n\n  groupsByIds(groupIds: string[]): DamperGroupConfigDto[] {\n    if (groupIds) {\n      let groups = this._data.filter(g => groupIds.includes(g.id));\n      return groups.length > 0 ? groups : [] as DamperGroupConfigDto[];\n    } else {\n      return [] as DamperGroupConfigDto[];\n    }\n  }\n\n  private save(data: DamperGroupConfigDto[]): Observable<any> {\n    let toSave = _.cloneDeep(data.map(d => d as DamperGroupConfigDto));\n    const obs = this.http.post(AUTH_API, toSave, httpOptions)\n    .pipe(\n      shareReplay()\n    );\n    obs.subscribe({\n      next: (data: any) => {\n        this._data = data;\n        this._loaded = true;\n        this.toast.show(\"Groups config saved\", { classname: 'bg-success text-white text-bold toast-font-size'});\n        this.syncService.emitConfigNeedsReload(['application']);\n      },\n      error: () => this.unload()\n    });\n    return obs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthService} from \"../authentication/auth.service\";\nimport {ToastService} from \"../toast-service.service\";\nimport {shareReplay} from \"rxjs\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {FdaService} from \"./fda.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/fdas/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DampermodeChangeService {\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private fdaService: FdaService) { }\n\n  setDamperMode(physicalId: number, damperId: string, mode: string): void {\n    if (this.authService.isService()) {\n      let obs = this.http.post(AUTH_API + 'changemode', { physicalId: physicalId, damperId: damperId, mode: mode }, httpOptions)\n        .pipe(\n          shareReplay()\n        );\n      obs.subscribe({\n        next: () => {\n          this.fdaService.load();\n          this.toast.show(\"Dampermode was set successfully.\", {classname: 'bg-success text-white text-bold toast-font-size'});\n        },\n        error: () => {\n          this.toast.show(\"ERROR! Could not set dampermode!\", { classname: 'bg-danger text-white text-bold toast-font-size'});\n        }\n      });\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable, shareReplay} from \"rxjs\";\r\nimport * as _ from \"lodash\";\r\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\r\nimport {UUID} from \"angular2-uuid\";\r\nimport {AuthService} from \"../authentication/auth.service\";\r\nimport {LocationUtils} from \"../../utils/locationUtils\";\r\nimport {ToastService} from \"../toast-service.service\";\r\nimport {SyncService} from \"../sync.service\";\r\n\r\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/fdas/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FdaService {\r\n  public data: FdaConfigDto[] = [];\r\n  loaded = false;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\r\n              private syncService: SyncService) {\r\n    authService.authenticationChange.subscribe({\r\n      next: (data: any) => {\r\n        if (data.loggedIn) {\r\n          this.load();\r\n        } else {\r\n          this.unload();\r\n        }\r\n      }\r\n    });\r\n    if (authService.isLoggedIn()) {\r\n      this.load();\r\n    }\r\n    syncService.backendIsAvailableEvent.subscribe({\r\n      next: (backendServiceStatus: any) => {\r\n        if (!backendServiceStatus.running) {\r\n          this.unload();\r\n        } else {\r\n          this.load();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  unload(): void {\r\n    this.data = [] as FdaConfigDto[];\r\n    this.loaded = false;\r\n  }\r\n\r\n  load(): void {\r\n    if (this.authService.isService()) {\r\n      let obs = this.http.get(AUTH_API);\r\n      obs.subscribe({\r\n        next: (data: any) => {\r\n          this.data = data;\r\n          this.loaded = true;\r\n        },\r\n        error: () => this.unload()\r\n      });\r\n    }\r\n  }\r\n\r\n  add(fda: FdaConfigDto): Observable<any> {\r\n    fda.id = UUID.UUID();\r\n    this.data.push(fda);\r\n    return this.save(this.data);\r\n  }\r\n\r\n  update(): Observable<any> {\r\n    return this.save(this.data);\r\n  }\r\n\r\n  updateWithoutServiceNotification(): Observable<any> {\r\n    return this._save(this.data, false);\r\n  }\r\n\r\n  remove(id: string): Observable<any> {\r\n    let clone = _.cloneDeep(this.data);\r\n    clone = clone.filter((fda) => fda.id !== id);\r\n    return this.save(clone);\r\n  }\r\n\r\n  checkIfPhysicalAddressUnique(value: FdaConfigDto): boolean {\r\n    return !this.data.some((fda) => {\r\n      return ((fda.id !== value.id) && (fda.physicalAddress === value.physicalAddress));\r\n    });\r\n  }\r\n\r\n  getFdaConfigByPhysicalAddress(physicalAddress: number): FdaConfigDto|undefined {\r\n    return this.data.find(f => f.physicalAddress === physicalAddress);\r\n  }\r\n\r\n  private save(data: FdaConfigDto[]): Observable<any> {\r\n    return this._save(data, true);\r\n  }\r\n\r\n  private _save(data: FdaConfigDto[], notifyServices: boolean): Observable<any> {\r\n    let toSave = data.map(d => _.cloneDeep(d) as FdaConfigDto);\r\n    toSave.forEach((fda: any) => {\r\n      fda.fdaConfigRef = undefined;\r\n      fda.damper1.disabled = fda.damper1.damperMode === 'Disabled' ? 1 : 0;\r\n      fda.damper2.disabled = fda.damper2.damperMode === 'Disabled' ? 1 : 0;\r\n    });\r\n    const obs = this.http.post(AUTH_API, toSave, httpOptions)\r\n      .pipe(\r\n        shareReplay()\r\n      );\r\n    obs.subscribe({\r\n      next: (data: any) => {\r\n        this.data = data;\r\n        this.loaded = true;\r\n        this.toast.show(\"FDAs config saved\", { classname: 'bg-success text-white text-bold toast-font-size'});\r\n        if (notifyServices) {\r\n          this.syncService.emitConfigNeedsReload(['application']);\r\n        }\r\n      },\r\n      error: () => {\r\n        this.unload();\r\n        this.toast.show(\"ERROR! Data could not be saved\", { classname: 'bg-danger text-white text-bold toast-font-size'});\r\n      }\r\n    });\r\n    return obs;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {of} from \"rxjs\";\r\nimport * as _ from \"lodash\";\r\nimport {InputConfigDto} from \"../../dto/inputConfig.class\";\r\nimport {FdcService} from \"../fdc.service\";\r\nimport {UUID} from \"angular2-uuid\";\r\nimport {AuthService} from \"../authentication/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputService {\r\n  public availableInputNumbers = [] as number[];\r\n\r\n  constructor(public service: FdcService, private authService: AuthService) {\r\n    authService.authenticationChange.subscribe({\r\n      next: (data: any) => {\r\n        if (data.loggedIn) {\r\n          this.load();\r\n        }\r\n      }\r\n    });\r\n    if (authService.isLoggedIn()) {\r\n      this.load();\r\n    }\r\n  }\r\n\r\n  get inputs(): InputConfigDto[] {\r\n    return this.service.data.inputs;\r\n  }\r\n\r\n  load(): void {\r\n    if (this.authService.isAdmin()) {\r\n      let obs = this.service.load();\r\n      if (obs) {\r\n        obs.subscribe({\r\n          next: () => {\r\n            this.setAvailableNumbers();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  add(input: InputConfigDto): void {\r\n    input.id = UUID.UUID();\r\n    this.service.data.inputs.push(input);\r\n    this.service.update().subscribe(() => this.setAvailableNumbers());\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.service.data.inputs = this.service.data.inputs.filter((input) => input.id !== id);\r\n    this.service.update().subscribe(() => this.setAvailableNumbers());\r\n  }\r\n\r\n  checkIfNameUnique(value: InputConfigDto) {\r\n    return of(this.service.data.inputs.some((input) => input.name === value.name));\r\n  }\r\n\r\n  checkIfNumberUnique(value: InputConfigDto) {\r\n    return of(this.service.data.inputs.some((input) => input.number === value.number));\r\n  }\r\n\r\n  getById(id: string): InputConfigDto {\r\n    const input = this.service.data.inputs.find(input => input.id === id);\r\n    if (input) {\r\n      return input;\r\n    }\r\n    return {} as InputConfigDto;\r\n  }\r\n\r\n  getByNumber(number: number): InputConfigDto | undefined {\r\n    const input = this.service.data.inputs.find(input => input.number === number);\r\n    if (input) {\r\n      return input;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private setAvailableNumbers() {\r\n    let availableNumbers = [1, 2, 3, 4, 5, 6, 7, 8];\r\n    this.service.data.inputs.forEach((input) => {\r\n      availableNumbers = _.remove(availableNumbers, (n) => n !== input.number);\r\n    });\r\n    this.availableInputNumbers = availableNumbers;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, of, shareReplay} from 'rxjs';\nimport * as _ from 'lodash';\nimport {MailTemplateConfigDto} from '../../dto/mailTemplateConfig.class';\nimport {UUID} from \"angular2-uuid\";\nimport {AuthService} from \"../authentication/auth.service\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {ToastService} from \"../toast-service.service\";\nimport {SyncService} from \"../sync.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() +'/config/mailtemplates/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailTemplateService {\n  public data: MailTemplateConfigDto[] = [];\n  loaded = false;\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private syncService: SyncService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        } else {\n          this.unload();\n        }\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n    syncService.backendIsAvailableEvent.subscribe({\n      next: (backendServiceStatus: any) => {\n        if (!backendServiceStatus.running) {\n          this.unload();\n        } else {\n          this.load();\n        }\n      }\n    });\n  }\n\n  unload(): void {\n    this.data = [] as MailTemplateConfigDto[];\n    this.loaded = false;\n  }\n\n  load(): void {\n    if (this.authService.isAdmin()) {\n      let obs = this.http.get(AUTH_API);\n      obs.subscribe({\n        next: (data: any) => {\n          this.data = data;\n          this.loaded = true;\n        },\n        error: () => this.unload()\n      });\n    }\n  }\n\n  add(data: MailTemplateConfigDto): Observable<any> {\n    data.id = UUID.UUID();\n    this.data.push(data);\n    return this.save(this.data);\n  }\n\n  update(): Observable<any> {\n    return this.save(this.data);\n  }\n\n  remove(id: string): Observable<any> {\n    let clone = _.cloneDeep(this.data);\n    clone = clone.filter((data) => data.id !== id);\n    return this.save(clone);\n  }\n\n  checkIfNameUnique(value: MailTemplateConfigDto) {\n    return of(this.data.some((input) => input.name === value.name));\n  }\n\n  getById(id: string): MailTemplateConfigDto {\n    const mailTemplate = this.data.find(mailTemplate => mailTemplate.id === id);\n    if (mailTemplate) {\n      return mailTemplate;\n    }\n    return {} as MailTemplateConfigDto;\n  }\n\n  private save(data: MailTemplateConfigDto[]): Observable<any> {\n    let toSave = _.cloneDeep(data.map(d => d as MailTemplateConfigDto));\n    const obs = this.http.post(AUTH_API, toSave, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    obs.subscribe({\n      next: (data: any) => {\n        this.data = data;\n        this.toast.show(\"Mailtemplates saved\", { classname: 'bg-success text-white text-bold toast-font-size'});\n        this.syncService.emitConfigNeedsReload(['application']);\n      },\n      error: () => this.data = []\n    });\n    return obs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthService} from \"../authentication/auth.service\";\nimport {ToastService} from \"../toast-service.service\";\nimport {SyncService} from \"../sync.service\";\nimport {Observable, shareReplay} from \"rxjs\";\nimport {LocationUtils} from \"../../utils/locationUtils\";\nimport {FdcService} from \"../fdc.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/fdc/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaintenanceModeService {\n  data: any = { maintenanceEnd: 0 };\n  loaded = false;\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private syncService: SyncService, private fdcService: FdcService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        } else {\n          this.unload();\n        }\n      }\n    });\n    syncService.backendIsAvailableEvent.subscribe({\n      next: (backendServiceStatus: any) => {\n        if (!backendServiceStatus.running) {\n          this.unload();\n        } else {\n          this.load();\n        }\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n  }\n\n  unload(): void {\n    this.data = { maintenanceEnd: 0 };\n    this.loaded = false;\n  }\n\n  load(): void {\n    if (this.authService.isService()) {\n      this.loaded = false;\n      let obs = this.http.get(AUTH_API + 'maintenance');\n      obs.subscribe({\n        next: (data: any) => {\n          this.data = data;\n          this.loaded = true;\n        },\n        error: () => this.unload()\n      });\n    }\n  }\n\n  isMaintenanceActive(): boolean {\n    return this.data.maintenanceEnd !== undefined &&\n      this.data.maintenanceEnd !== null &&\n      this.data.maintenanceEnd > Math.trunc(new Date().getTime() / 1000);\n  }\n\n  setMaintenance(endTime: number): Observable<any> | undefined {\n    if (this.authService.isService()) {\n      let obs = this.http.post(AUTH_API + 'maintenance', { maintenanceEnd: endTime }, httpOptions)\n        .pipe(\n          shareReplay()\n        );\n      obs.subscribe({\n        next: () => {\n          this.fdcService.load();\n          this.data.maintenanceEnd = endTime;\n          this.toast.show(\"Maintenance was set successfully.\", {classname: 'bg-success text-white text-bold toast-font-size'});\n        },\n        error: () => {\n          this.toast.show(\"ERROR! Could not set maintenance!\", { classname: 'bg-danger text-white text-bold toast-font-size'});\n        }\n      });\n      return obs;\n    }\n    return undefined;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {of} from \"rxjs\";\nimport * as _ from \"lodash\";\nimport {OutputConfigDto} from \"../../dto/outputConfig.class\";\nimport {FdcService} from \"../fdc.service\";\nimport {UUID} from \"angular2-uuid\";\nimport {AuthService} from \"../authentication/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutputService {\n  public availableOutputNumbers = [] as number[];\n\n  constructor(public service: FdcService, private authService: AuthService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        }\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n  }\n\n  get outputs(): OutputConfigDto[] {\n    return this.service.data.outputs;\n  }\n\n  load(): void {\n    if (this.authService.isAdmin()) {\n      let obs = this.service.load();\n      if (obs) {\n        obs.subscribe({\n          next: () => {\n            this.setAvailableNumbers();\n          }\n        });\n      }\n    }\n  }\n\n  add(output: OutputConfigDto): void {\n    output.id = UUID.UUID();\n    this.service.data.outputs.push(output);\n    this.service.update().subscribe(() => this.setAvailableNumbers());\n  }\n\n  remove(id: string): void {\n    this.service.data.outputs = this.service.data.outputs.filter((output) => output.id !== id);\n    this.service.update().subscribe(() => this.setAvailableNumbers());\n  }\n\n  checkIfNameUnique(value: OutputConfigDto) {\n    return of(this.service.data.outputs.some((output) => output.name === value.name));\n  }\n\n  checkIfNumberUnique(value: OutputConfigDto) {\n    return of(this.service.data.outputs.some((output) => output.number === value.number));\n  }\n\n  getById(id: string): OutputConfigDto {\n    const output = this.service.data.outputs.find(output => output.id === id);\n    if (output) {\n      return output;\n    }\n    return {} as OutputConfigDto;\n  }\n\n  getByNumber(number: number): OutputConfigDto | undefined {\n    const output = this.service.data.outputs.find(output => output.number === number);\n    if (output) {\n      return output;\n    }\n    return undefined;\n  }\n\n  private setAvailableNumbers() {\n    let availableNumbers = [1, 2, 3, 4];\n    this.service.data.outputs.forEach((output) => {\n      availableNumbers = _.remove(availableNumbers, (n) => n !== output.number);\n    });\n    this.availableOutputNumbers = availableNumbers;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {DamperGroupService} from \"./damper-group.service\";\nimport {FdaService} from \"./fda.service\";\nimport {FdaConfigDto} from \"../../dto/fdaConfig.class\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidityCheckService {\n\n  constructor(private damperGroupService: DamperGroupService, private fdaService: FdaService) { }\n\n  damperGroupUsesId(id: string) {\n    return this.damperGroupService.getData().some(\n      (group: any) => Object.keys(group).some(\n        (key: string) => group[key] === id));\n  }\n\n  damperGroupUsedInFda(id: string) {\n    return this.fdaService.data.some(\n      (fda: FdaConfigDto) => {\n        return (fda.damper1.groups && fda.damper1.groups.includes(id)) || (fda.damper2.groups && fda.damper2.groups.includes(id));\n      }\n    )\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, shareReplay} from \"rxjs\";\nimport {FdcConfigDto} from \"../dto/fdcConfig.class\";\nimport * as _ from \"lodash\";\nimport {ObjectUtils} from \"../utils/objectUtils\";\nimport {AuthService} from \"./authentication/auth.service\";\nimport {LocationUtils} from \"../utils/locationUtils\";\nimport {ToastService} from \"./toast-service.service\";\nimport {SyncService} from \"./sync.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/fdc/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FdcService {\n  data = {} as FdcConfigDto\n  loaded = false;\n\n  private _fdcTimeDiff = 0;\n\n  public fdcTimeDiffChanged: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private syncService: SyncService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        } else {\n          this.unload();\n        }\n      },\n      error: (error: any) => {\n        console.log(error);\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n    this.updateFdcTimeDiff();\n    syncService.backendIsAvailableEvent.subscribe({\n      next: (backendServiceStatus: any) => {\n        if (!backendServiceStatus.running) {\n          this.unload();\n        } else {\n          this.updateFdcTimeDiff();\n          this.load();\n        }\n      }\n    });\n  }\n\n  get fdcTimeDiff(): number {\n    return this._fdcTimeDiff;\n  }\n\n  unload(): void {\n    this.data = {} as FdcConfigDto;\n    this.loaded = false;\n  }\n\n  load(): Observable<any> | undefined {\n    if (this.authService.isAdmin()) {\n      this.loaded = false;\n      let obs = this.http.get(AUTH_API)\n        .pipe(\n          shareReplay()\n        );\n      obs.subscribe({\n        next: (data: any) => {\n          data.inputs = this.orderByNumber(data.inputs);\n          data.outputs = this.orderByNumber(data.outputs);\n          this.data = data;\n          this.loaded = true;\n        },\n        error: () => this.unload()\n      });\n      return obs;\n    } else {\n      return undefined;\n    }\n  }\n\n  orderByNumber(data: any[]): any[] {\n    if (data) {\n      return data.sort((a: any, b: any) => a.number - b.number);\n    }\n    return [];\n  }\n\n  update(): Observable<any> {\n    return this.save(this.data);\n  }\n\n  updateWithoutServiceNotification(): Observable<any> {\n    return this._save(this.data, false);\n  }\n\n  updateFdcTimeDiff() {\n    this.getFdcTime();\n    setTimeout(() => this.getFdcTime(), 5000);\n  }\n\n  getFdcTime(): Observable<any> {\n    let obs = this.http.get(AUTH_API + '/time')\n      .pipe(\n        shareReplay()\n      );\n    obs.subscribe({\n      next: (data: any) => {\n        let timeDiff = new Date().getTime() - data.milliseconds;\n        if (timeDiff !== this._fdcTimeDiff) {\n          this._fdcTimeDiff = timeDiff;\n          this.authService.fdcTimeDiff = this._fdcTimeDiff\n          this.fdcTimeDiffChanged.emit({milliseconds: timeDiff});\n        }\n      }\n    })\n    return obs;\n  }\n\n  isMaintenanceActive(): boolean {\n    return this.data.maintenanceEnd !== undefined &&\n      this.data.maintenanceEnd !== null &&\n      this.data.maintenanceEnd > Math.trunc(new Date().getTime() / 1000);\n  }\n\n  private save(data: FdcConfigDto): Observable<any> {\n    return this._save(data, true);\n  }\n\n  private _save(data: FdcConfigDto, notifyServices: boolean): Observable<any> {\n    this.loaded = false;\n    let toSave = _.cloneDeep(data) as FdcConfigDto;\n    let converted = ObjectUtils.convertBooleansToNumbers(toSave);\n    const obs = this.http.post(AUTH_API, converted, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    obs.subscribe({\n      next: (data: any) => {\n        this.data = data;\n        this.loaded = true;\n        this.toast.show(\"FDC config saved\", {classname: 'bg-success text-white text-bold toast-font-size'});\n        if (notifyServices) {\n          this.syncService.emitConfigNeedsReload(['application']);\n        }\n      },\n      error: () => {\n        this.unload();\n        this.toast.show(\"ERROR! Data could not be saved\", { classname: 'bg-danger text-white text-bold toast-font-size'});\n      }\n    });\n    return obs;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./authentication/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {LocationUtils} from \"../utils/locationUtils\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/auth/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n  pingOnItsWay = false;\n  pingCounter = 0;\n\n  constructor(private authService: AuthService, private router: Router, private http: HttpClient) {\n    this.checkForLogout();\n\n    document.body.addEventListener('click', () => {\n      if (this.authService.isLoggedIn()) {\n        this.sendPing();\n      }\n    });\n  }\n\n  private checkForLogout() {\n    if (this.authService.isTimedOut() && this.router.url !== '/login') {\n      this.authService.signOut();\n      console.log('Automatically signed out!')\n      this.router.navigateByUrl('login');\n    }\n    setTimeout(() => this.checkForLogout(), 1000);\n  }\n\n  private sendPing() {\n    if (!this.pingOnItsWay) {\n      this.pingOnItsWay = true;\n      console.log('Initiate ping');\n      setTimeout(() => {\n        this.http.get(AUTH_API + 'ping').subscribe({\n          next: () => {\n            this.pingOnItsWay = false;\n            this.pingCounter = 0;\n          },\n          error: () => {\n            this.pingOnItsWay = false;\n            ++this.pingCounter;\n            if (this.pingCounter > 2) {\n              this.authService.signOutAndShowLogin();\n            }\n          }\n        })\n      }, 10000);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable, shareReplay} from \"rxjs\";\nimport * as _ from \"lodash\";\nimport {MailerConfigDto} from \"../dto/mailerConfig.class\";\nimport {AuthService} from \"./authentication/auth.service\";\nimport {LocationUtils} from \"../utils/locationUtils\";\nimport {ToastService} from \"./toast-service.service\";\nimport {SyncService} from \"./sync.service\";\n\nconst AUTH_API = LocationUtils.backendHostUrl() + '/config/mailer/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailerService {\n  data = {} as MailerConfigDto;\n  loaded = false;\n\n  constructor(private http: HttpClient, private authService: AuthService, private toast: ToastService,\n              private syncService: SyncService) {\n    authService.authenticationChange.subscribe({\n      next: (data: any) => {\n        if (data.loggedIn) {\n          this.load();\n        } else {\n          this.unload();\n        }\n      }\n    });\n    if (authService.isLoggedIn()) {\n      this.load();\n    }\n    syncService.backendIsAvailableEvent.subscribe({\n      next: (backendServiceStatus: any) => {\n        if (!backendServiceStatus.running) {\n          this.unload();\n        } else {\n          this.load();\n        }\n      }\n    });\n  }\n\n  unload(): void {\n    this.data = {} as MailerConfigDto;\n    this.loaded = false;\n  }\n\n  load(): void {\n    if (this.authService.isAdmin()) {\n      this.loaded = false;\n      let obs = this.http.get(AUTH_API);\n      obs.subscribe({\n        next: (data: any) => {\n          this.data = data;\n          this.loaded = true;\n        },\n        error: () => {\n          this.data = {} as MailerConfigDto;\n          this.loaded = false;\n        }\n      });\n    }\n  }\n\n  update(): void {\n    this.save(this.data);\n  }\n\n  private save(data: MailerConfigDto): Observable<any> {\n    this.loaded = false;\n    let toSave = _.cloneDeep(data) as MailerConfigDto;\n    const obs = this.http.post(AUTH_API, toSave, httpOptions)\n      .pipe(\n        shareReplay()\n      );\n    obs.subscribe({\n      next: (data: any) => {\n        this.data = data;\n        this.loaded = true;\n        this.toast.show(\"Mailer config saved\", { classname: 'bg-success text-white text-bold toast-font-size'});\n        this.syncService.emitConfigNeedsReload(['mailer']);\n      },\n      error: () => this.unload()\n    });\n    return obs;\n  }\n}\n","import {EventEmitter, Injectable, OnInit} from '@angular/core';\nimport {Socket} from 'ngx-socket-io';\nimport {Observable, shareReplay, Subscription} from 'rxjs';\nimport {FdcService} from \"./fdc.service\";\nimport {AuthService} from \"./authentication/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketConnectionService implements OnInit {\n  _lastReceivedDeviceStatus: [] | undefined;\n  _lastReceivedDeviceStatusTime = 0;\n  _deviceStatusRequestPendingSince: number | undefined;\n  _lastReceivedGroupStatus: [] | undefined;\n  _lastReceivedGroupStatusTime = 0;\n  _groupStatusRequestPendingSince: number | undefined;\n\n  deviceSubscription: Subscription | undefined;\n  groupSubscription: Subscription | undefined;\n\n  pingSentOn = 0;\n  applicationPongReceivedOn = -1;\n  mailerPongReceivedOn = -1;\n  guibackendPongReceivedOn = -1;\n\n  applicationPongSubscription: Subscription | undefined;\n  mailerPongSubscription: Subscription | undefined;\n  guibackendPongSubscription: Subscription | undefined;\n\n  applicationServiceStatus: EventEmitter<any> = new EventEmitter<any>();\n  mailerServiceStatus: EventEmitter<any> = new EventEmitter<any>();\n  guibackendServiceStatus: EventEmitter<any> = new EventEmitter<any>();\n  connectedToNodeBackend: boolean | undefined = undefined;\n\n  socketIoConnected = false;\n\n  requestInterval = 1000;\n  maxPendingTime = 20000;\n\n  applicationStartupMaxTime: number;\n\n  constructor(private socket: Socket, private fdcService: FdcService, private auth: AuthService) {\n    this.applicationStartupMaxTime = new Date().getTime() + 15000;\n    socket.on('disconnect', (reason: any) => {\n      console.log('Socket.IO - disconnect', reason);\n    });\n    socket.on('connect', () => {\n      fdcService.getFdcTime();\n      console.log('Socket.IO - connected');\n    })\n    this.checkConnection();\n\n    this.receiveApplicationPong();\n    this.receiveMailerPong();\n    this.receiveGuibackendPong();\n  }\n\n  ngOnInit(): void {\n  }\n\n  get connectedToBackend(): boolean {\n    return this.connectedToNodeBackend === true;\n  }\n\n  get lastReceivedDeviceStatus(): [] | undefined {\n    return this._lastReceivedDeviceStatus;\n  }\n\n  get lastReceivedGroupStatus(): [] | undefined {\n    return this._lastReceivedGroupStatus;\n  }\n\n  receiveDeviceStatus(): Observable<any> {\n    let obs = this.socket.fromEvent('devices/state')\n      .pipe(\n        shareReplay()\n      );\n    if (!this.deviceSubscription) {\n      this.deviceSubscription = obs.subscribe({\n        next: (data: any) => {\n          this._lastReceivedDeviceStatusTime = new Date().getTime();\n          this._lastReceivedDeviceStatus = JSON.parse(data);\n          this._deviceStatusRequestPendingSince = undefined;\n        }\n      });\n    }\n    return obs;\n  }\n\n  receiveGroupsStatus(): Observable<any> {\n    let obs = this.socket.fromEvent('groups/state')\n      .pipe(\n        shareReplay()\n      );\n    if (!this.groupSubscription) {\n      this.groupSubscription = obs.subscribe({\n        next: (data: any) => {\n          this._lastReceivedGroupStatusTime = new Date().getTime();\n          this._lastReceivedGroupStatus = JSON.parse(data);\n          this._groupStatusRequestPendingSince = undefined;\n        }\n      });\n    }\n    return obs;\n  }\n\n  requestStatus(): void {\n    if (this.socket.ioSocket && this.socket.ioSocket.connected) {\n      this.requestDeviceStatus();\n      this.requestGroupStatus();\n    } else {\n      console.log('No socket.io connection...');\n    }\n  }\n\n  requestServicesStatus(): void {\n    if (this.socket.ioSocket && this.socket.ioSocket.connected) {\n      this.pingSentOn = new Date().getTime();\n      this.socket.emit('services/application/heartbeat/ping');\n      this.socket.emit('services/mailer/heartbeat/ping');\n      this.socket.emit('services/guibackend/heartbeat/ping');\n      setTimeout(() => {\n        const stillInAppStartupTimeslot = this.applicationStartupMaxTime > new Date().getTime();\n        this.applicationServiceStatus.emit({running: (this.applicationPongReceivedOn === -1 && stillInAppStartupTimeslot) ? undefined : ((this.applicationPongReceivedOn + 3000) > this.pingSentOn)});\n        this.mailerServiceStatus.emit({running: (this.mailerPongReceivedOn === -1 && stillInAppStartupTimeslot) ? undefined : ((this.mailerPongReceivedOn + 3000) > this.pingSentOn)});\n        this.connectedToNodeBackend = (this.guibackendPongReceivedOn === -1 && stillInAppStartupTimeslot) ? undefined : ((this.guibackendPongReceivedOn + 3000) > this.pingSentOn);\n        this.guibackendServiceStatus.emit({running: this.connectedToNodeBackend});\n      }, 500);\n    } else {\n      const stillInAppStartupTimeslot = this.applicationStartupMaxTime > new Date().getTime();\n      this.applicationServiceStatus.emit({running: undefined});\n      this.mailerServiceStatus.emit({running: undefined});\n      this.connectedToNodeBackend = stillInAppStartupTimeslot ? undefined : false;\n      this.guibackendServiceStatus.emit({running: this.connectedToNodeBackend});\n    }\n  }\n\n  requestConfigReload(subTopics: string[]): void {\n    subTopics.forEach((st: string) => this.socket.emit('services/' + st + '/config/changed',\n      {username: this.auth.getUser().username}));\n  }\n\n  setDamperMode(damperInfo: any): void {\n    this.socket.emit('device/damper/mode/change', damperInfo);\n  }\n\n  setFdcTime(timeInfo: any): void {\n    this.socket.emit('system/time/set', timeInfo);\n    setTimeout(() => {\n      this.fdcService.getFdcTime();\n    }, 2000);\n  }\n\n  emitMaintenanceMode(endTime: number): void {\n    this.socket.emit('services/application/maintenance/request',\n      {end: endTime, username: this.auth.getUser().username});\n  }\n\n  repairDevices(): void {\n    this.socket.emit('devices/repair/request',\n      {username: this.auth.getUser().username});\n  }\n\n  private checkConnection(): void {\n    this.socketIoConnected = this.socket.ioSocket && this.socket.ioSocket.connected;\n    setTimeout(() => this.checkConnection(), 250);\n  }\n\n  private receiveApplicationPong(): Observable<any> {\n    let obs = this.socket.fromEvent('services/application/heartbeat/pong')\n      .pipe(\n        shareReplay()\n      );\n    if (!this.applicationPongSubscription) {\n      this.applicationPongSubscription = obs.subscribe({\n        next: () => this.applicationPongReceivedOn = new Date().getTime()\n      });\n    }\n    return obs;\n  }\n\n  private receiveMailerPong(): Observable<any> {\n    let obs = this.socket.fromEvent('services/mailer/heartbeat/pong')\n      .pipe(\n        shareReplay()\n      );\n    if (!this.mailerPongSubscription) {\n      this.mailerPongSubscription = obs.subscribe({\n        next: () => this.mailerPongReceivedOn = new Date().getTime()\n      });\n    }\n    return obs;\n  }\n\n  private receiveGuibackendPong(): Observable<any> {\n    let obs = this.socket.fromEvent('services/guibackend/heartbeat/pong')\n      .pipe(\n        shareReplay()\n      );\n    if (!this.guibackendPongSubscription) {\n      this.guibackendPongSubscription = obs.subscribe({\n        next: () => this.guibackendPongReceivedOn = new Date().getTime()\n      });\n    }\n    return obs;\n  }\n\n  private requestDeviceStatus(): void {\n    let now = new Date().getTime();\n    if (this._lastReceivedDeviceStatusTime < (now - this.requestInterval)) {\n      if (!this._deviceStatusRequestPendingSince || this._deviceStatusRequestPendingSince < (now - this.maxPendingTime)) {\n        this.socket.emit('devices/state/request');\n        this._deviceStatusRequestPendingSince = new Date().getTime();\n      } else {\n        console.log('DeviceStatus request pending since' + ((now - this._deviceStatusRequestPendingSince) / 1000) + ' seconds');\n      }\n    }\n  }\n\n  private requestGroupStatus(): void {\n    let now = new Date().getTime();\n    if (this._lastReceivedGroupStatusTime < (now - this.requestInterval)) {\n      if (!this._groupStatusRequestPendingSince || this._groupStatusRequestPendingSince < (now - this.maxPendingTime)) {\n        this.socket.emit('groups/state/request');\n        this._groupStatusRequestPendingSince = new Date().getTime();\n      } else {\n        console.log('GroupStatus request pending since ' + ((now - this._groupStatusRequestPendingSince) / 1000) + ' seconds');\n      }\n    }\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SyncService {\n  private _configNeedsReloadEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _applicationIsAvailableEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _mailerIsAvailableEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _backendIsAvailableEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  emitConfigNeedsReload(subTopic: string[]) {\n    this._configNeedsReloadEvent.emit(subTopic);\n  }\n\n  emitApplicationIsAvailable(status: boolean) {\n    this._applicationIsAvailableEvent.emit({running: status});\n  }\n\n  emitMailerIsAvailable(status: boolean) {\n    this._mailerIsAvailableEvent.emit({running: status});\n  }\n\n  emitBackendIsAvailable(status: boolean) {\n    this._backendIsAvailableEvent.emit({running: status});\n  }\n\n  get configNeedsReloadEvent(): EventEmitter<any> {\n    return this._configNeedsReloadEvent;\n  }\n\n  get applicationIsAvailableEvent(): EventEmitter<any> {\n    return this._applicationIsAvailableEvent;\n  }\n\n  get mailerIsAvailableEvent(): EventEmitter<any> {\n    return this._mailerIsAvailableEvent;\n  }\n\n  get backendIsAvailableEvent(): EventEmitter<any> {\n    return this._backendIsAvailableEvent;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {FdcStatusDto} from \"../dto/fdcStatusDto\";\r\nimport {InputStatusDto} from \"../dto/inputStatusDto\";\r\nimport {OutputStatusDto} from \"../dto/outputStatusDto\";\r\nimport {DamperStatusDto} from \"../dto/damperStatusDto\";\r\nimport {DamperGroupStatusDto} from \"../dto/damperGroupStatusDto\";\r\nimport {DamperConfigDto} from \"../dto/damperConfig.class\";\r\nimport {SocketConnectionService} from \"./socket-connection.service\";\r\nimport {FdcService} from \"./fdc.service\";\r\nimport {FdaService} from \"./dto-services/fda.service\";\r\nimport {InputService} from \"./dto-services/input.service\";\r\nimport {OutputService} from \"./dto-services/output.service\";\r\nimport {SystemStatusDto} from \"../dto/systemStatusDto\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {SyncService} from \"./sync.service\";\r\nimport {FdaConfigDto} from \"../dto/fdaConfig.class\";\r\nimport {GroupIOStatus} from \"../dto/groupIOStatus\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SystemHealthService {\r\n  fdcTimeDiff = 0;\r\n  applicationServiceStatus: boolean | undefined = undefined;\r\n  applicationServiceStatusChanged = 0;\r\n  mailerServiceStatus: boolean | undefined = undefined;\r\n  mailerServiceStatusChanged = 0;\r\n  guibackendServiceStatus: boolean | undefined = undefined;\r\n  guibackendServiceStatusChanged = 0;\r\n  allServicesRunning = false;\r\n\r\n  status: SystemStatusDto = {\r\n    fdas: {\r\n      inStatusConfigured: [],\r\n      inStatusUnconfigured: [],\r\n      configuredNotInStatus: []\r\n    },\r\n    inputs: [],\r\n    outputs: [],\r\n    damperGroups: [],\r\n    busMode: undefined\r\n  };\r\n\r\n  private deviceStatusSubscription: Subscription | undefined = undefined\r\n  private groupStatusSubscription: Subscription | undefined = undefined\r\n\r\n  private _activeAlarms = 0;\r\n  private _activeTimeouts = 0;\r\n\r\n  constructor(public socketIo: SocketConnectionService, public fdcService: FdcService, private fdaService:FdaService,\r\n              private socketService: SocketConnectionService, private inputService: InputService,\r\n              private outputService: OutputService, private syncService: SyncService) {\r\n    this.processDeviceStatus(this.socketService.lastReceivedDeviceStatus);\r\n    this.processGroupStatus(this.socketService.lastReceivedGroupStatus);\r\n    this.onReceiveDeviceStatus();\r\n    this.onReceiveGroupsStatus();\r\n    syncService.backendIsAvailableEvent.subscribe({\r\n      next: (backendStatus: any) => {\r\n        if (!backendStatus.running) {\r\n          this.status = {\r\n            fdas: {\r\n              inStatusConfigured: [],\r\n              inStatusUnconfigured: [],\r\n              configuredNotInStatus: []\r\n            },\r\n            inputs: [],\r\n            outputs: [],\r\n            damperGroups: [],\r\n            busMode: undefined\r\n          };\r\n        }\r\n      }\r\n    });\r\n    // from component\r\n\r\n    fdcService.fdcTimeDiffChanged.subscribe({\r\n      next: (data: any) => {\r\n        this.fdcTimeDiff = data.milliseconds;\r\n      }\r\n    });\r\n    socketIo.applicationServiceStatus.subscribe({\r\n      next: (data: any) => {\r\n        let statusChanged = this.applicationServiceStatus != data.running\r\n        if (!data.running && statusChanged && (this.applicationServiceStatusChanged < 3)) {\r\n          ++this.applicationServiceStatusChanged;\r\n        } else if (data.running || (statusChanged && (this.applicationServiceStatusChanged >= 3))) {\r\n          this.applicationServiceStatus = data.running;\r\n          this.applicationServiceStatusChanged = 0;\r\n          if (statusChanged) {\r\n            this.syncService.emitApplicationIsAvailable(data.running);\r\n          }\r\n        }\r\n        this.allServicesRunning = this.applicationServiceStatus === true &&\r\n          this.mailerServiceStatus === true && this.guibackendServiceStatus === true;\r\n      }\r\n    });\r\n    socketIo.mailerServiceStatus.subscribe({\r\n      next: (data: any) => {\r\n        let statusChanged = this.mailerServiceStatus != data.running\r\n        if (!data.running && statusChanged && (this.mailerServiceStatusChanged < 3)) {\r\n          ++this.mailerServiceStatusChanged;\r\n        } else if (data.running || (statusChanged && (this.mailerServiceStatusChanged >= 3))) {\r\n          this.mailerServiceStatus = data.running;\r\n          this.mailerServiceStatusChanged = 0;\r\n          if (statusChanged) {\r\n            this.syncService.emitMailerIsAvailable(data.running);\r\n          }\r\n        }\r\n        this.allServicesRunning = this.applicationServiceStatus === true &&\r\n          this.mailerServiceStatus === true && this.guibackendServiceStatus === true;\r\n      }\r\n    });\r\n    socketIo.guibackendServiceStatus.subscribe({\r\n      next: (data: any) => {\r\n        let statusChanged = this.guibackendServiceStatus !== data.running\r\n        if (!data.running && statusChanged && (this.guibackendServiceStatusChanged < 3)) {\r\n          ++this.guibackendServiceStatusChanged;\r\n        } else if (data.running || (statusChanged && (this.guibackendServiceStatusChanged >= 3))) {\r\n          this.guibackendServiceStatus = data.running;\r\n          this.guibackendServiceStatusChanged = 0;\r\n          if (statusChanged) {\r\n            this.syncService.emitBackendIsAvailable(data.running);\r\n          }\r\n        }\r\n        this.allServicesRunning = this.applicationServiceStatus === true &&\r\n          this.mailerServiceStatus === true && this.guibackendServiceStatus === true;\r\n      }\r\n    });\r\n  }\r\n\r\n  processLastDeviceStatus(): void {\r\n    this.processDeviceStatus(this.socketService.lastReceivedDeviceStatus);\r\n  }\r\n\r\n  processLastGroupStatus(): void {\r\n    this.processGroupStatus(this.socketService.lastReceivedGroupStatus);\r\n  }\r\n\r\n  get activeAlarms(): number {\r\n    return this._activeAlarms;\r\n  }\r\n\r\n  get activeTimeouts(): number {\r\n    return this._activeTimeouts;\r\n  }\r\n\r\n  private onReceiveDeviceStatus(): void {\r\n    if (!this.deviceStatusSubscription) {\r\n      this.deviceStatusSubscription = this.socketService.receiveDeviceStatus().subscribe({\r\n        next: (data) => {\r\n          this.processDeviceStatus(JSON.parse(data));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private onReceiveGroupsStatus(): void {\r\n    if (!this.groupStatusSubscription) {\r\n      this.groupStatusSubscription = this.socketService.receiveGroupsStatus().subscribe({\r\n        next: (data) => {\r\n          this.processGroupStatus(JSON.parse(data));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private processDeviceStatus(data: [] | undefined): void {\r\n    if (data) {\r\n      this.processFdaStatus(data);\r\n      this.processFdcStatus(data);\r\n    }\r\n  }\r\n\r\n  private processFdcStatus(dataArr: []): void {\r\n    let fdc = dataArr.find((device: any) => device.type === 'Fdc') as FdcStatusDto | undefined;\r\n    if (fdc) {\r\n      const configuredInputs = this.inputService.inputs;\r\n      if (configuredInputs) {\r\n        let inputs = configuredInputs.map((input) => {\r\n          return {\r\n            status: fdc?.inputs[input.number.toString()],\r\n            number: input.number,\r\n            inputConfigRef: this.inputService.getByNumber(input.number)\r\n          } as InputStatusDto;\r\n        });\r\n        inputs = inputs.filter(i => i.inputConfigRef !== undefined) as InputStatusDto[];\r\n        for (let index = this.status.inputs.length - 1; index >= 0; --index) {\r\n          const oldInput = this.status.inputs[index];\r\n          const newInput = inputs.find(input => input.number === oldInput.number);\r\n          if (newInput) {\r\n            Object.assign(oldInput, newInput);\r\n          } else {\r\n            this.status.inputs.slice(index);\r\n          }\r\n        }\r\n        inputs.filter(input => this.status.inputs.find(i => i.number === input.number) === undefined).forEach(input =>\r\n          this.status.inputs.push(input)\r\n        );\r\n        this.status.inputs.sort((a, b) => a.number - b.number);\r\n      } else {\r\n        this.status.inputs = [];\r\n      }\r\n\r\n      const configuredOutputs = this.outputService.outputs;\r\n      if (configuredOutputs) {\r\n        let outputs = configuredOutputs.map((output) => {\r\n          return {\r\n            status: fdc?.outputs[output.number.toString()],\r\n            number: output.number,\r\n            outputConfigRef: this.outputService.getByNumber(output.number)\r\n          } as OutputStatusDto;\r\n        });\r\n        outputs = outputs.filter(o => o.outputConfigRef !== undefined);\r\n\r\n        for (let index = this.status.outputs.length - 1; index >= 0; --index) {\r\n          const oldOutput = this.status.outputs[index];\r\n          const newOutput = outputs.find(output => output.number === oldOutput.number);\r\n          if (newOutput) {\r\n            Object.assign(oldOutput, newOutput);\r\n          } else {\r\n            this.status.outputs.slice(index);\r\n          }\r\n        }\r\n        outputs.filter(output => this.status.outputs.find(o => o.number === output.number) === undefined).forEach(output =>\r\n          this.status.outputs.push(output)\r\n        );\r\n        this.status.outputs.sort((a, b) => a.number - b.number);\r\n      } else {\r\n        this.status.outputs = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  private processFdaStatus(dataArr: []): void {\r\n    /* get Fdas from status reply */\r\n    let fdasCurrentStatus = dataArr.filter((device: any) => device.type === 'Fda2') as FdaConfigDto[];\r\n    fdasCurrentStatus.forEach((fda) => fda.fdaConfigRef = this.fdaService.getFdaConfigByPhysicalAddress(fda.physicalAddress));\r\n\r\n    let foundPhysicalAdresses = fdasCurrentStatus.map(fda => fda.physicalAddress);\r\n    let configuredAndFoundFdas = fdasCurrentStatus.filter(fda => fda.fdaConfigRef !== undefined);\r\n    let configuredButNotFoundFdas = this.fdaService.data.filter(fda => !foundPhysicalAdresses.includes(fda.physicalAddress));\r\n    let unconfiguredFdas = fdasCurrentStatus.filter(fda => fda.fdaConfigRef === undefined);\r\n    let hasBusMode: any = dataArr.find((obj: any) => obj.busMode !== undefined);\r\n    if (hasBusMode) {\r\n      this.status.busMode = hasBusMode.busMode;\r\n    }\r\n\r\n    this.updateFdaStatuses(this.status.fdas.inStatusConfigured, configuredAndFoundFdas);\r\n    this.updateFdaStatuses(this.status.fdas.inStatusUnconfigured, unconfiguredFdas);\r\n    this.updateFdaStatuses(this.status.fdas.configuredNotInStatus, configuredButNotFoundFdas);\r\n  }\r\n\r\n  private updateFdaStatuses(oldArr: any[], newArr: any[]): void {\r\n    let oldPAs = oldArr.map(f => f.physicalAddress);\r\n    let newPAs = newArr.map(f => f.physicalAddress);\r\n\r\n    for (let index = oldArr.length - 1; index >= 0; --index) {\r\n      if (newPAs.includes(oldArr[index].physicalAddress)) {\r\n        this.updateFdaStatus(oldArr[index], newArr.find(newF => newF.physicalAddress === oldArr[index].physicalAddress) as FdaConfigDto);\r\n      } else {\r\n        oldArr.splice(index, 1);\r\n      }\r\n    }\r\n    oldArr.push(...newArr.filter(newF => !oldPAs.includes(newF.physicalAddress)));\r\n    this.status.fdas.inStatusUnconfigured.sort((a, b) => a.dynamicalAddress - b.dynamicalAddress);\r\n    this.status.fdas.configuredNotInStatus.sort((a, b) => a.physicalAddress - b.physicalAddress);\r\n    this.status.fdas.inStatusConfigured.sort((a, b) => a.dynamicalAddress - b.dynamicalAddress);\r\n  }\r\n\r\n  private processGroupStatus(data: [] | undefined): void {\r\n    try {\r\n      if (data) {\r\n        let dampers = this.fdaService.data.flatMap(fda => [fda.damper1, fda.damper2])\r\n        let damperGroupsParsed = data\r\n          .filter((dataGroup: any) => dataGroup.type === 'DamperGroup')\r\n          .map((dataGroup: any) => {\r\n            return {\r\n              id: dataGroup.id,\r\n              name: dataGroup.name as string,\r\n              currentAlarmState: dataGroup.currentAlarmState,\r\n              currentTimeoutState: dataGroup.currentTimeoutState,\r\n              mainDamperCount: this.fdaService.data\r\n                .flatMap(fda => [fda.damper1, fda.damper2])\r\n                .filter(damper => (damper.groups && damper.groups.includes(dataGroup.id)) && damper.damperType === 'MAIN')\r\n                .length,\r\n              auxiliaryDamperCount: this.fdaService.data\r\n                .flatMap(fda => [fda.damper1, fda.damper2])\r\n                .filter(damper => (damper.groups && damper.groups.includes(dataGroup.id)) && damper.damperType !== 'MAIN')\r\n                .length,\r\n              //dampersAvailable: dataGroup.units ? dataGroup.units.filter((d: any) => d.type === 'Damper' && d.disabled === 0).map(\r\n              dampersAvailable: dataGroup.units ? dataGroup.units.filter((d: any) => d.type === 'Damper' && d.damperMode !== 'Disabled').map(\r\n                (d: DamperConfigDto) => {\r\n                  d.currentStates = d.currentState.split('|').filter((st: string) => st !== 'Available' && st != '');\r\n                  d.configReference = dampers.find(configuredDamper => configuredDamper.id === d.id);\r\n                  d.stateCorrelates = SystemHealthService.damperStateCorrelatesConfig(dataGroup, d, d.configReference);\r\n                  return d;\r\n                },\r\n              ) as DamperConfigDto[] : [],\r\n              //dampersDisabled: dataGroup.units ? dataGroup.units.filter((d: any) => d.type === 'Damper' && d.disabled === 1).map(\r\n              dampersDisabled: dataGroup.units ? dataGroup.units.filter((d: any) => d.type === 'Damper' && d.damperMode === 'Disabled').map(\r\n                (d: DamperConfigDto) => {\r\n                  d.currentStates = d.currentState.split('|').filter((st: string) => st !== 'Available' && st != '');\r\n                  d.configReference = dampers.find(configuredDamper => configuredDamper.id === d.id);\r\n                  d.stateCorrelates = SystemHealthService.damperStateCorrelatesConfig(dataGroup, d, d.configReference);\r\n                  return d;\r\n                }\r\n              ) as DamperConfigDto[] : [],\r\n              bmaAlarm: dataGroup.bmaAlarm,\r\n              ventilationRequest: dataGroup.ventilationRequest,\r\n              ventilationAllowed: dataGroup.ventilationAllowed\r\n            } as DamperGroupStatusDto;\r\n          }) as DamperGroupStatusDto[];\r\n        // update already shown damper groups\r\n        damperGroupsParsed.forEach(newDg => {\r\n          let currentDamperGroup = this.status.damperGroups.find(oldDg => oldDg.id === newDg.id);\r\n          if (currentDamperGroup) {\r\n            currentDamperGroup.currentAlarmState = newDg.currentAlarmState;\r\n            currentDamperGroup.currentTimeoutState = newDg.currentTimeoutState;\r\n            Object.assign(currentDamperGroup.bmaAlarm, newDg.bmaAlarm);\r\n            Object.assign(currentDamperGroup.ventilationAllowed, newDg.ventilationAllowed);\r\n            Object.assign(currentDamperGroup.ventilationRequest, newDg.ventilationRequest);\r\n            currentDamperGroup.name = newDg.name;\r\n            currentDamperGroup.auxiliaryDamperCount = newDg.auxiliaryDamperCount;\r\n            currentDamperGroup.mainDamperCount = newDg.mainDamperCount;\r\n            currentDamperGroup.type = newDg.type;\r\n            this.updateDamperList(currentDamperGroup.dampersAvailable, newDg.dampersAvailable);\r\n            this.updateDamperList(currentDamperGroup.dampersDisabled, newDg.dampersDisabled);\r\n          }\r\n        });\r\n        // push new damper groups\r\n        this.status.damperGroups.push(...damperGroupsParsed.filter(newDg => !this.status.damperGroups.some(oldDg => oldDg.id === newDg.id)));\r\n        // delete no longer present damper groups\r\n        const newGroupIds = damperGroupsParsed.map(dg => dg.id);\r\n        for (let i = this.status.damperGroups.length - 1; i >= 0; --i) {\r\n          if (!newGroupIds.includes(this.status.damperGroups[i].id)) {\r\n            this.status.damperGroups.splice(i, 1);\r\n          }\r\n        }\r\n\r\n        // sort dampers\r\n        this.status.damperGroups.forEach(dg => {\r\n          SystemHealthService.sortDampers(dg.dampersAvailable);\r\n          SystemHealthService.sortDampers(dg.dampersDisabled);\r\n        });\r\n\r\n        let alarmCount = 0;\r\n        let timeoutCount = 0;\r\n        damperGroupsParsed.forEach((group: DamperGroupStatusDto) => {\r\n          if (this.getIsHighOr(group.bmaAlarm) || group.currentAlarmState === 1) {\r\n            ++alarmCount;\r\n          } else if (group.currentTimeoutState) {\r\n            ++timeoutCount;\r\n          }\r\n        });\r\n        this._activeAlarms = alarmCount;\r\n        this._activeTimeouts = timeoutCount;\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  getIsHighOr(values: GroupIOStatus[]) {\r\n    return values.filter(value => value.currentState === 'High').length > 0;\r\n  }\r\n\r\n  private static sortDampers(dampers: DamperConfigDto[]) {\r\n    dampers.sort((a, b) => {\r\n      const sameType = a.damperType === b.damperType;\r\n      const main = sameType ? 0 : (a.damperType === 'Main' ? -1000 : 1000);\r\n      const physAddrNumberComparison = (a.physicalAddress + '-' + a.number).localeCompare(b.physicalAddress + '-' + b.number);\r\n      return main + physAddrNumberComparison;\r\n    });\r\n  }\r\n\r\n  private updateDamperList(oldList: DamperStatusDto[], newList: DamperStatusDto[]) {\r\n    let oldIds = oldList.map(damper => damper.id);\r\n    let newIds = newList.map(damper => damper.id);\r\n    let deletedIds = oldIds.filter(oldId => !newIds.includes(oldId));\r\n    let updatedIds = oldIds.filter(updatedId => newIds.includes(updatedId));\r\n    let addedIds = newIds.filter(newId => !oldIds.includes(newId));\r\n    // delete dampers\r\n    for (let i = oldList.length - 1; i >= 0; --i) {\r\n      if (deletedIds.includes(oldList[i].id)) {\r\n        oldList.splice(i, 1);\r\n      }\r\n    }\r\n    // update dampers\r\n    for (let i = oldList.length - 1; i >= 0; --i) {\r\n      if (updatedIds.includes(oldList[i].id)) {\r\n        const updatedDamper = newList.find(damper => damper.id === oldList[i].id);\r\n        if (updatedDamper) {\r\n          Object.assign(oldList[i], updatedDamper);\r\n        }\r\n      }\r\n    }\r\n    addedIds.forEach(id => {\r\n      const newDamper = newList.find(damper => damper.id === id);\r\n      if (newDamper) {\r\n        oldList.push(newDamper);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static damperStateCorrelatesConfig(groupState: DamperGroupStatusDto, state: DamperConfigDto, config: DamperConfigDto | undefined) {\r\n    if (!config) {\r\n      return false;\r\n    }\r\n\r\n    let should;\r\n    if (groupState.currentAlarmState === 0) {\r\n      should = config.relayStateNormal === 0 ? 'Closed' : 'Opened';\r\n    } else {\r\n      should = config.relayStateAlarm === 0 ? 'Closed': 'Opened';\r\n    }\r\n    return !state.currentState.includes('Alarm') &&\r\n      !state.currentState.includes('Timeout') &&\r\n      state.currentState.includes(should);\r\n  }\r\n\r\n  private updateFdaStatus(old: FdaConfigDto, newer: FdaConfigDto) {\r\n    // we do not update PhysicalAddress!\r\n    old.status = newer.status;\r\n    old.position = newer.position;\r\n    old.dynamicalAddress = newer.dynamicalAddress;\r\n    old.fdaConfigRef = this.fdaService.getFdaConfigByPhysicalAddress(old.physicalAddress);\r\n    old.lastSeen = newer.lastSeen;\r\n    old.discovered = newer.discovered;\r\n    old.operational = newer.operational;\r\n    old.nakCounter = newer.nakCounter;\r\n    old.noFollower = newer.noFollower;\r\n    old.triggeredRePairCount = newer.triggeredRePairCount;\r\n    old.status = newer.status;\r\n    old.timeoutCounter = newer.timeoutCounter;\r\n    SystemHealthService.updateDamperStatus(old.damper1, newer.damper1);\r\n    SystemHealthService.updateDamperStatus(old.damper2, newer.damper2);\r\n  }\r\n\r\n  private static updateDamperStatus(oldDamper: DamperConfigDto, newDamper: DamperConfigDto) {\r\n    oldDamper.currentDamperMode = newDamper.currentDamperMode;\r\n    oldDamper.currentState = newDamper.currentState;\r\n    oldDamper.currentStates = newDamper.currentStates;\r\n    oldDamper.damperMode = newDamper.damperMode;\r\n    oldDamper.damperType = newDamper.damperType;\r\n    oldDamper.disabled = newDamper.disabled;\r\n    oldDamper.groups = newDamper.groups;\r\n    oldDamper.name = newDamper.name;\r\n    oldDamper.number = newDamper.number;\r\n    oldDamper.physicalAddress = newDamper.physicalAddress;\r\n    oldDamper.position = newDamper.position;\r\n    oldDamper.stateCorrelates = newDamper.stateCorrelates;\r\n    oldDamper.type = newDamper.type;\r\n\r\n    oldDamper.relayStateBoot = newDamper.relayStateBoot;\r\n    oldDamper.relayStateNormal = newDamper.relayStateNormal;\r\n    oldDamper.relayStateAlarm = newDamper.relayStateAlarm;\r\n    oldDamper.relayStatePowerLoss = newDamper.relayStatePowerLoss;\r\n    oldDamper.relayStateBusError = newDamper.relayStateBusError;\r\n  }\r\n\r\n// from component\r\n  get applicationServiceReachable(): boolean {\r\n    return this.guibackendServiceStatus == true && this.applicationServiceStatus == true;\r\n  }\r\n\r\n  getFdcTimeDiffMinutes(): number {\r\n    return Math.round(this.fdcTimeDiff / 60000);\r\n  }\r\n\r\n  timeDiffOk(): boolean {\r\n    return Math.abs(this.fdcTimeDiff) <= 1800000;\r\n  }\r\n\r\n  groupsInAlarmState(): number {\r\n    return this.status.damperGroups.filter(dg => dg.currentAlarmState > 0).length;\r\n  }\r\n\r\n  groupsInTimeoutState(): number {\r\n    return this.status.damperGroups.filter(dg => dg.currentTimeoutState > 0 && dg.currentAlarmState === 0).length;\r\n  }\r\n\r\n  groupsConfigurationError(): number {\r\n    return this.status.damperGroups.filter(dg =>\r\n      dg.bmaAlarm === undefined ||\r\n      dg.bmaAlarm === null ||\r\n      dg.bmaAlarm.length === 0).length;\r\n  }\r\n\r\n  systemHealthStatus(): SystemHealthStatus {\r\n    if ((Math.abs(this.fdcService.fdcTimeDiff) <= 1800000) &&\r\n      this.applicationServiceStatus === true &&\r\n      this.mailerServiceStatus === true &&\r\n      this.guibackendServiceStatus === true &&\r\n      this.status.fdas.configuredNotInStatus.length === 0 &&\r\n      this.status.busMode === 'Ring' &&\r\n      this.status.damperGroups.find(dg => dg.currentAlarmState > 0) === undefined &&\r\n      this.status.damperGroups.find(dg => dg.currentTimeoutState > 0) === undefined\r\n    ) {\r\n      return SystemHealthStatus.OK;\r\n    } else if (\r\n      this.guibackendServiceStatus !== undefined &&\r\n      ((Math.abs(this.fdcService.fdcTimeDiff) > 1800000) ||\r\n        this.applicationServiceStatus === false ||\r\n        this.mailerServiceStatus === false ||\r\n        !this.guibackendServiceStatus) ||\r\n      this.status.fdas.configuredNotInStatus.length > 0 ||\r\n      this.status.busMode === 'Line' ||\r\n      this.status.damperGroups.find(dg => dg.currentAlarmState > 0) !== undefined ) {\r\n      return SystemHealthStatus.WARNING;\r\n    } else if (this.guibackendServiceStatus === undefined ||\r\n      (this.guibackendServiceStatus && this.applicationServiceStatus === undefined) ||\r\n      (this.guibackendServiceStatus && this.mailerServiceStatus === undefined) ||\r\n      this.status.damperGroups.find(dg => dg.currentTimeoutState > 0 && dg.currentAlarmState === 0) !== undefined) {\r\n      return SystemHealthStatus.LOADING;\r\n    }\r\n\r\n    return SystemHealthStatus.WARNING;\r\n  }\r\n}\r\n\r\nenum SystemHealthStatus {\r\n  OK,\r\n  WARNING,\r\n  LOADING\r\n}\r\n\r\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast: any) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n\n  clear() {\n    this.toasts.splice(0, this.toasts.length);\n  }\n}\n","export class LocationUtils {\r\n  static backendHostUrl(): string {\r\n    return location.protocol + '//' + location.hostname + '/api';\r\n  }\r\n}\r\n","import * as _ from \"lodash\";\r\n\r\nexport class ObjectUtils {\r\n  static convertBooleansToNumbers(data: any): any {\r\n    if (Array.isArray(data)) {\r\n      let converted = [] as any[];\r\n      data.forEach(value => converted.push(ObjectUtils.convertBooleansToNumbers(value)));\r\n      return converted;\r\n    } else {\r\n      let clone = _.cloneDeep(data);\r\n      let keys = Object.keys(clone);\r\n      keys.forEach(key => {\r\n        if (typeof clone[key] === 'object') {\r\n          clone[key] = ObjectUtils.convertBooleansToNumbers(data[key]);\r\n        } else if (typeof clone[key] === 'boolean') {\r\n          clone[key] = clone[key] ? 1 : 0; // faster than unary +\r\n        }\r\n      });\r\n      return clone;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {DamperGroupService} from \"../services/dto-services/damper-group.service\";\r\nimport {DamperGroupConfigDto} from \"../dto/damperGroupConfig.class\";\r\n\r\nexport class DamperGroupNameValidator {\r\n  static createValidator(damperGroupService: DamperGroupService, shadow: DamperGroupConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return damperGroupService.checkIfNameUnique({name: control.value} as DamperGroupConfigDto)\r\n        .pipe(\r\n          map((result: boolean) => (shadow.name !== control.value && result) ? {usernameAlreadyExists: true} : null)\r\n        );\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {InputService} from \"../services/dto-services/input.service\";\r\nimport {InputConfigDto} from \"../dto/inputConfig.class\";\r\n\r\nexport class InputNameValidator {\r\n  static createValidator(inputService: InputService, shadowInput: InputConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return inputService.checkIfNameUnique({name: control.value} as InputConfigDto)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (shadowInput.name !== control.value && result) ? {usernameAlreadyExists: true} : null\r\n          )\r\n        );\r\n    };\r\n  }\r\n}\r\n\r\nexport class InputNumberValidator {\r\n  static createValidator(inputService: InputService, shadowInput: InputConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return inputService.checkIfNumberUnique({number: control.value} as InputConfigDto)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (shadowInput.number !== control.value && result) ? {numberAlreadyExists: true} : null)\r\n        );\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {MailTemplateConfigDto} from \"../dto/mailTemplateConfig.class\";\r\nimport {MailTemplateService} from \"../services/dto-services/mail-template.service\";\r\n\r\nexport class MailTemplateNameValidator {\r\n  static createValidator(service: MailTemplateService, shadowData: MailTemplateConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return service.checkIfNameUnique({name: control.value} as MailTemplateConfigDto)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (shadowData.name !== control.value && result) ? {templateNameAlreadyExists: true} : null\r\n          )\r\n        );\r\n    };\r\n  }\r\n}\r\n\r\nexport class MailTemplateEmailValidator {\r\n  static createValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      let mailsValid = true;\r\n      if (control.value.length) {\r\n        (control.value as []).forEach((val: string) => {\r\n          let tempInput = document.createElement('input') as HTMLInputElement;\r\n          tempInput.value = val;\r\n          console.log(val + ' / ' + tempInput.checkValidity());\r\n          tempInput.type = 'email';\r\n          mailsValid = mailsValid && tempInput.checkValidity();\r\n        });\r\n      }\r\n      console.log(mailsValid);\r\n      return of(!mailsValid)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (result) ? {templateNameAlreadyExists: true} : null\r\n          )\r\n        );\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {OutputConfigDto} from \"../dto/outputConfig.class\";\r\nimport {OutputService} from \"../services/dto-services/output.service\";\r\n\r\nexport class OutputNameValidator {\r\n  static createValidator(outputService: OutputService, shadow: OutputConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return outputService.checkIfNameUnique({name: control.value} as OutputConfigDto)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (shadow.name !== control.value && result) ? {usernameAlreadyExists: true} : null\r\n          )\r\n        );\r\n    };\r\n  }\r\n}\r\n\r\nexport class OutputNumberValidator {\r\n  static createValidator(outputService: OutputService, shadow: OutputConfigDto): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return outputService.checkIfNumberUnique({number: control.value} as OutputConfigDto)\r\n        .pipe(\r\n          map((result: boolean) =>\r\n            (shadow.number !== control.value && result) ? {numberAlreadyExists: true} : null)\r\n        );\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}